singleton shadow:io@Console
{
	boolean wasLF = false;
	public create()
	{
		init();
	}
	private native init() => ();

	public readLine() => ( String, boolean eof )
	{
		var string = MutableString:create();
		( code c, boolean eof ) = readCode();
		if ( wasLF and c == '\n' )
			( c, eof ) = readCode();
		while ( c != '\n' and c != '\r' and !eof )
		{
			string.append(c);
			( c, eof ) = readCode();
		}
		wasLF = ( c == '\r' );
		return ( #string, eof );
	}
	
	public readString() => ( String, boolean eof )
	{
		var string = MutableString:create();
		( code c, boolean eof ) = readCode();
		while( !eof and (c == '\n' or c == '\r' or c == ' ' or c == '\t'))
			( c, eof ) = readCode();
		while( !eof and c != '\n' and c != '\r' and c != ' ' and c != '\t')
		{
			string.append(c);
			( c, eof ) = readCode();
		}
		wasLF = ( c == '\r' );
		return ( #string, eof );
	}
	
	public readCode() => ( code, boolean eof )
	{
		int value;
		boolean eof;
		( value, eof ) = readByte();
		if ( value < 0 )
		{
			int bytes = 0;
			byte mask = 1y << 7y >> 1y;
			while ( value >= mask )
			{
				bytes += 1;
				mask >>= 1y;
			}
			value &= ~mask;
			while ( bytes > 0 )
			{
				value <<= 6;
				byte b;
				( b, eof ) = readByte();
				value |= b & 0b00111111y;
				bytes -= 1;
			}
		}
		return ( cast<code>(value), eof );
	}
	public native readByte() => ( byte, boolean eof );

	public print( nullable Object value ) => ( Console )
	{
		return print(#value);
	}
	public printLine( nullable Object value ) => ( Console )
	{
		return print(value).printLine();
	}
	
	public debugPrint(int value) => ()
	{	
		if( value < 0 )
		{
			print("-");
			value = -value;
		}	
		
		int power = 10;
		while( power < value )
			power *= 10;			
		power /= 10;		
		
		int digit = 0;
		
		while( power > 0 )
		{
			digit = value / power;
			value = value % power;
			power /= 10;
			if( digit == 0 )
				print("0");
			else if( digit == 1)
				print("1");
			else if( digit == 2)
				print("2");
			else if( digit == 3)
				print("3");
			else if( digit == 4)
				print("4");
			else if( digit == 5)
				print("5");
			else if( digit == 6)
				print("6");
			else if( digit == 7)
				print("7");
			else if( digit == 8)
				print("8");
			else if( digit == 9)
				print("9");
		}
				
		printLine();							
	}
	
	public native print( String value ) => ( Console );
	public native printLine() => ( Console );

	public printError( nullable Object value ) => ( Console )
	{
		return printError(#value);
	}
	public printErrorLine( nullable Object value ) => ( Console )
	{
		return printError(value).printErrorLine();
	}
	public native printError( String value ) => ( Console );
	public native printErrorLine() => ( Console );
}
