#!/bin/bash

function color {
	COLOR=$1
	shift
	if [ -t 2 ]; then
		echo -e \\x1b[1\;${COLOR}m$@\\x1b[0m
	else
		echo -e $@
	fi
}
function red {
	color 31 $@ >&2
}
function green {
	color 32 $@
}
function yellow {
	color 33 $@ >&2
}

[ -z "$CC" ] && CC="$(which clang gcc | head --lines=1)"
NOTDONE=true
COMPILE=true
RUN=false
FILE=a.out
IMPORT=
OPTIMIZED=
FLAGS=
while [ -n "$1" ]; do
	case "$1" in
		-O | --optimized)
			OPTIMIZED=-O3
		;;
		-g | --debug)
			FLAGS=-g
		;;
		--interpret)
			COMPILE=false
			yellow "Exceptions may not work in $1 mode."
		;;
		-c | --compile)
			COMPILE=true
		;;
		-r | --run)
			RUN=true
		;;
		-o*)
			FILE="${1:2}"
			if [ -z "$FILE" ]; then
				shift
				FILE="$1"
			fi 
		;;
		--output=*)
			FILE="${1:9}"
		;;
		--output)
			shift
			FILE="$1"
		;;
		-i*)
			TEMP="${1:2}"
			if [ -z "$TEMP" ]; then
				shift
				TEMP="$1"
			fi
			IMPORT="$IMPORT $TEMP.ll"
		;;
		--import=*)
			IMPORT="$IMPORT ${1:9}.ll"
		;;
		--import)
			shift
			IMPORT="$IMPORT $1.ll"
		;;
		--)
			shift
			TESTPREFIX="$1"
		;;
		-*)
			yellow "Unknown option $1."
		;;
		*)
			TESTPREFIX="$1"
		;;
	esac
	shift
done
FILE="$(cd $(dirname "$FILE") ; pwd)/$(basename "$FILE")"

if [ -z "$TESTPREFIX" ]; then
	green "Usage: $0 <test prefix> <other files>..."
elif [ -z "$(which llvm-link)" ]; then
	red "You do not have llvm installed."
elif [ -z "$CC" ]; then
	red "You do not have clang or gcc installed."
else
	llvm-link Unwind64.ll Linux.ll standard/*.ll io/*.ll utility/*.ll \
			$IMPORT "test/${TESTPREFIX}.ll" \
			<(sed -e "s/Test/${TESTPREFIX}/g" Main.ll) | opt $OPTIMIZED | (
		if $COMPILE; then
			llc $OPTIMIZED | tee >(if  [[ "$FLAGS" =~ -g ]]; then cat >-; else cat >/dev/null; fi) | \
					"$CC" $OPTIMIZED $FLAGS -x assembler - -lm -lrt \
					-o "$FILE"
			if [[ $? == 1 ]] && $RUN; then
				"$FILE" "$@" <&10
			fi
		elif $RUN; then
			lli $OPTIMIZED
		fi
	) 10<&0
fi
