import shadow:io@Console;

class shadow:test@GenericArrayTest
{
	public main() => ()
	{
		Console out;
		int[] array1 = int:create[10];
		
		array1[3] = 4;
		array1[9] = 10;
		
		
		for(int i = 0; i < array1->size; i += 1)
			out.print(array1[i] # " ");
		out.printLine();
		
		MutableString string = MutableString:create("peach");
		/*
		uint value = 35u;
		do
		{					
			string.append(digit(value % 10u));
			value /= 10u;		
		}
		while (value != 0u);
		*/			
		
		//out.printLine(string[0]);
		//out.printLine(string[1]);					
		out.printLine(string.toString());				
				
		out.printLine(array1);
		
		String[] array2 = {"one", "two", "three", "four", "five"};
		nullable String[] array3 = String:null[5];
		array3[1] = "Hey";
		array3[4] = "Ho";	
				
		
		Array<int> intArray = array1;
		Array<String> stringArray = array2;
		ArrayNullable<String> otherArray = array3;
		
		int[] array4 = cast<int[]>(intArray);	
		
		nullable String[] array5 = cast<String[]>(otherArray);
		
		out.printLine(array4);			
		out.printLine(array5);
	}
	
	private digit(uint digit) => (byte)
	{
		if (digit < 10u)
			return cast<byte>(digit + '0');
		return cast<byte>(digit - 10u + 'a');
	}
}