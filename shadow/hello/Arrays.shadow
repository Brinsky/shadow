import shadow.standard@Array;
import shadow.io@Console;

class shadow.hello@Arrays
{
	public static main( String[] args ) => ()
	{
		try
		{
			String[][] array = new String[4][args.getLength() + 10];

			for ( int i = 0; i < args.getLength(); i += 1 )
			{
				check(array[1])[args.getLength() - (i + 1)] = check(array[2])[i] = check(array[3])[i] = check(args[i]);
				check(array[0])[i] = check(args[i]).substring(1, check(args[i]).getLength() - 1);
			}
			array[2] = sort(array[2]);
			array[3] = check(array[1]);
			array[3] = sort(array[3]);

			for ( int i = 0; i < array.getLength(); i += 1 )
			{
				Console.printLine();
				for ( int j = 0; j < check(array[i]).getLength(); j += 1 )
				{
					Console.print('\t');
					Console.print(i);
					Console.print(',');
					Console.print(j);
					Console.print(":\t");
					Console.printLine(check(array[i])[j]);
				}
			}
			Console.printLine();

			/*Console.printLine("================================================================================");

			Console.print("Arrays");
			for (int i = 0; i < args.getLength(); i += 1)
			{
				Console.print(' ');
				Console.print(args[i]);
			}
			Console.printLine();
	
			Console.printLine("Arguments:");
			for (int i = 0; i < args.getLength(); i += 1)
			{
				Console.print('\t');
				Console.print(i);
				Console.print(":\t");
				Console.printLine(args[i]);
			}
			Console.printLine();
	
			Console.printLine("Arguments (backwards):");
			for (int i = args.getLength() - 1; i >= 0; i -= 1)
			{
				Console.print('\t');
				Console.print(i);
				Console.print(":\t");
				Console.printLine(args[i]);
			}
			Console.printLine();
	
			String[] sorted = sort(args);
			Console.printLine("Arguments (sorted):");
			for (int i = 0; i < sorted.getLength(); i += 1)
			{
				Console.print('\t');
				Console.print(i);
				Console.print(":\t");
				Console.printLine(sorted[i]);
			}
			Console.printLine();
	
			Console.printLine("Arguments (original):");
			for (int i = 0; i < args.getLength(); i += 1)
			{
				Console.print('\t');
				Console.print(i);
				Console.print(":\t");
				Console.printLine(args[i]);
			}
			Console.printLine();*/
		}
		recover
		{
			Console.printLine("NullPointerException!");
		}
	}

	public static sort( String[] array ) => ( String[] )
	{
		String[] newArray = new String[array.getLength()];
		for ( int i = 0; i < newArray.getLength(); i += 1 )
			newArray[i] = array[i];
		for ( int i = newArray.getLength() - 1; i > 0; i -= 1 )
		{
			int maxIndex = i;
			nullable String max = newArray[i];
			for ( int j = i - 1; j >= 0; j -= 1 )
			{
				try
				{
					String current = check(newArray[j]);
					if ( current.compareTo(max) > 0 )
					{
						maxIndex = j;
						max = current;
					}
				}
				recover
				{
					// if we define null as less than everything, then
					// current can not be greater than max, so do nothing
				}
			}
			newArray[maxIndex] = newArray[i];
			newArray[i] = max;
		}
		return newArray;
	}
}
