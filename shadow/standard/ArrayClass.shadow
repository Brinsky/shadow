immutable class shadow:standard@ArrayClass extends GenericClass
{	
	Class internalParameter;
	//generic type parameter is for the outside world
	//internalParameter can be different if it is itself an array

	//never gets called
	protected create(int flags, int size, String name, Class parent, immutable Class[] interfaces, immutable Object[] data, immutable Object[] parameters, Class internalClass)
	{
		super(flags, size, name, parent, interfaces, data, parameters);		
		this:internalParameter = internalParameter;
	}
	
	private findClass(GenericClass[] classes, Class internal) => (nullable Class)
	{
		for( int i = 0; i < classes->size; i += 1 )
		{	
			readonly ArrayClass arrayClass = cast<ArrayClass>(classes[i]);				
			if( internal.equal(arrayClass:internalParameter) )									
				return arrayClass;				
		}
		
		throw CastException:create("Array type argument not found: <" # internal # ">");
	}
}
