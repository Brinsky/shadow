locked class shadow:standard@
	Mutex
{
	immutable Object mutex;
	boolean isValid;

	private native init() => (immutable Object);
	private readonly native lock(immutable Object mutex) => (int);
	private readonly native unlock(immutable Object mutex) => (int);
	private native destroyNative(immutable Object mutex) => (int);
	
	public create()
	{
		mutex = init();
		isValid = true;
	}
	
	public readonly lock() => ()
	{
		if(isValid)
			lock(mutex);
	}
	
	public readonly unlock() => ()
	{
		if(isValid)
			unlock(mutex);
	}
	
	public free() => ()
	{
		if(isValid)
		{
			destroyNative(mutex);
			isValid = false;
		}
	}
}