/**
 * @author Claude Abounegm
 */
locked class shadow:standard@
	Mutex
{
	private readonly native lock(Pointer ptr) => (int);
	private readonly native unlock(Pointer ptr) => (int);
	private readonly native initMutex(Pointer ptr) => (int);
	private readonly native destroyMutex(Pointer ptr) => (int);
	private readonly native get handleSize() => (int);

	Handle handle;

	public create()
	{
		handle = Handle:create(this->handleSize);
		initMutex(handle->ptr);
	}
	
	public readonly lock() => ()
	{
		if(handle->isValid)
			lock(handle->ptr);
	}
	
	public readonly unlock() => ()
	{
		if(handle->isValid)
			unlock(handle->ptr);
	}
	
	public free() => ()
	{
		if(handle->isValid)
		{
			destroyMutex(handle->ptr);
			handle.free();
		}
	}
}