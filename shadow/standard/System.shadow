/**
 * Singleton {@code System} provides access to a few useful system settings
 * and values.
 */
immutable singleton shadow:standard@System
{
	/**
	 * Returns the number of nanoseconds elapsed since the Unix Epoch,
	 * 12:00:00 AM January 1, 1970.  Accuracy will usually be much coarser
	 * than nanoseconds and is dependent on hardware and software system
	 * characteristics.
	 * @return nanoseconds elapsed since midnight on January 1, 1970
	 */
	public native nanoTime() => ( long );
	
	/// Gets the {@code Thread} instance of the current executing thread.
	public native get currentThread() => (Thread);
	
	/// Gets the {@code Thread} instance of the main thread.
	public native get mainThread() => (Thread);
	
	/**
	* Suspends the current running thread for {@code sec} seconds plus
	* {@code nsec} nanoseconds.
	* 
	* @param sec The seconds portion.
	* @param nsec The nanseconds portion [0 - 999,999,999].
	* 
	* @throws IllegalArgumentException If {@code sec} is negative or {@code nsec} is not in the range [0, 999,999,999].
	*/
	public sleep(int sec, int nsec) => ()
	{
		System->currentThread.sleep(sec, nsec);
	}
	
	/**
	* Suspends the current running thread for {@code ms} milliseconds.
	* 
	* @param ms The milliseconds to pause the thread for.
	*/
	public sleep(int ms) => ()
	{
		System->currentThread.sleep(ms);
	}
}