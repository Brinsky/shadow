/**
 * Singleton {@code System} provides access to a few useful system settings
 * and values.
 */
immutable singleton shadow:standard@System
{
	private native sleep(Thread thread, int milliseconds) => ();
	private native sleep(Thread thread, TimeSpan time) => ();
	
	/**
	 * Returns the number of nanoseconds elapsed since the Unix Epoch,
	 * 12:00:00 AM January 1, 1970.  Accuracy will usually be much coarser
	 * than nanoseconds and is dependent on hardware and software system
	 * characteristics.
	 * @return nanoseconds elapsed since midnight on January 1, 1970
	 */
	public native nanoTime() => ( long );
	
	/// Gets the {@code Thread} instance of the current executing thread.
	public native get currentThread() => (Thread);
	
	/// Gets the {@code Thread} instance of the main thread.
	public native get mainThread() => (Thread);
	
	/**
	* Suspends the current running thread for {@code milliseconds} milliseconds.
	* 
	* @param milliseconds The milliseconds to pause this thread for.
	*/
	public sleep(int milliseconds) => ()
	{
		sleep(this->currentThread, milliseconds);
	}
	
	/**
	* Suspends the current running thread for the specfied amount of time.
	* 
	* @param time The amount of time to pause this thread for.
	*/
	public sleep(TimeSpan time) => ()
	{
		sleep(this->currentThread, time);
	}
}