/**
 * Class {@code Object} is the parent class of all classes in Shadow.
 * It provides a useful catch-all superclass as well as a small number of
 * basic methods that all classes have.  
 */
class shadow:standard@Object
{
	/**
	 * Retrieves the {@code Class} object associated with any given object.
	 * @return {@code Class} of the current object
	 */
	public native readonly locked getClass() => ( Class );
	
	/** 
	 * Returns a {@code String} representation of the object. This default
	 * implementation returns a representation of class information.
	 * Most classes should override this method to provide a more useful
	 * representation.	 
	 * @return {@code String} representation
	 */ 
	public readonly toString() => ( String )
	{
		return getClass().toString();
	}
	
	// TEMP METHODS
	public readonly locked send(Object data, Thread to) => ()
	{
		CurrentThread.sendTo(data, to);
	}
	
	public readonly locked receive(Class expectedType) => (Object, Thread)
	{
		return CurrentThread.receiveFirst(expectedType);
	}
	
	public readonly locked receive(Class expectedType, Thread from) => (Object)
	{
		return CurrentThread.receiveFirstFrom(expectedType, from);
	}
}
