package shadow.tac;

import shadow.parser.ShadowException;
import shadow.tac.nodes.TACArrayRef;
import shadow.tac.nodes.TACBinary;
import shadow.tac.nodes.TACBlock;
import shadow.tac.nodes.TACBranch;
import shadow.tac.nodes.TACCall;
import shadow.tac.nodes.TACCast;
import shadow.tac.nodes.TACCatch;
import shadow.tac.nodes.TACClass;
import shadow.tac.nodes.TACClass.TACClassData;
import shadow.tac.nodes.TACClass.TACMethodTable;
import shadow.tac.nodes.TACConstantRef;
import shadow.tac.nodes.TACConstructGeneric;
import shadow.tac.nodes.TACConversion;
import shadow.tac.nodes.TACCopyMemory;
import shadow.tac.nodes.TACDestinationPhiRef;
import shadow.tac.nodes.TACFieldRef;
import shadow.tac.nodes.TACLabelRef;
import shadow.tac.nodes.TACLabelRef.TACLabel;
import shadow.tac.nodes.TACLandingpad;
import shadow.tac.nodes.TACLength;
import shadow.tac.nodes.TACLiteral;
import shadow.tac.nodes.TACLoad;
import shadow.tac.nodes.TACLongToPointer;
import shadow.tac.nodes.TACMethodRef;
import shadow.tac.nodes.TACNewArray;
import shadow.tac.nodes.TACNewObject;
import shadow.tac.nodes.TACNodeRef;
import shadow.tac.nodes.TACNot;
import shadow.tac.nodes.TACPhiRef;
import shadow.tac.nodes.TACPhiRef.TACPhi;
import shadow.tac.nodes.TACPointerToLong;
import shadow.tac.nodes.TACReference;
import shadow.tac.nodes.TACResume;
import shadow.tac.nodes.TACReturn;
import shadow.tac.nodes.TACSame;
import shadow.tac.nodes.TACSequence;
import shadow.tac.nodes.TACSequenceElement;
import shadow.tac.nodes.TACSequenceRef;
import shadow.tac.nodes.TACSingletonRef;
import shadow.tac.nodes.TACStore;
import shadow.tac.nodes.TACThrow;
import shadow.tac.nodes.TACTypeId;
import shadow.tac.nodes.TACUnary;
import shadow.tac.nodes.TACUnwind;
import shadow.tac.nodes.TACVariableRef;

public interface TACVisitor
{
	public abstract void visit(TACArrayRef node) throws ShadowException;
	public abstract void visit(TACBinary node) throws ShadowException;
	public abstract void visit(TACBlock node) throws ShadowException;
	public abstract void visit(TACBranch node) throws ShadowException;
	public abstract void visit(TACCall node) throws ShadowException;
	public abstract void visit(TACCast node) throws ShadowException;
	public abstract void visit(TACCatch node) throws ShadowException;
	public abstract void visit(TACClass node) throws ShadowException;
	public abstract void visit(TACClassData node) throws ShadowException;
	public abstract void visit(TACConstantRef node) throws ShadowException;
	public abstract void visit(TACCopyMemory node) throws ShadowException;
	public abstract void visit(TACDestinationPhiRef node) throws ShadowException;
	public abstract void visit(TACFieldRef node) throws ShadowException;
	public abstract void visit(TACLabel node) throws ShadowException;
	public abstract void visit(TACLabelRef node) throws ShadowException;
	public abstract void visit(TACLandingpad node) throws ShadowException;
	public abstract void visit(TACLength node) throws ShadowException;
	public abstract void visit(TACLiteral node) throws ShadowException;
	public abstract void visit(TACLoad node) throws ShadowException;
	public abstract void visit(TACLongToPointer node) throws ShadowException;
	public abstract void visit(TACMethodRef node) throws ShadowException;
	public abstract void visit(TACMethodTable tacMethodTable) throws ShadowException;
	public abstract void visit(TACNewArray node) throws ShadowException;
	public abstract void visit(TACNewObject node) throws ShadowException;
	public abstract void visit(TACNodeRef node) throws ShadowException;
	public abstract void visit(TACNot node) throws ShadowException;
	public abstract void visit(TACPhi node) throws ShadowException;
	public abstract void visit(TACPhiRef node) throws ShadowException;
	public abstract void visit(TACPointerToLong node) throws ShadowException;
	public abstract void visit(TACSequenceElement node) throws ShadowException;
	public abstract void visit(TACReference node) throws ShadowException;
	public abstract void visit(TACResume node) throws ShadowException;
	public abstract void visit(TACReturn node) throws ShadowException;
	public abstract void visit(TACSame node) throws ShadowException;
	public abstract void visit(TACSequence node) throws ShadowException;
	public abstract void visit(TACSequenceRef node) throws ShadowException;
	public abstract void visit(TACSingletonRef node) throws ShadowException;
	public abstract void visit(TACStore node) throws ShadowException;
	public abstract void visit(TACThrow node) throws ShadowException;
	public abstract void visit(TACTypeId node) throws ShadowException;
	public abstract void visit(TACUnary node) throws ShadowException;
	public abstract void visit(TACUnwind node) throws ShadowException;
	public abstract void visit(TACVariableRef node) throws ShadowException;
	public abstract void visit(TACConstructGeneric node) throws ShadowException;
	public abstract void visit(TACConversion node) throws ShadowException;
}
