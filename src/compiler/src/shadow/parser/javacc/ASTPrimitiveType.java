/* Generated By:JJTree: Do not edit this line. ASTPrimitiveType.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=true,VISITOR=true,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package shadow.parser.javacc;

import shadow.typecheck.type.Type;

public
@SuppressWarnings("all")
class ASTPrimitiveType extends SimpleNode {
  public ASTPrimitiveType(int id) {
    super(id);
  }

  public ASTPrimitiveType(ShadowParser p, int id) {
    super(p, id);
  }

	public void setImage(String image) {
		this.image = image;
		this.type = new Type(image);
	}

    public void dump(String prefix) {
    	String className = this.getClass().getSimpleName();
    	if(type == null)
    		System.out.println(prefix + className + "(" + line + ":" + column + ")");
    	else
    		System.out.println(prefix + className + "(" + line + ":" + column + "): " + type.getTypeName());
        dumpChildren(prefix);
    }

  /** Accept the visitor. **/
  public Object jjtAccept(ShadowParserVisitor visitor, Object data) throws ShadowException {
    return visitor.visit(this, data);
  }
}
/* JavaCC - OriginalChecksum=7784e844d05b94f77bb9201999721b64 (do not edit this line) */
