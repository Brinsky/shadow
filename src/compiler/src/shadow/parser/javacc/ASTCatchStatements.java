/* Generated By:JJTree: Do not edit this line. ASTCatchStatements.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=true,VISITOR=true,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package shadow.parser.javacc;

import java.util.ArrayList;
import java.util.List;

import shadow.typecheck.type.Type;

public
@SuppressWarnings("all")
class ASTCatchStatements extends SimpleNode {

	private int catches = 0;
	private List<Type> catchParameters = new ArrayList<Type>();
	
	public void addCatch()
	{
		catches++;		
	}
	
	public int getCatches()
	{		
		return catches;		
	}
	
	public void addCatchParameter(Type type)
	{
		catchParameters.add(type);
	}
	
	public List<Type> getCatchParameters()
	{
		return catchParameters;
	}
	
  public ASTCatchStatements(int id) {
    super(id);
  }

  public ASTCatchStatements(ShadowParser p, int id) {
    super(p, id);
  }


  /** Accept the visitor. **/
  public Object jjtAccept(ShadowParserVisitor visitor, Boolean data) throws ShadowException {
    return visitor.visit(this, data);
  }
}
/* JavaCC - OriginalChecksum=1199c74151122c8b2295eca6fa842d4c (do not edit this line) */
