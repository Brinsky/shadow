/* Generated By:JJTree: Do not edit this line. ASTFinallyStatement.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=true,VISITOR=true,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package shadow.parser.javacc;

public
@SuppressWarnings("all")
class ASTFinallyStatement extends SimpleNode {
	
	private boolean _finally = false;
	
	
	public void addFinally()
	{
		_finally = true;
	}
	
	public boolean hasFinally()
	{
		return _finally;		
	}
	
	public int getBlocks()
	{
		int value = 0;
		
		if( _finally )
			value++;
		
		ASTRecoverStatement child = (ASTRecoverStatement) jjtGetChild(0);
		if( child.hasRecover() )
			value++;
		
		ASTCatchStatements grandchild = (ASTCatchStatements) child.jjtGetChild(0);
		value += grandchild.getCatches();
		
		return value;
		
	}
	
	
  public ASTFinallyStatement(int id) {
    super(id);
  }

  public ASTFinallyStatement(ShadowParser p, int id) {
    super(p, id);
  }


  /** Accept the visitor. **/
  public Object jjtAccept(ShadowParserVisitor visitor, Boolean data) throws ShadowException {
    return visitor.visit(this, data);
  }
}
/* JavaCC - OriginalChecksum=48cad04696871387db18519daa41de95 (do not edit this line) */
