/* Generated By:JJTree: Do not edit this line. ASTTryStatement.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=true,VISITOR=true,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package shadow.parser.javacc;

public
@SuppressWarnings("all")
class ASTTryStatement extends SimpleNode {
		
	private int catches = 0;
	private boolean recover = false;
	private boolean _finally = false;
	
	public void addCatch()
	{
		catches++;		
	}
	
	public void addRecover()
	{
		recover = true;				
	}
	
	public void addFinally()
	{
		_finally = true;		
	}
	
	public int getBlocks()
	{
		int value = catches;
		if( recover )
			value++;
		if( _finally )
			value++;
		
		return value;		
	}
	
	public int getCatches()
	{
		return catches;
	}
	
	public boolean hasFinally()
	{
		return _finally;
	}
	
	public boolean hasRecover()
	{
		return recover;
	}
		
	
  public ASTTryStatement(int id) {
    super(id);
  }

  public ASTTryStatement(ShadowParser p, int id) {
    super(p, id);
  }


  /** Accept the visitor. **/
  public Object jjtAccept(ShadowParserVisitor visitor, Boolean secondVisit) throws ShadowException {
    return visitor.visit(this, secondVisit);
  }
}
/* JavaCC - OriginalChecksum=d0a6f893a75cd9fcdc4d152c1f6b63fc (do not edit this line) */
