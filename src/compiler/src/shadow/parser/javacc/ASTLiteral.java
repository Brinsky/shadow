/* Generated By:JJTree: Do not edit this line. ASTLiteral.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=true,VISITOR=true,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package shadow.parser.javacc;

public
@SuppressWarnings("all")
class ASTLiteral extends SimpleNode {
  public ASTLiteral(int id) {
    super(id);
  }

  public ASTLiteral(ShadowParser p, int id) {
    super(p, id);
  }


  /** Accept the visitor. **/
  public Object jjtAccept(ShadowParserVisitor visitor, Object data) throws ShadowException {
    return visitor.visit(this, data);
  }
  
  public enum LiteralType {
	  INTEGER { public String getTypeName() { return "int"; } },
	  FLOAT { public String getTypeName() { return "float"; } },
	  CODE { public String getTypeName() { return "code"; } },
	  STRING { public String getTypeName() { return "string"; } },
	  BOOLEAN { public String getTypeName() { return "boolean"; } },
	  NULL { public String getTypeName() { return "null"; } };
	  
	  public abstract String getTypeName();
  }
  
  protected LiteralType type;
  
  public void setType(LiteralType type) {
	  this.type = type;
  }
  
  public LiteralType getType() {
	  return type;
  }
}
/* JavaCC - OriginalChecksum=e6f81fb816260e4c3f2f8b9ad1bc1340 (do not edit this line) */
