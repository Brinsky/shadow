/* Generated By:JJTree: Do not edit this line. ASTReferenceType.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=true,VISITOR=true,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package shadow.parser.javacc;

import java.util.LinkedList;
import java.util.List;

import org.apache.commons.logging.Log;

import shadow.Loggers;

public
@SuppressWarnings("all")
class ASTReferenceType extends SimpleNode {
  private static final Log logger = Loggers.TYPE_CHECKER;
  
  public ASTReferenceType(int id) {
    super(id);    
 //   allReferences.add(this);
  }

  public ASTReferenceType(ShadowParser p, int id) {
    super(p, id);  
  //  allReferences.add(this);
  }
  
 // public static List<ASTReferenceType> allReferences = new LinkedList<ASTReferenceType>();


  /** Accept the visitor. **/
  public Object jjtAccept(ShadowParserVisitor visitor, Boolean secondVisit) throws ShadowException {
    return visitor.visit(this, secondVisit);
  }
  
  private List<Integer> arrayDimensions = new LinkedList<Integer>();
  private int currentDimensions = 1;
  
  public List<Integer> getArrayDimensions() {
	  return arrayDimensions;
  }

  public void incrementDimensions() {
	  currentDimensions++;  
  }
  
  public void pushDimensions() {
	  arrayDimensions.add(currentDimensions);
	  currentDimensions = 1;
  }
  
  public void dump(String prefix) {
  	String className = this.getClass().getSimpleName();
	
  	logger.debug(prefix + className + "(" + line + ":" + column + "): " + arrayDimensions);
    
	dumpChildren(prefix);
  }

}
/* JavaCC - OriginalChecksum=7da70a4b1bb235d4c492e29ec9ef71d4 (do not edit this line) */
