class ComplexAccess {

	private Inner i;

	private class Inner 
	{	
	
		public ComplexAccess o;
	
		public jam(int a) => (int) {
	        return 4;
	    }
	}
	
	private stuff() => (Inner)
	{
		return new Inner();	
	}
	    
    public static main() => ()
    {
    	int c;
    	
    	ComplexAccess[] first = new ComplexAccess[100];
    	first[0] = new ComplexAccess();
    	
    	try
    	{
    		c = check(first[0]).stuff().jam(10);    	
    		ComplexAccess outer = new ComplexAccess();    	
    		//check(check(outer.i).o).i = new Inner();
    		outer.i.o.i = new Inner();
    	}
    	recover
    	{}
    }
}