class InlineMethod
{
	public method () => (int, int)
	{
		return (1,2);
	}
	
	public method (int a) => (int)
	{
		return 1;
	}
	
	public method (int a, int b) => (int)
	{
		return 1;
	}

    public test() => () 
    {
		int x;
		int y;
		
		x = method( 3 );
		x = method( 3, 4 );
		x = method( 3, 4 + y );
		
		(x, y) = method();
		
		inline1() => (5, 6);		

		inline2(int a) => (a);
		
		inline3(int a, int b) => (a + b);
		
		(x,y) = inline1();
		
		x = inline2(7);
		
		x = inline3(1, 2);
		
		(int, int) => (int) pointer = inline3;
		
		y = pointer(5, 6);
		
		//inline3 = pointer; //uncomment to see  error
		
		//inline methods cannot be called recursively because of type inference
		//inlineFib(int n) => (n <= 2 ? 1, inlineFib(n - 1) + inlineFib( n - 2 ));
		
		//int z = inlineFib( 4 );			
    }
}