//
// This is our test outter tuple
//
tuple blah {
    // generic vars
    int a;
    short a, b, c;
    int a = 3;
    int a = 3, b = 2, c = "asl";
    int a = 3, b, c = "8";
    int a = 3, b, c = x, d, e = "something";
    
    // arrays
    int[] a;
    int[] a = new int[30];
    
    // object creation
    int b = new int();
    int b = new int(a, b, c);
    int b = new int(1, "blah", a);
    int b = new int(1 < 1);
    int b = new int(a < ~a);

    // casting
    int a = cast<float>(b);
    int a = cast<float>(b + c + 3);
    int a = cast<float>(new int(3));
}

/**
 * This is our test error
 */
error test_error {
    public int a;
    protected short a, b, c;
    private int a = 3;
    private int a = 3, b = 2, c = "asl";
    private int a = 3, b, c = "8";
    private int a = 3, b, c = x, d, e = "something";
    
    public int foo() { }
    
    public void blah(int a, code a) { }
    
    public int blah( ) {
        int a;
        short a, b, c;
        int a = 3;
        int a = 3, b = 2, c = "asl";
        int a = 3, b, c = "8";
        int a = 3, b, c = x, d, e = "something";
        
        a = a + b;
        a = "blah" + a;
        a += a;
        a -= a;
    }
    
    public int blah(int a, short b) {
        int a;
        short a, b, c;
        int a = 3;
        int a = 3, b = 2, c = "asl";
        int a = 3, b, c = "8";
        int a = 3, b, c = x, d, e = "something";
    }
}

/**
 * This is our test exception
 */
exception test_error {
    public int a;
    protected short a, b, c;
    private int a = 3;
    private int a = 3, b = 2, c = "asl";
    private int a = 3, b, c = "8";
    private int a = 3, b, c = x, d, e = "something";
    
    public int foo() { }
    
    public void blah(int a, code a) { }
    
    public int blah( ) {
        int a;
        short a, b, c;
        int a = 3;
        int a = 3, b = 2, c = "asl";
        int a = 3, b, c = "8";
        int a = 3, b, c = x, d, e = "something";
    }
    
    public int blah(int a, short b) {
        int a;
        short a, b, c;
        int a = 3;
        int a = 3, b = 2, c = "asl";
        int a = 3, b, c = "8";
        int a = 3, b, c = x, d, e = "something";
    }
}

/**
 * This is our test class
 */
class test  {

    public int a;
    protected short a, b, c;
    private int a = 3;
    private int a = 3, b = 2, c = "asl";
    private int a = 3, b, c = "8";
    private int a = 3, b, c = x, d, e = "something";

    //
    // Test inner tuple
    //
    private tuple blah {
        int a;
        short a, b, c;
        int a = 3;
        int a = 3, b = 2, c = "asl";
        int a = 3, b, c = "8";
        int a = 3, b, c = x, d, e = "something";
    }

    public int foo() { }
    
    public void blah(int a, code a) { }
    
    public int blah( ) {
        int a;
        short a, b, c;
        int a = 3;
        int a = 3, b = 2, c = "asl";
        int a = 3, b, c = "8";
        int a = 3, b, c = x, d, e = "something";
    }
    
    public int blah(int a, short b) {
        int a;
        short a, b, c;
        int a = 3;
        int a = 3, b = 2, c = "asl";
        int a = 3, b, c = "8";
        int a = 3, b, c = x, d, e = "something";
    }

} // OK
