class shadow.standard@Math
{

	private constructor() { }

	public static min( int x, int y ) => ( int )
	{
		return x < y ? x , y;
	}
	public static max( int x, int y ) => ( int )
	{
		return x > y ? x , y;
	}

	public static native abs( int x ) => ( uint );
	public static native abs( long x ) => ( ulong );
	public static native div( int num, int denom ) => ( int, int );
	public static native div( long num, long denom ) => ( long, long );

	public static native abs( double x ) => ( double );
	public static native floor( double x ) => ( double );
	public static native ceiling( double x ) => ( double );
	public static native mod( double num, double denom ) => ( double );
	public static native parts( double x ) => ( double, double );

	static final double PI = 3.141592653589793;
	static final double E = 2.718281828459045;

	public static native sin( double x ) => ( double );
	public static native cos( double x ) => ( double );
	public static native tan( double x ) => ( double );

	public static native asin( double x ) => ( double );
	public static native acos( double x ) => ( double );
	public static native atan( double x ) => ( double );
	public static native atan( double y, double x ) => ( double );

	public static native sinh( double x ) => ( double );
	public static native cosh( double x ) => ( double );
	public static native tanh( double x ) => ( double );

	public static native sqrt( double x ) => ( double );
	public static native exp( double x ) => ( double );
	public static native pow( int base, uint exp ) => ( int );
	public static native pow( long base, uint exp ) => ( long );
	public static native pow( double base, uint exp ) => ( double );
	public static native pow( double base, double exp ) => ( double );
	public static native ln( double x ) => ( double );
	public static native log( double x ) => ( double );
	public static native log( double base, double x ) => ( double );

}
