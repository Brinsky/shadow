immutable final class shadow.standard@Class
{
	String name = "";
	get nullable Class parent = null;
	Class[] interfaces = Class:create[0];
	nullable Object data = null;
	int size, width, flags;

	private create() { }
	protected native allocate() => ( Object );
	protected native allocate( int size ) => ( Object );

	public isInterface() => ( boolean )
	{
		return (flags & 0b01) != 0;
	}
	public isPrimitive() => ( boolean )
	{
		return (flags & 0b10) != 0;
	}

	public isSubtype( Class other ) => ( boolean )
	{
		if ( this == other )
			return true;
		if ( !other.isInterface() )
			try
			{
				return check(parent).isSubtype(other);
			}
			recover
			{
			}
		else for ( int i = 0; i < interfaces->size; i += 1 )
			try
			{
				if ( check(interfaces[i]).isSubtype(other) )
					return true;
			}
			recover
			{
			}
		return false;
	}

	public toString() => ( String )
	{
		return name;
	}
}
