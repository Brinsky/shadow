	.file	"<stdin>"
	.text
	.align	16, 0x90
	.type	.Lshadow.exception.cleanup,@function
.Lshadow.exception.cleanup:             # @shadow.exception.cleanup
# BB#0:                                 # %entry
	movq	%rsi, %rdi
	jmp	free                    # TAILCALL
.Ltmp0:
	.size	.Lshadow.exception.cleanup, .Ltmp0-.Lshadow.exception.cleanup

	.align	16, 0x90
	.type	.Lread_encoded_value_with_base,@function
.Lread_encoded_value_with_base:         # @read_encoded_value_with_base
# BB#0:                                 # %entry
	pushq	%rax
	movq	%rcx, %r8
	cmpb	$80, %dil
	jne	.LBB1_2
# BB#1:                                 # %aligned
	addq	$7, %rdx
	andq	$-8, %rdx
	movq	(%rdx), %rax
	addq	$8, %rdx
	jmp	.LBB1_20
.LBB1_2:                                # %unaligned
	movb	%dil, %al
	andb	$15, %al
	cmpb	$12, %al
	ja	.LBB1_21
# BB#3:                                 # %unaligned
	movzbl	%al, %eax
	xorl	%ecx, %ecx
	movq	%rdx, %r10
	xorl	%r9d, %r9d
	xorl	%r11d, %r11d
	jmpq	*.LJTI1_0(,%rax,8)
.LBB1_14:                               # %slong
	leaq	8(%rdx), %r10
	movq	(%rdx), %r9
	jmp	.LBB1_15
	.align	16, 0x90
.LBB1_4:                                # %loop.i
                                        # =>This Inner Loop Header: Depth=1
	movzbl	(%r10), %r11d
	movq	%r11, %rax
	andq	$127, %rax
	shlq	%cl, %rax
	orq	%rax, %r9
	addq	$7, %rcx
	incq	%r10
	testb	%r11b, %r11b
	js	.LBB1_4
	jmp	.LBB1_15
	.align	16, 0x90
.LBB1_5:                                # %loop.i12
                                        # =>This Inner Loop Header: Depth=1
	movzbl	(%r10), %r9d
	movq	%r9, %rax
	andq	$127, %rax
	shlq	%cl, %rax
	orq	%rax, %r11
	addq	$7, %rcx
	incq	%r10
	testb	%r9b, %r9b
	js	.LBB1_5
# BB#6:                                 # %loop.end.i
	cmpq	$63, %rcx
	ja	.LBB1_9
# BB#7:                                 # %continue.i
	testb	$64, %r9b
	je	.LBB1_9
# BB#8:                                 # %negate.i
	movq	$-1, %rax
                                        # kill: CL<def> CL<kill> RCX<kill>
	shlq	%cl, %rax
	orq	%rax, %r11
.LBB1_9:                                # %negate.i
	movq	%r11, %r9
	jmp	.LBB1_15
.LBB1_10:                               # %ushort
	leaq	2(%rdx), %r10
	movzwl	(%rdx), %r9d
	jmp	.LBB1_15
.LBB1_11:                               # %uint
	leaq	4(%rdx), %r10
	movl	(%rdx), %r9d
	jmp	.LBB1_15
.LBB1_12:                               # %sshort
	leaq	2(%rdx), %r10
	movswq	(%rdx), %r9
	jmp	.LBB1_15
.LBB1_13:                               # %sint
	leaq	4(%rdx), %r10
	movslq	(%rdx), %r9
.LBB1_15:                               # %continue
	xorl	%eax, %eax
	testq	%r9, %r9
	je	.LBB1_19
# BB#16:                                # %relative
	movb	%dil, %al
	andb	$112, %al
	cmpb	$16, %al
	cmoveq	%rdx, %rsi
	addq	%rsi, %r9
	testb	%dil, %dil
	js	.LBB1_18
# BB#17:
	movq	%r10, %rdx
	movq	%r9, %rax
	jmp	.LBB1_20
.LBB1_18:                               # %indirect
	movq	(%r9), %rax
.LBB1_19:                               # %indirect
	movq	%r10, %rdx
.LBB1_20:                               # %return
	movq	%rax, (%r8)
	movq	%rdx, %rax
	popq	%rdx
	ret
.LBB1_21:                               # %abort
	callq	abort
.Ltmp1:
	.size	.Lread_encoded_value_with_base, .Ltmp1-.Lread_encoded_value_with_base
	.section	.rodata,"a",@progbits
	.align	8
.LJTI1_0:
	.quad	.LBB1_14
	.quad	.LBB1_4
	.quad	.LBB1_10
	.quad	.LBB1_11
	.quad	.LBB1_14
	.quad	.LBB1_21
	.quad	.LBB1_21
	.quad	.LBB1_21
	.quad	.LBB1_21
	.quad	.LBB1_5
	.quad	.LBB1_12
	.quad	.LBB1_13
	.quad	.LBB1_14

	.text
	.globl	__shadow_personality_v0
	.align	16, 0x90
	.type	__shadow_personality_v0,@function
__shadow_personality_v0:                # @__shadow_personality_v0
	.cfi_startproc
# BB#0:                                 # %entry
	pushq	%rbp
.Ltmp9:
	.cfi_def_cfa_offset 16
	pushq	%r15
.Ltmp10:
	.cfi_def_cfa_offset 24
	pushq	%r14
.Ltmp11:
	.cfi_def_cfa_offset 32
	pushq	%r13
.Ltmp12:
	.cfi_def_cfa_offset 40
	pushq	%r12
.Ltmp13:
	.cfi_def_cfa_offset 48
	pushq	%rbx
.Ltmp14:
	.cfi_def_cfa_offset 56
	subq	$120, %rsp
.Ltmp15:
	.cfi_def_cfa_offset 176
.Ltmp16:
	.cfi_offset %rbx, -56
.Ltmp17:
	.cfi_offset %r12, -48
.Ltmp18:
	.cfi_offset %r13, -40
.Ltmp19:
	.cfi_offset %r14, -32
.Ltmp20:
	.cfi_offset %r15, -24
.Ltmp21:
	.cfi_offset %rbp, -16
	movq	%r8, %rbx
	movq	%rdx, 8(%rsp)           # 8-byte Spill
	movl	%esi, %r12d
	cmpl	$1, %edi
	jne	.LBB2_1
# BB#3:                                 # %version.valid
	movq	%rcx, 48(%rsp)          # 8-byte Spill
	movq	%rbx, %rdi
	callq	_Unwind_GetLanguageSpecificData
	movq	%rax, %r13
	movl	$8, %eax
	testq	%r13, %r13
	je	.LBB2_2
# BB#4:                                 # %lsda.valid
	movq	%rbx, %rdi
	callq	_Unwind_GetRegionStart
	movb	(%r13), %r14b
	incq	%r13
	cmpb	$-1, %r14b
	jne	.LBB2_6
# BB#5:
	movq	%rax, %rcx
	movq	%rax, %rbp
	jmp	.LBB2_19
.LBB2_6:                                # %continue.i.i
	movq	%rax, %rbp
	movb	%r14b, %cl
	andb	$112, %cl
	xorl	%eax, %eax
	cmpb	$15, %cl
	ja	.LBB2_8
# BB#7:                                 # %continue.i.i
	testb	%cl, %cl
	je	.LBB2_18
	jmp	.LBB2_16
.LBB2_8:                                # %continue.i.i
	cmpb	$31, %cl
	ja	.LBB2_10
# BB#9:                                 # %continue.i.i
	cmpb	$16, %cl
	je	.LBB2_18
	jmp	.LBB2_16
.LBB2_10:                               # %continue.i.i
	cmpb	$47, %cl
	ja	.LBB2_13
# BB#11:                                # %continue.i.i
	cmpb	$32, %cl
	jne	.LBB2_16
# BB#12:                                # %ret.text.i.i
	movq	%rbx, %rdi
	callq	_Unwind_GetTextRelBase
	jmp	.LBB2_18
.LBB2_13:                               # %continue.i.i
	cmpb	$48, %cl
	je	.LBB2_17
# BB#14:                                # %continue.i.i
	cmpb	$64, %cl
	jne	.LBB2_15
# BB#122:                               # %ret.func.i.i
	movq	%rbx, %rdi
	callq	_Unwind_GetRegionStart
	jmp	.LBB2_18
.LBB2_17:                               # %ret.data.i.i
	movq	%rbx, %rdi
	callq	_Unwind_GetDataRelBase
	jmp	.LBB2_18
.LBB2_15:                               # %continue.i.i
	cmpb	$80, %cl
	jne	.LBB2_16
.LBB2_18:                               # %read_encoded_value.exit
	movzbl	%r14b, %edi
	leaq	112(%rsp), %rcx
	movq	%rax, %rsi
	movq	%r13, %rdx
	callq	.Lread_encoded_value_with_base
	movq	%rax, %r13
	movq	112(%rsp), %rcx
.LBB2_19:                               # %landing_pad.start.done
	movq	%rcx, 32(%rsp)          # 8-byte Spill
	movb	(%r13), %r14b
	incq	%r13
	xorl	%ecx, %ecx
	xorl	%esi, %esi
	cmpb	$-1, %r14b
	je	.LBB2_22
	.align	16, 0x90
.LBB2_20:                               # %loop.i
                                        # =>This Inner Loop Header: Depth=1
	movzbl	(%r13), %eax
	movq	%rax, %rdx
	andq	$127, %rdx
	shlq	%cl, %rdx
	orq	%rdx, %rsi
	addq	$7, %rcx
	incq	%r13
	testb	%al, %al
	js	.LBB2_20
# BB#21:                                # %read_uleb128.exit
	movq	%rsi, 112(%rsp)
	addq	%r13, %rsi
.LBB2_22:                               # %ttype.done
	movq	%rsi, 64(%rsp)          # 8-byte Spill
	movl	%r12d, %eax
	andl	$8, %eax
	movl	%eax, (%rsp)            # 4-byte Spill
	andl	$1, %r12d
	movb	(%r13), %r15b
	xorl	%ecx, %ecx
	xorl	%esi, %esi
	.align	16, 0x90
.LBB2_23:                               # %loop.i12
                                        # =>This Inner Loop Header: Depth=1
	movzbl	1(%r13), %eax
	movq	%rax, %rdx
	andq	$127, %rdx
	shlq	%cl, %rdx
	orq	%rdx, %rsi
	incq	%r13
	addq	$7, %rcx
	testb	%al, %al
	js	.LBB2_23
# BB#24:                                # %read_uleb128.exit14
	movq	%rsi, 112(%rsp)
	movq	$0, 72(%rsp)            # 8-byte Folded Spill
	cmpb	$-1, %r14b
	jne	.LBB2_26
# BB#25:
	movq	%rsi, 24(%rsp)          # 8-byte Spill
	jmp	.LBB2_39
.LBB2_26:                               # %continue.i
	movq	%rsi, 24(%rsp)          # 8-byte Spill
	movb	%r14b, %al
	andb	$112, %al
	cmpb	$15, %al
	ja	.LBB2_28
# BB#27:                                # %continue.i
	testb	%al, %al
	je	.LBB2_39
	jmp	.LBB2_36
.LBB2_28:                               # %continue.i
	cmpb	$31, %al
	ja	.LBB2_30
# BB#29:                                # %continue.i
	cmpb	$16, %al
	je	.LBB2_39
	jmp	.LBB2_36
.LBB2_30:                               # %continue.i
	cmpb	$47, %al
	ja	.LBB2_33
# BB#31:                                # %continue.i
	cmpb	$32, %al
	jne	.LBB2_36
# BB#32:                                # %ret.text.i
	movq	%rbx, %rdi
	callq	_Unwind_GetTextRelBase
	jmp	.LBB2_38
.LBB2_33:                               # %continue.i
	cmpb	$48, %al
	je	.LBB2_37
# BB#34:                                # %continue.i
	cmpb	$64, %al
	jne	.LBB2_35
# BB#123:                               # %ret.func.i
	movq	%rbx, %rdi
	callq	_Unwind_GetRegionStart
	jmp	.LBB2_38
.LBB2_37:                               # %ret.data.i
	movq	%rbx, %rdi
	callq	_Unwind_GetDataRelBase
.LBB2_38:                               # %ret.data.i
	movq	%rax, 72(%rsp)          # 8-byte Spill
.LBB2_39:                               # %base_of_encoded_value.exit
	movb	%r14b, 7(%rsp)          # 1-byte Spill
	movq	24(%rsp), %rax          # 8-byte Reload
	leaq	(%r13,%rax), %rax
	movq	%rax, 96(%rsp)          # 8-byte Spill
	leaq	1(%r13), %r14
	movq	%rbx, %rdi
	movq	%rbx, 16(%rsp)          # 8-byte Spill
	callq	_Unwind_GetIP
	movq	%rax, 88(%rsp)          # 8-byte Spill
	cmpb	$-1, %r15b
	jne	.LBB2_46
# BB#40:
	movl	%r12d, 44(%rsp)         # 4-byte Spill
	movq	%rbp, %r12
	.align	16, 0x90
.LBB2_41:                               # %find.action.cond.us
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB2_43 Depth 2
	cmpq	96(%rsp), %r14          # 8-byte Folded Reload
	ja	.LBB2_1
# BB#42:                                # %read_encoded_value.exit54.us
                                        #   in Loop: Header=BB2_41 Depth=1
	xorl	%ebx, %ebx
	movl	$255, %edi
	xorl	%esi, %esi
	movq	%r14, %rdx
	leaq	112(%rsp), %rbp
	movq	%rbp, %rcx
	callq	.Lread_encoded_value_with_base
	movq	112(%rsp), %r15
	movl	$255, %edi
	xorl	%esi, %esi
	movq	%rax, %rdx
	movq	%rbp, %rcx
	callq	.Lread_encoded_value_with_base
	movq	112(%rsp), %rcx
	movq	%rcx, 104(%rsp)         # 8-byte Spill
	movl	$255, %edi
	xorl	%esi, %esi
	movq	%rax, %rdx
	movq	%rbp, %rcx
	callq	.Lread_encoded_value_with_base
	movq	%rax, %r14
	movq	112(%rsp), %rdx
	xorl	%ebp, %ebp
	.align	16, 0x90
.LBB2_43:                               # %loop.i66.us
                                        #   Parent Loop BB2_41 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movzbl	(%r14), %esi
	movq	%rsi, %rdi
	andq	$127, %rdi
	movb	%bl, %cl
	shlq	%cl, %rdi
	orq	%rdi, %rbp
	addq	$7, %rbx
	incq	%r14
	testb	%sil, %sil
	js	.LBB2_43
# BB#44:                                # %read_uleb128.exit68.us
                                        #   in Loop: Header=BB2_41 Depth=1
	movq	%rbp, 112(%rsp)
	leaq	(%r12,%r15), %rcx
	movq	88(%rsp), %rax          # 8-byte Reload
	cmpq	%rcx, %rax
	jbe	.LBB2_1
# BB#45:                                # %find.action.check.us
                                        #   in Loop: Header=BB2_41 Depth=1
	addq	104(%rsp), %r15         # 8-byte Folded Reload
	addq	%r12, %r15
	cmpq	%r15, %rax
	ja	.LBB2_41
	jmp	.LBB2_91
.LBB2_46:
	movl	%r12d, 44(%rsp)         # 4-byte Spill
	movzbl	%r15b, %eax
	movl	%eax, 104(%rsp)         # 4-byte Spill
	andb	$112, %r15b
	movq	%rbp, %rax
	movq	%rax, 56(%rsp)          # 8-byte Spill
	.align	16, 0x90
.LBB2_47:                               # %find.action.cond
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB2_88 Depth 2
	cmpq	96(%rsp), %r14          # 8-byte Folded Reload
	ja	.LBB2_1
# BB#48:                                # %continue.i.i18
                                        #   in Loop: Header=BB2_47 Depth=1
	cmpb	$15, %r15b
	ja	.LBB2_50
# BB#49:                                # %continue.i.i18
                                        #   in Loop: Header=BB2_47 Depth=1
	testb	%r15b, %r15b
	je	.LBB2_60
	jmp	.LBB2_52
	.align	16, 0x90
.LBB2_50:                               # %continue.i.i18
                                        #   in Loop: Header=BB2_47 Depth=1
	cmpb	$31, %r15b
	ja	.LBB2_53
# BB#51:                                # %continue.i.i18
                                        #   in Loop: Header=BB2_47 Depth=1
	cmpb	$16, %r15b
	jne	.LBB2_52
.LBB2_60:                               # %continue.i.i31
                                        #   in Loop: Header=BB2_47 Depth=1
	xorl	%ebp, %ebp
	movl	104(%rsp), %edi         # 4-byte Reload
	xorl	%esi, %esi
	movq	%r14, %rdx
	leaq	112(%rsp), %rcx
	callq	.Lread_encoded_value_with_base
	movq	%rax, %rbx
	movq	112(%rsp), %r12
	cmpb	$15, %r15b
	ja	.LBB2_62
# BB#61:                                # %continue.i.i31
                                        #   in Loop: Header=BB2_47 Depth=1
	testb	%r15b, %r15b
	je	.LBB2_75
	jmp	.LBB2_69
	.align	16, 0x90
.LBB2_62:                               # %continue.i.i31
                                        #   in Loop: Header=BB2_47 Depth=1
	cmpb	$31, %r15b
	ja	.LBB2_64
# BB#63:                                # %continue.i.i31
                                        #   in Loop: Header=BB2_47 Depth=1
	cmpb	$16, %r15b
	je	.LBB2_75
	jmp	.LBB2_69
	.align	16, 0x90
.LBB2_53:                               # %continue.i.i18
                                        #   in Loop: Header=BB2_47 Depth=1
	cmpb	$47, %r15b
	ja	.LBB2_57
# BB#54:                                # %continue.i.i18
                                        #   in Loop: Header=BB2_47 Depth=1
	cmpb	$32, %r15b
	jne	.LBB2_52
# BB#55:                                # %continue.i.i31.thread
                                        #   in Loop: Header=BB2_47 Depth=1
	xorl	%edi, %edi
	callq	_Unwind_GetTextRelBase
	movl	104(%rsp), %edi         # 4-byte Reload
	movq	%rax, %rsi
	movq	%r14, %rdx
	leaq	112(%rsp), %rcx
	callq	.Lread_encoded_value_with_base
	movq	%rax, %rbx
	movq	112(%rsp), %r12
	jmp	.LBB2_56
.LBB2_64:                               # %continue.i.i31
                                        #   in Loop: Header=BB2_47 Depth=1
	cmpb	$47, %r15b
	ja	.LBB2_66
# BB#65:                                # %continue.i.i31
                                        #   in Loop: Header=BB2_47 Depth=1
	cmpb	$32, %r15b
	jne	.LBB2_69
.LBB2_56:                               # %ret.text.i.i33
                                        #   in Loop: Header=BB2_47 Depth=1
	xorl	%edi, %edi
	callq	_Unwind_GetTextRelBase
	jmp	.LBB2_74
.LBB2_57:                               # %continue.i.i18
                                        #   in Loop: Header=BB2_47 Depth=1
	cmpb	$48, %r15b
	je	.LBB2_70
# BB#58:                                # %continue.i.i18
                                        #   in Loop: Header=BB2_47 Depth=1
	cmpb	$64, %r15b
	jne	.LBB2_59
# BB#72:                                # %continue.i.i31.thread143
                                        #   in Loop: Header=BB2_47 Depth=1
	xorl	%edi, %edi
	callq	_Unwind_GetRegionStart
	movl	104(%rsp), %edi         # 4-byte Reload
	movq	%rax, %rsi
	movq	%r14, %rdx
	leaq	112(%rsp), %rcx
	callq	.Lread_encoded_value_with_base
	movq	%rax, %rbx
	movq	112(%rsp), %r12
	jmp	.LBB2_73
.LBB2_66:                               # %continue.i.i31
                                        #   in Loop: Header=BB2_47 Depth=1
	cmpb	$48, %r15b
	je	.LBB2_71
# BB#67:                                # %continue.i.i31
                                        #   in Loop: Header=BB2_47 Depth=1
	cmpb	$64, %r15b
	jne	.LBB2_68
.LBB2_73:                               # %ret.func.i.i37
                                        #   in Loop: Header=BB2_47 Depth=1
	xorl	%edi, %edi
	callq	_Unwind_GetRegionStart
	jmp	.LBB2_74
.LBB2_70:                               # %continue.i.i31.thread138
                                        #   in Loop: Header=BB2_47 Depth=1
	xorl	%edi, %edi
	callq	_Unwind_GetDataRelBase
	movl	104(%rsp), %edi         # 4-byte Reload
	movq	%rax, %rsi
	movq	%r14, %rdx
	leaq	112(%rsp), %rcx
	callq	.Lread_encoded_value_with_base
	movq	%rax, %rbx
	movq	112(%rsp), %r12
.LBB2_71:                               # %ret.data.i.i35
                                        #   in Loop: Header=BB2_47 Depth=1
	xorl	%edi, %edi
	callq	_Unwind_GetDataRelBase
	.align	16, 0x90
.LBB2_74:                               # %ret.func.i.i37
                                        #   in Loop: Header=BB2_47 Depth=1
	movq	%rax, %rbp
.LBB2_75:                               # %continue.i.i44
                                        #   in Loop: Header=BB2_47 Depth=1
	movl	104(%rsp), %edi         # 4-byte Reload
	movq	%rbp, %rsi
	movq	%rbx, %rdx
	leaq	112(%rsp), %rcx
	callq	.Lread_encoded_value_with_base
	movq	%rax, %rbx
	xorl	%eax, %eax
	movq	112(%rsp), %rcx
	movq	%rcx, 80(%rsp)          # 8-byte Spill
	cmpb	$15, %r15b
	ja	.LBB2_77
# BB#76:                                # %continue.i.i44
                                        #   in Loop: Header=BB2_47 Depth=1
	testb	%r15b, %r15b
	je	.LBB2_87
	jmp	.LBB2_85
	.align	16, 0x90
.LBB2_77:                               # %continue.i.i44
                                        #   in Loop: Header=BB2_47 Depth=1
	cmpb	$31, %r15b
	ja	.LBB2_79
# BB#78:                                # %continue.i.i44
                                        #   in Loop: Header=BB2_47 Depth=1
	cmpb	$16, %r15b
	je	.LBB2_87
	jmp	.LBB2_85
	.align	16, 0x90
.LBB2_79:                               # %continue.i.i44
                                        #   in Loop: Header=BB2_47 Depth=1
	cmpb	$47, %r15b
	ja	.LBB2_82
# BB#80:                                # %continue.i.i44
                                        #   in Loop: Header=BB2_47 Depth=1
	cmpb	$32, %r15b
	jne	.LBB2_85
# BB#81:                                # %ret.text.i.i46
                                        #   in Loop: Header=BB2_47 Depth=1
	xorl	%edi, %edi
	callq	_Unwind_GetTextRelBase
	jmp	.LBB2_87
.LBB2_82:                               # %continue.i.i44
                                        #   in Loop: Header=BB2_47 Depth=1
	cmpb	$48, %r15b
	je	.LBB2_86
# BB#83:                                # %continue.i.i44
                                        #   in Loop: Header=BB2_47 Depth=1
	cmpb	$64, %r15b
	jne	.LBB2_84
# BB#124:                               # %ret.func.i.i50
                                        #   in Loop: Header=BB2_47 Depth=1
	xorl	%edi, %edi
	callq	_Unwind_GetRegionStart
	jmp	.LBB2_87
.LBB2_59:                               # %continue.i.i18
                                        #   in Loop: Header=BB2_47 Depth=1
	cmpb	$80, %r15b
	jne	.LBB2_52
	jmp	.LBB2_60
.LBB2_86:                               # %ret.data.i.i48
                                        #   in Loop: Header=BB2_47 Depth=1
	xorl	%edi, %edi
	callq	_Unwind_GetDataRelBase
	jmp	.LBB2_87
.LBB2_84:                               # %continue.i.i44
                                        #   in Loop: Header=BB2_47 Depth=1
	cmpb	$80, %r15b
	jne	.LBB2_85
	.align	16, 0x90
.LBB2_87:                               # %read_encoded_value.exit54
                                        #   in Loop: Header=BB2_47 Depth=1
	movl	104(%rsp), %edi         # 4-byte Reload
	movq	%rax, %rsi
	movq	%rbx, %rdx
	leaq	112(%rsp), %rcx
	callq	.Lread_encoded_value_with_base
	movq	%rax, %r14
	xorl	%ecx, %ecx
	movq	112(%rsp), %rdx
	xorl	%ebp, %ebp
	.align	16, 0x90
.LBB2_88:                               # %loop.i66
                                        #   Parent Loop BB2_47 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movzbl	(%r14), %esi
	movq	%rsi, %rdi
	andq	$127, %rdi
	shlq	%cl, %rdi
	orq	%rdi, %rbp
	addq	$7, %rcx
	incq	%r14
	testb	%sil, %sil
	js	.LBB2_88
# BB#89:                                # %read_uleb128.exit68
                                        #   in Loop: Header=BB2_47 Depth=1
	movq	%rbp, 112(%rsp)
	movq	56(%rsp), %rsi          # 8-byte Reload
	leaq	(%rsi,%r12), %rcx
	movq	88(%rsp), %rax          # 8-byte Reload
	cmpq	%rcx, %rax
	jbe	.LBB2_1
# BB#90:                                # %find.action.check
                                        #   in Loop: Header=BB2_47 Depth=1
	addq	80(%rsp), %r12          # 8-byte Folded Reload
	addq	%rsi, %r12
	cmpq	%r12, %rax
	ja	.LBB2_47
	jmp	.LBB2_91
.LBB2_68:                               # %continue.i.i31
                                        #   in Loop: Header=BB2_47 Depth=1
	cmpb	$80, %r15b
	je	.LBB2_75
.LBB2_69:                               # %abort.i.i38
	callq	abort
.LBB2_1:
	movl	$3, %eax
.LBB2_2:                                # %return.error
	addq	$120, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	ret
.LBB2_91:                               # %find.action.success
	testq	%rdx, %rdx
	je	.LBB2_92
# BB#93:                                # %landing_pad.valid
	addq	%rdx, 32(%rsp)          # 8-byte Folded Spill
	testq	%rbp, %rbp
	je	.LBB2_119
# BB#94:                                # %action_record.valid
	xorl	%r15d, %r15d
	movb	7(%rsp), %bl            # 1-byte Reload
	cmpb	$-1, %bl
	movq	24(%rsp), %rsi          # 8-byte Reload
	je	.LBB2_100
# BB#95:                                # %continue.i71
	movb	%bl, %cl
	andb	$7, %cl
	cmpb	$4, %cl
	ja	.LBB2_98
# BB#96:                                # %continue.i71
	movzbl	%cl, %ecx
	movl	$8, %r15d
	jmpq	*.LJTI2_0(,%rcx,8)
.LBB2_99:                               # %return.2.i
	movl	$2, %r15d
	jmp	.LBB2_100
.LBB2_92:
	movl	$8, %eax
	jmp	.LBB2_2
.LBB2_35:                               # %continue.i
	cmpb	$80, %al
	je	.LBB2_39
.LBB2_36:                               # %abort.i
	callq	abort
.LBB2_97:                               # %return.4.i
	movl	$4, %r15d
.LBB2_100:                              # %size_of_encoded_value.exit
	xorl	%ecx, %ecx
	cmpl	$0, (%rsp)              # 4-byte Folded Reload
	movl	$0, %r12d
	jne	.LBB2_103
# BB#101:                               # %exception.class.check
	movq	8(%rsp), %rdx           # 8-byte Reload
	cmpq	%rdx, .Lshadow.exception.class(%rip)
	movl	$0, %r12d
	jne	.LBB2_103
# BB#102:                               # %thrown.class.get
	movq	48(%rsp), %rdx          # 8-byte Reload
	movq	32(%rdx), %rdx
	movq	(%rdx), %r12
.LBB2_103:                              # %find.catch.preheader
	addq	%rbp, %rsi
	addq	%rsi, %r13
	negl	%r15d
	movzbl	%bl, %r14d
	jmp	.LBB2_104
	.align	16, 0x90
.LBB2_117:                              # %action_record.next.valid
                                        #   in Loop: Header=BB2_104 Depth=1
	incl	%eax
	movslq	%eax, %rax
	addq	%rax, %rbp
	xorl	%ecx, %ecx
	movq	%rbp, %r13
.LBB2_104:                              # %find.catch.preheader
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB2_105 Depth 2
                                        #     Child Loop BB2_111 Depth 2
	xorl	%ebx, %ebx
.LBB2_105:                              # %loop.i84
                                        #   Parent Loop BB2_104 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movq	%r13, %rbp
	movzbl	(%rbp), %eax
	movq	%rax, %rdx
	andq	$127, %rdx
	shlq	%cl, %rdx
	orq	%rdx, %rbx
	addq	$7, %rcx
	leaq	1(%rbp), %r13
	testb	%al, %al
	js	.LBB2_105
# BB#106:                               # %loop.end.i
                                        #   in Loop: Header=BB2_104 Depth=1
	cmpq	$63, %rcx
	ja	.LBB2_109
# BB#107:                               # %continue.i85
                                        #   in Loop: Header=BB2_104 Depth=1
	testb	$64, %al
	je	.LBB2_109
# BB#108:                               # %negate.i
                                        #   in Loop: Header=BB2_104 Depth=1
                                        # kill: CL<def> CL<kill> RCX<kill>
	movq	$-1, %rax
	shlq	%cl, %rax
	orq	%rax, %rbx
.LBB2_109:                              # %read_sleb128.exit
                                        #   in Loop: Header=BB2_104 Depth=1
	movq	%rbx, 112(%rsp)
	testl	%ebx, %ebx
	je	.LBB2_119
# BB#110:                               # %find.catch.check
                                        #   in Loop: Header=BB2_104 Depth=1
	movl	%ebx, %eax
	imull	%r15d, %eax
	movslq	%eax, %rdx
	addq	64(%rsp), %rdx          # 8-byte Folded Reload
	movl	%r14d, %edi
	movq	72(%rsp), %rsi          # 8-byte Reload
	leaq	112(%rsp), %rcx
	callq	.Lread_encoded_value_with_base
	movq	112(%rsp), %rsi
	movq	%r12, %rdi
	callq	_Pshadow_Pstandard_CClass_MisSubtype_Pshadow_Pstandard_CClass
	xorl	%ecx, %ecx
	testb	$1, %al
	movl	$0, %eax
	jne	.LBB2_118
	.align	16, 0x90
.LBB2_111:                              # %loop.i97
                                        #   Parent Loop BB2_104 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movzbl	(%r13), %edx
	movq	%rdx, %rsi
	andq	$127, %rsi
	shlq	%cl, %rsi
	orq	%rsi, %rax
	addq	$7, %rcx
	incq	%r13
	testb	%dl, %dl
	js	.LBB2_111
# BB#112:                               # %loop.end.i99
                                        #   in Loop: Header=BB2_104 Depth=1
	cmpq	$63, %rcx
	ja	.LBB2_115
# BB#113:                               # %continue.i102
                                        #   in Loop: Header=BB2_104 Depth=1
	testb	$64, %dl
	je	.LBB2_115
# BB#114:                               # %negate.i105
                                        #   in Loop: Header=BB2_104 Depth=1
                                        # kill: CL<def> CL<kill> RCX<kill>
	movq	$-1, %rdx
	shlq	%cl, %rdx
	orq	%rdx, %rax
.LBB2_115:                              # %read_sleb128.exit108
                                        #   in Loop: Header=BB2_104 Depth=1
	movq	%rax, 112(%rsp)
	testq	%rax, %rax
	jne	.LBB2_117
# BB#116:
	movl	$8, %eax
	jmp	.LBB2_2
.LBB2_119:                              # %found.cleanup
	xorl	%ebx, %ebx
	cmpl	$0, 44(%rsp)            # 4-byte Folded Reload
	movq	16(%rsp), %rbp          # 8-byte Reload
	movl	$8, %eax
	jmp	.LBB2_120
.LBB2_118:                              # %found.catch
	movl	$6, %eax
	cmpl	$0, 44(%rsp)            # 4-byte Folded Reload
	movq	16(%rsp), %rbp          # 8-byte Reload
.LBB2_120:                              # %found.cleanup
	movq	48(%rsp), %rdx          # 8-byte Reload
	movq	32(%rsp), %r14          # 8-byte Reload
	jne	.LBB2_2
# BB#121:                               # %install.context
	movq	%rbp, %rdi
	xorl	%esi, %esi
	callq	_Unwind_SetGR
	movq	%rbp, %rdi
	movl	$1, %esi
	movq	%rbx, %rdx
	callq	_Unwind_SetGR
	movq	%rbp, %rdi
	movq	%r14, %rsi
	callq	_Unwind_SetIP
	movl	$7, %eax
	jmp	.LBB2_2
.LBB2_98:                               # %abort.i72
	callq	abort
.LBB2_16:                               # %abort.i.i
	callq	abort
.LBB2_52:                               # %abort.i.i25
	callq	abort
.LBB2_85:                               # %abort.i.i51
	callq	abort
.Ltmp22:
	.size	__shadow_personality_v0, .Ltmp22-__shadow_personality_v0
	.cfi_endproc
	.section	.rodata,"a",@progbits
	.align	8
.LJTI2_0:
	.quad	.LBB2_100
	.quad	.LBB2_98
	.quad	.LBB2_99
	.quad	.LBB2_97
	.quad	.LBB2_100

	.text
	.globl	__shadow_catch
	.align	16, 0x90
	.type	__shadow_catch,@function
__shadow_catch:                         # @__shadow_catch
# BB#0:                                 # %entry
	pushq	%rbx
	movq	32(%rdi), %rbx
	callq	free
	movq	%rbx, %rax
	popq	%rbx
	ret
.Ltmp23:
	.size	__shadow_catch, .Ltmp23-__shadow_catch

	.globl	_Pshadow_Pstandard_CException_Mthrow__
	.align	16, 0x90
	.type	_Pshadow_Pstandard_CException_Mthrow__,@function
_Pshadow_Pstandard_CException_Mthrow__: # @_Pshadow_Pstandard_CException_Mthrow__
	.cfi_startproc
# BB#0:                                 # %entry
	pushq	%rbx
.Ltmp26:
	.cfi_def_cfa_offset 16
.Ltmp27:
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	movl	$40, %edi
	callq	malloc
	movq	.Lshadow.exception.class(%rip), %rcx
	movq	%rcx, (%rax)
	movq	$.Lshadow.exception.cleanup, 8(%rax)
	movq	%rbx, 32(%rax)
	movq	%rax, %rdi
	callq	_Unwind_RaiseException
	callq	abort
.Ltmp28:
	.size	_Pshadow_Pstandard_CException_Mthrow__, .Ltmp28-_Pshadow_Pstandard_CException_Mthrow__
	.cfi_endproc

	.globl	_Pshadow_Pstandard_CSystem_MnanoTime
	.align	16, 0x90
	.type	_Pshadow_Pstandard_CSystem_MnanoTime,@function
_Pshadow_Pstandard_CSystem_MnanoTime:   # @_Pshadow_Pstandard_CSystem_MnanoTime
# BB#0:
	subq	$24, %rsp
	leaq	8(%rsp), %rsi
	movl	$1, %edi
	callq	clock_gettime
	testl	%eax, %eax
	je	.LBB5_1
# BB#2:
	xorl	%eax, %eax
	addq	$24, %rsp
	ret
.LBB5_1:
	imulq	$1000000000, 8(%rsp), %rax # imm = 0x3B9ACA00
	addq	16(%rsp), %rax
	addq	$24, %rsp
	ret
.Ltmp29:
	.size	_Pshadow_Pstandard_CSystem_MnanoTime, .Ltmp29-_Pshadow_Pstandard_CSystem_MnanoTime

	.globl	_Pshadow_Pio_CConsole_MreadByte
	.align	16, 0x90
	.type	_Pshadow_Pio_CConsole_MreadByte,@function
_Pshadow_Pio_CConsole_MreadByte:        # @_Pshadow_Pio_CConsole_MreadByte
	.cfi_startproc
# BB#0:
	pushq	%rax
.Ltmp31:
	.cfi_def_cfa_offset 16
	leaq	7(%rsp), %rsi
	xorl	%edi, %edi
	movl	$1, %edx
	callq	read
	movl	%eax, %ecx
	xorb	%al, %al
	cmpl	$1, %ecx
	jne	.LBB6_2
# BB#1:
	movb	7(%rsp), %al
.LBB6_2:
	setne	%dl
	popq	%rcx
	ret
.Ltmp32:
	.size	_Pshadow_Pio_CConsole_MreadByte, .Ltmp32-_Pshadow_Pio_CConsole_MreadByte
	.cfi_endproc

	.globl	_Pshadow_Pio_CConsole_Mprint_Pshadow_Pstandard_CString
	.align	16, 0x90
	.type	_Pshadow_Pio_CConsole_Mprint_Pshadow_Pstandard_CString,@function
_Pshadow_Pio_CConsole_Mprint_Pshadow_Pstandard_CString: # @_Pshadow_Pio_CConsole_Mprint_Pshadow_Pstandard_CString
	.cfi_startproc
# BB#0:
	pushq	%rbx
.Ltmp35:
	.cfi_def_cfa_offset 16
.Ltmp36:
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	movl	16(%rsi), %edx
	movq	8(%rsi), %rsi
	movl	$1, %edi
	callq	write
	movq	%rbx, %rax
	popq	%rbx
	ret
.Ltmp37:
	.size	_Pshadow_Pio_CConsole_Mprint_Pshadow_Pstandard_CString, .Ltmp37-_Pshadow_Pio_CConsole_Mprint_Pshadow_Pstandard_CString
	.cfi_endproc

	.globl	_Pshadow_Pio_CConsole_MprintLine
	.align	16, 0x90
	.type	_Pshadow_Pio_CConsole_MprintLine,@function
_Pshadow_Pio_CConsole_MprintLine:       # @_Pshadow_Pio_CConsole_MprintLine
	.cfi_startproc
# BB#0:
	pushq	%rbx
.Ltmp40:
	.cfi_def_cfa_offset 16
.Ltmp41:
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	movl	$1, %edi
	movl	$.Lnewline, %esi
	movl	$1, %edx
	callq	write
	movq	%rbx, %rax
	popq	%rbx
	ret
.Ltmp42:
	.size	_Pshadow_Pio_CConsole_MprintLine, .Ltmp42-_Pshadow_Pio_CConsole_MprintLine
	.cfi_endproc

	.globl	_Pshadow_Pio_CConsole_MprintError_Pshadow_Pstandard_CString
	.align	16, 0x90
	.type	_Pshadow_Pio_CConsole_MprintError_Pshadow_Pstandard_CString,@function
_Pshadow_Pio_CConsole_MprintError_Pshadow_Pstandard_CString: # @_Pshadow_Pio_CConsole_MprintError_Pshadow_Pstandard_CString
	.cfi_startproc
# BB#0:
	pushq	%rbx
.Ltmp45:
	.cfi_def_cfa_offset 16
.Ltmp46:
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	movl	16(%rsi), %edx
	movq	8(%rsi), %rsi
	movl	$2, %edi
	callq	write
	movq	%rbx, %rax
	popq	%rbx
	ret
.Ltmp47:
	.size	_Pshadow_Pio_CConsole_MprintError_Pshadow_Pstandard_CString, .Ltmp47-_Pshadow_Pio_CConsole_MprintError_Pshadow_Pstandard_CString
	.cfi_endproc

	.globl	_Pshadow_Pio_CConsole_MprintErrorLine
	.align	16, 0x90
	.type	_Pshadow_Pio_CConsole_MprintErrorLine,@function
_Pshadow_Pio_CConsole_MprintErrorLine:  # @_Pshadow_Pio_CConsole_MprintErrorLine
	.cfi_startproc
# BB#0:
	pushq	%rbx
.Ltmp50:
	.cfi_def_cfa_offset 16
.Ltmp51:
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	movl	$2, %edi
	movl	$.Lnewline, %esi
	movl	$1, %edx
	callq	write
	movq	%rbx, %rax
	popq	%rbx
	ret
.Ltmp52:
	.size	_Pshadow_Pio_CConsole_MprintErrorLine, .Ltmp52-_Pshadow_Pio_CConsole_MprintErrorLine
	.cfi_endproc

	.globl	_Pshadow_Pstandard_CArray_MgetBaseClass
	.align	16, 0x90
	.type	_Pshadow_Pstandard_CArray_MgetBaseClass,@function
_Pshadow_Pstandard_CArray_MgetBaseClass: # @_Pshadow_Pstandard_CArray_MgetBaseClass
# BB#0:
	movq	24(%rdi), %rax
	ret
.Ltmp53:
	.size	_Pshadow_Pstandard_CArray_MgetBaseClass, .Ltmp53-_Pshadow_Pstandard_CArray_MgetBaseClass

	.globl	_Pshadow_Pstandard_CArray_Mdims
	.align	16, 0x90
	.type	_Pshadow_Pstandard_CArray_Mdims,@function
_Pshadow_Pstandard_CArray_Mdims:        # @_Pshadow_Pstandard_CArray_Mdims
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp59:
	.cfi_def_cfa_offset 16
	pushq	%r15
.Ltmp60:
	.cfi_def_cfa_offset 24
	pushq	%r14
.Ltmp61:
	.cfi_def_cfa_offset 32
	pushq	%rbx
.Ltmp62:
	.cfi_def_cfa_offset 40
	pushq	%rax
.Ltmp63:
	.cfi_def_cfa_offset 48
.Ltmp64:
	.cfi_offset %rbx, -40
.Ltmp65:
	.cfi_offset %r14, -32
.Ltmp66:
	.cfi_offset %r15, -24
.Ltmp67:
	.cfi_offset %rbp, -16
	movq	8(%rdi), %r14
	movl	16(%rdi), %ebp
	movl	$1, %edi
	movl	$4, %esi
	callq	calloc
	movq	%rax, %rbx
	movl	%ebp, (%rbx)
	movl	$40, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_CArray_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_Cint_Mclass, 24(%rax)
	movq	%rbx, 8(%rax)
	movl	$1, 16(%rax)
	movq	%r14, 32(%rax)
	movq	(%rax), %rax
	movq	152(%rax), %r15
	movl	$1, %edi
	movl	$4, %esi
	callq	calloc
	movq	%rax, %rbx
	movl	%ebp, (%rbx)
	movl	$40, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_CArray_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_Cint_Mclass, 24(%rax)
	movq	%rbx, 8(%rax)
	movl	$1, 16(%rax)
	movq	%r14, 32(%rax)
	movq	%rax, %rdi
	callq	*%r15
	movl	(%rax), %eax
	addq	$8, %rsp
	popq	%rbx
	popq	%r14
	popq	%r15
	popq	%rbp
	ret
.Ltmp68:
	.size	_Pshadow_Pstandard_CArray_Mdims, .Ltmp68-_Pshadow_Pstandard_CArray_Mdims
	.cfi_endproc

	.globl	_Pshadow_Pstandard_CArray_Mlengths
	.align	16, 0x90
	.type	_Pshadow_Pstandard_CArray_Mlengths,@function
_Pshadow_Pstandard_CArray_Mlengths:     # @_Pshadow_Pstandard_CArray_Mlengths
# BB#0:
	movq	8(%rdi), %rax
	movl	16(%rdi), %edx
	ret
.Ltmp69:
	.size	_Pshadow_Pstandard_CArray_Mlengths, .Ltmp69-_Pshadow_Pstandard_CArray_Mlengths

	.globl	_Pshadow_Pstandard_CArray_MtoString
	.align	16, 0x90
	.type	_Pshadow_Pstandard_CArray_MtoString,@function
_Pshadow_Pstandard_CArray_MtoString:    # @_Pshadow_Pstandard_CArray_MtoString
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp77:
	.cfi_def_cfa_offset 16
	pushq	%r15
.Ltmp78:
	.cfi_def_cfa_offset 24
	pushq	%r14
.Ltmp79:
	.cfi_def_cfa_offset 32
	pushq	%r13
.Ltmp80:
	.cfi_def_cfa_offset 40
	pushq	%r12
.Ltmp81:
	.cfi_def_cfa_offset 48
	pushq	%rbx
.Ltmp82:
	.cfi_def_cfa_offset 56
	subq	$24, %rsp
.Ltmp83:
	.cfi_def_cfa_offset 80
.Ltmp84:
	.cfi_offset %rbx, -56
.Ltmp85:
	.cfi_offset %r12, -48
.Ltmp86:
	.cfi_offset %r13, -40
.Ltmp87:
	.cfi_offset %r14, -32
.Ltmp88:
	.cfi_offset %r15, -24
.Ltmp89:
	.cfi_offset %rbp, -16
	movq	%rdi, %r13
	movq	(%r13), %rax
	callq	*160(%rax)
	testl	%eax, %eax
	je	.LBB14_1
# BB#3:                                 # %_label2
	movl	_Pshadow_Pstandard_CMutableString_Mclass+52(%rip), %edi
	callq	malloc
	movq	%rax, %r14
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%r14)
	movq	$_Pshadow_Pstandard_CMutableString_Mclass, (%r14)
	movl	$10, %edi
	movl	$1, %esi
	callq	calloc
	movq	%rax, 8(%r14)
	movl	$10, 16(%r14)
	movl	$0, 24(%r14)
	movq	(%r14), %rax
	movq	%r14, %rdi
	movl	$.L_string2, %esi
	callq	*112(%rax)
	movq	(%r13), %rax
	movq	%r13, %rdi
	callq	*120(%rax)
	movl	%eax, %ebp
	movl	%ebp, %edi
	movl	$4, %esi
	callq	calloc
	movl	%ebp, 16(%rsp)
	movq	%rax, 8(%rsp)
	movq	(%r13), %rax
	movq	8(%rsp), %rbx
	movq	%r13, %rdi
	callq	*152(%rax)
	movl	(%rbx), %ecx
	cmpl	(%rax), %ecx
	je	.LBB14_12
# BB#4:
	movb	$1, %cl
	.align	16, 0x90
.LBB14_5:                               # %_label3
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB14_9 Depth 2
	testb	$1, %cl
	jne	.LBB14_7
# BB#6:                                 # %_label7
                                        #   in Loop: Header=BB14_5 Depth=1
	movq	(%r14), %rax
	movq	%r14, %rdi
	movl	$.L_string3, %esi
	callq	*112(%rax)
.LBB14_7:                               # %_label8
                                        #   in Loop: Header=BB14_5 Depth=1
	movq	(%r14), %rax
	movq	112(%rax), %rbx
	movq	(%r13), %rax
	movl	16(%rsp), %r12d
	movq	8(%rsp), %r15
	movq	%r13, %rdi
	movq	%r15, %rsi
	movl	%r12d, %edx
	callq	*136(%rax)
	movq	%r14, %rdi
	movq	%rax, %rsi
	callq	*%rbx
	movl	$1, %edi
	movl	$4, %esi
	callq	calloc
	movq	%rax, %rbp
	movl	%r12d, (%rbp)
	movl	$40, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_CArray_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_Cint_Mclass, 24(%rax)
	movq	%rbp, 8(%rax)
	movl	$1, 16(%rax)
	movq	%r15, 32(%rax)
	movq	(%rax), %rax
	movq	160(%rax), %rbx
	movl	$1, %edi
	movl	$4, %esi
	callq	calloc
	movq	%rax, %rbp
	movl	%r12d, (%rbp)
	movl	$40, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_CArray_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_Cint_Mclass, 24(%rax)
	movq	%rbp, 8(%rax)
	movl	$1, 16(%rax)
	movq	%r15, 32(%rax)
	movq	%rax, %rdi
	callq	*%rbx
	movl	%eax, %ebp
	jmp	.LBB14_9
	.align	16, 0x90
.LBB14_8:                               # %_label9
                                        #   in Loop: Header=BB14_9 Depth=2
	movl	$0, (%rbx,%rcx,4)
	movl	4(%rsp), %ebp
.LBB14_9:                               # %_label9
                                        #   Parent Loop BB14_5 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	decl	%ebp
	movl	%ebp, 4(%rsp)
	movslq	%ebp, %rax
	movq	8(%rsp), %rbx
	incl	(%rbx,%rax,4)
	testl	%eax, %eax
	jle	.LBB14_11
# BB#10:                                # %_label12
                                        #   in Loop: Header=BB14_9 Depth=2
	movq	(%r13), %rax
	movq	%r13, %rdi
	callq	*152(%rax)
	movslq	%ebp, %rcx
	movl	(%rbx,%rcx,4), %edx
	cmpl	(%rax,%rcx,4), %edx
	je	.LBB14_8
.LBB14_11:                              # %_label4.loopexit
                                        #   in Loop: Header=BB14_5 Depth=1
	movq	(%r13), %rax
	movq	%r13, %rdi
	callq	*152(%rax)
	movl	(%rbx), %edx
	xorb	%cl, %cl
	cmpl	(%rax), %edx
	jne	.LBB14_5
.LBB14_12:                              # %_label5
	movq	(%r14), %rax
	movq	%r14, %rdi
	movl	$.L_string4, %esi
	callq	*112(%rax)
	movq	(%rax), %rcx
	movq	%rax, %rdi
	callq	*104(%rcx)
	jmp	.LBB14_2
.LBB14_1:                               # %_label0
	movl	$.L_string1, %eax
.LBB14_2:                               # %_label0
	addq	$24, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	ret
.Ltmp90:
	.size	_Pshadow_Pstandard_CArray_MtoString, .Ltmp90-_Pshadow_Pstandard_CArray_MtoString
	.cfi_endproc

	.globl	_Pshadow_Pstandard_CArray_Mcreate_Pshadow_Pstandard_Cint_A1_Pshadow_Pstandard_CObject
	.align	16, 0x90
	.type	_Pshadow_Pstandard_CArray_Mcreate_Pshadow_Pstandard_Cint_A1_Pshadow_Pstandard_CObject,@function
_Pshadow_Pstandard_CArray_Mcreate_Pshadow_Pstandard_Cint_A1_Pshadow_Pstandard_CObject: # @_Pshadow_Pstandard_CArray_Mcreate_Pshadow_Pstandard_Cint_A1_Pshadow_Pstandard_CObject
# BB#0:
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rdi)
	movq	$_Pshadow_Pstandard_CArray_Mclass, (%rdi)
	movq	%rsi, 24(%rdi)
	movl	%ecx, 16(%rdi)
	movq	%rdx, 8(%rdi)
	movq	%r8, 32(%rdi)
	movq	%rdi, %rax
	ret
.Ltmp91:
	.size	_Pshadow_Pstandard_CArray_Mcreate_Pshadow_Pstandard_Cint_A1_Pshadow_Pstandard_CObject, .Ltmp91-_Pshadow_Pstandard_CArray_Mcreate_Pshadow_Pstandard_Cint_A1_Pshadow_Pstandard_CObject

	.globl	_Pshadow_Pstandard_CArray_Mcreate_Pshadow_Pstandard_Cint_A1
	.align	16, 0x90
	.type	_Pshadow_Pstandard_CArray_Mcreate_Pshadow_Pstandard_Cint_A1,@function
_Pshadow_Pstandard_CArray_Mcreate_Pshadow_Pstandard_Cint_A1: # @_Pshadow_Pstandard_CArray_Mcreate_Pshadow_Pstandard_Cint_A1
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp98:
	.cfi_def_cfa_offset 16
	pushq	%r15
.Ltmp99:
	.cfi_def_cfa_offset 24
	pushq	%r14
.Ltmp100:
	.cfi_def_cfa_offset 32
	pushq	%r12
.Ltmp101:
	.cfi_def_cfa_offset 40
	pushq	%rbx
.Ltmp102:
	.cfi_def_cfa_offset 48
.Ltmp103:
	.cfi_offset %rbx, -48
.Ltmp104:
	.cfi_offset %r12, -40
.Ltmp105:
	.cfi_offset %r14, -32
.Ltmp106:
	.cfi_offset %r15, -24
.Ltmp107:
	.cfi_offset %rbp, -16
	movl	%ecx, %r15d
	movq	%rdx, %r14
	movq	%rdi, %rbx
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rbx)
	movq	$_Pshadow_Pstandard_CArray_Mclass, (%rbx)
	movq	%rsi, 24(%rbx)
	movq	$0, 32(%rbx)
	xorl	%edi, %edi
	movl	$4, %esi
	callq	calloc
	movq	%rax, 8(%rbx)
	movl	$0, 16(%rbx)
	movl	$1, %edi
	movl	$4, %esi
	callq	calloc
	movq	%rax, %rbp
	movl	%r15d, (%rbp)
	movl	$40, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_CArray_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_Cint_Mclass, 24(%rax)
	movq	%rbp, 8(%rax)
	movl	$1, 16(%rax)
	movq	%r14, 32(%rax)
	movq	(%rax), %rax
	movq	64(%rax), %r12
	movl	$1, %edi
	movl	$4, %esi
	callq	calloc
	movq	%rax, %rbp
	movl	%r15d, (%rbp)
	movl	$40, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_CArray_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_Cint_Mclass, 24(%rax)
	movq	%rbp, 8(%rax)
	movl	$1, 16(%rax)
	movq	%r14, 32(%rax)
	movq	%rax, %rdi
	callq	*%r12
	movq	8(%rax), %rcx
	movq	32(%rax), %rax
	movl	(%rcx), %ecx
	movl	%ecx, 16(%rbx)
	movq	%rax, 8(%rbx)
	movq	(%rbx), %rax
	movq	24(%rbx), %rbp
	movq	%rbx, %rdi
	callq	*160(%rax)
	movl	56(%rbp), %esi
	movl	%eax, %edi
	callq	calloc
	movq	%rax, 32(%rbx)
	movq	%rbx, %rax
	popq	%rbx
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret
.Ltmp108:
	.size	_Pshadow_Pstandard_CArray_Mcreate_Pshadow_Pstandard_Cint_A1, .Ltmp108-_Pshadow_Pstandard_CArray_Mcreate_Pshadow_Pstandard_Cint_A1
	.cfi_endproc

	.globl	_Pshadow_Pstandard_CArray_Mcopy
	.align	16, 0x90
	.type	_Pshadow_Pstandard_CArray_Mcopy,@function
_Pshadow_Pstandard_CArray_Mcopy:        # @_Pshadow_Pstandard_CArray_Mcopy
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp116:
	.cfi_def_cfa_offset 16
	pushq	%r15
.Ltmp117:
	.cfi_def_cfa_offset 24
	pushq	%r14
.Ltmp118:
	.cfi_def_cfa_offset 32
	pushq	%r13
.Ltmp119:
	.cfi_def_cfa_offset 40
	pushq	%r12
.Ltmp120:
	.cfi_def_cfa_offset 48
	pushq	%rbx
.Ltmp121:
	.cfi_def_cfa_offset 56
	subq	$24, %rsp
.Ltmp122:
	.cfi_def_cfa_offset 80
.Ltmp123:
	.cfi_offset %rbx, -56
.Ltmp124:
	.cfi_offset %r12, -48
.Ltmp125:
	.cfi_offset %r13, -40
.Ltmp126:
	.cfi_offset %r14, -32
.Ltmp127:
	.cfi_offset %r15, -24
.Ltmp128:
	.cfi_offset %rbp, -16
	movq	%rdi, %r13
	movl	$40, %edi
	callq	malloc
	movq	%rax, %r14
	movq	$_Pshadow_Pstandard_CArray_Mclass, (%r14)
	movq	(%r13), %rax
	movq	24(%r13), %rbx
	movq	%r13, %rdi
	callq	*160(%rax)
	movl	56(%rbx), %esi
	movl	%eax, %edi
	callq	calloc
	movq	%rax, %rbp
	movq	(%r13), %rax
	movq	24(%r13), %rbx
	movq	%r13, %rdi
	callq	*152(%rax)
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%r14)
	movq	$_Pshadow_Pstandard_CArray_Mclass, (%r14)
	movq	%rbx, 24(%r14)
	movl	%edx, 16(%r14)
	movq	%rax, 8(%r14)
	movq	%rbp, 32(%r14)
	movq	(%r13), %rax
	movq	%r13, %rdi
	callq	*120(%rax)
	movl	%eax, %ebp
	movl	%ebp, %edi
	movl	$4, %esi
	callq	calloc
	movl	%ebp, 16(%rsp)
	movq	%rax, 8(%rsp)
	movq	(%r13), %rax
	movq	8(%rsp), %rbx
	jmp	.LBB17_1
	.align	16, 0x90
.LBB17_6:                               # %_label15.loopexit
                                        #   in Loop: Header=BB17_1 Depth=1
	movq	(%r13), %rax
.LBB17_1:                               # =>This Loop Header: Depth=1
                                        #     Child Loop BB17_4 Depth 2
	movq	%r13, %rdi
	callq	*152(%rax)
	movl	(%rbx), %ecx
	cmpl	(%rax), %ecx
	je	.LBB17_7
# BB#2:                                 # %_label14
                                        #   in Loop: Header=BB17_1 Depth=1
	movq	(%r14), %rax
	movq	144(%rax), %rbx
	movq	(%r13), %rax
	movl	16(%rsp), %r12d
	movq	8(%rsp), %r15
	movq	%r13, %rdi
	movq	%r15, %rsi
	movl	%r12d, %edx
	callq	*136(%rax)
	movq	%r14, %rdi
	movq	%r15, %rsi
	movl	%r12d, %edx
	movq	%rax, %rcx
	callq	*%rbx
	movl	$1, %edi
	movl	$4, %esi
	callq	calloc
	movq	%rax, %rbp
	movl	%r12d, (%rbp)
	movl	$40, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_CArray_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_Cint_Mclass, 24(%rax)
	movq	%rbp, 8(%rax)
	movl	$1, 16(%rax)
	movq	%r15, 32(%rax)
	movq	(%rax), %rax
	movq	160(%rax), %rbx
	movl	$1, %edi
	movl	$4, %esi
	callq	calloc
	movq	%rax, %rbp
	movl	%r12d, (%rbp)
	movl	$40, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_CArray_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_Cint_Mclass, 24(%rax)
	movq	%rbp, 8(%rax)
	movl	$1, 16(%rax)
	movq	%r15, 32(%rax)
	movq	%rax, %rdi
	callq	*%rbx
	movl	%eax, %ebp
	jmp	.LBB17_4
	.align	16, 0x90
.LBB17_3:                               # %_label17
                                        #   in Loop: Header=BB17_4 Depth=2
	movl	$0, (%rbx,%rcx,4)
	movl	4(%rsp), %ebp
.LBB17_4:                               # %_label17
                                        #   Parent Loop BB17_1 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	decl	%ebp
	movl	%ebp, 4(%rsp)
	movslq	%ebp, %rax
	movq	8(%rsp), %rbx
	incl	(%rbx,%rax,4)
	testl	%eax, %eax
	jle	.LBB17_6
# BB#5:                                 # %_label20
                                        #   in Loop: Header=BB17_4 Depth=2
	movq	(%r13), %rax
	movq	%r13, %rdi
	callq	*152(%rax)
	movslq	%ebp, %rcx
	movl	(%rbx,%rcx,4), %edx
	cmpl	(%rax,%rcx,4), %edx
	je	.LBB17_3
	jmp	.LBB17_6
.LBB17_7:                               # %_label16
	movq	%r14, %rax
	addq	$24, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	ret
.Ltmp129:
	.size	_Pshadow_Pstandard_CArray_Mcopy, .Ltmp129-_Pshadow_Pstandard_CArray_Mcopy
	.cfi_endproc

	.globl	_Pshadow_Pstandard_CArray_Msize
	.align	16, 0x90
	.type	_Pshadow_Pstandard_CArray_Msize,@function
_Pshadow_Pstandard_CArray_Msize:        # @_Pshadow_Pstandard_CArray_Msize
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp137:
	.cfi_def_cfa_offset 16
	pushq	%r15
.Ltmp138:
	.cfi_def_cfa_offset 24
	pushq	%r14
.Ltmp139:
	.cfi_def_cfa_offset 32
	pushq	%r13
.Ltmp140:
	.cfi_def_cfa_offset 40
	pushq	%r12
.Ltmp141:
	.cfi_def_cfa_offset 48
	pushq	%rbx
.Ltmp142:
	.cfi_def_cfa_offset 56
	pushq	%rax
.Ltmp143:
	.cfi_def_cfa_offset 64
.Ltmp144:
	.cfi_offset %rbx, -56
.Ltmp145:
	.cfi_offset %r12, -48
.Ltmp146:
	.cfi_offset %r13, -40
.Ltmp147:
	.cfi_offset %r14, -32
.Ltmp148:
	.cfi_offset %r15, -24
.Ltmp149:
	.cfi_offset %rbp, -16
	movq	%rdi, %r15
	movq	8(%r15), %rax
	movl	(%rax), %eax
	movl	%eax, 4(%rsp)           # 4-byte Spill
	movl	$1, %r12d
	jmp	.LBB18_2
	.align	16, 0x90
.LBB18_1:                               # %_label22
                                        #   in Loop: Header=BB18_2 Depth=1
	movslq	%r12d, %rax
	movq	8(%r15), %rcx
	movl	4(%rsp), %edx           # 4-byte Reload
	imull	(%rcx,%rax,4), %edx
	movl	%edx, 4(%rsp)           # 4-byte Spill
	incl	%r12d
.LBB18_2:                               # %_label23
                                        # =>This Inner Loop Header: Depth=1
	movq	8(%r15), %r13
	movl	16(%r15), %ebx
	movl	$1, %edi
	movl	$4, %esi
	callq	calloc
	movq	%rax, %rbp
	movl	%ebx, (%rbp)
	movl	$40, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_CArray_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_Cint_Mclass, 24(%rax)
	movq	%rbp, 8(%rax)
	movl	$1, 16(%rax)
	movq	%r13, 32(%rax)
	movq	(%rax), %rax
	movq	152(%rax), %r14
	movl	$1, %edi
	movl	$4, %esi
	callq	calloc
	movq	%rax, %rbp
	movl	%ebx, (%rbp)
	movl	$40, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_CArray_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_Cint_Mclass, 24(%rax)
	movq	%rbp, 8(%rax)
	movl	$1, 16(%rax)
	movq	%r13, 32(%rax)
	movq	%rax, %rdi
	callq	*%r14
	cmpl	(%rax), %r12d
	jl	.LBB18_1
# BB#3:                                 # %_label24
	movl	4(%rsp), %eax           # 4-byte Reload
	addq	$8, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	ret
.Ltmp150:
	.size	_Pshadow_Pstandard_CArray_Msize, .Ltmp150-_Pshadow_Pstandard_CArray_Msize
	.cfi_endproc

	.globl	_Pshadow_Pstandard_CArray_Mallocate_Pshadow_Pstandard_CClass_Pshadow_Pstandard_Cint
	.align	16, 0x90
	.type	_Pshadow_Pstandard_CArray_Mallocate_Pshadow_Pstandard_CClass_Pshadow_Pstandard_Cint,@function
_Pshadow_Pstandard_CArray_Mallocate_Pshadow_Pstandard_CClass_Pshadow_Pstandard_Cint: # @_Pshadow_Pstandard_CArray_Mallocate_Pshadow_Pstandard_CClass_Pshadow_Pstandard_Cint
# BB#0:
	movl	56(%rsi), %esi
	movl	%edx, %edi
	jmp	calloc                  # TAILCALL
.Ltmp151:
	.size	_Pshadow_Pstandard_CArray_Mallocate_Pshadow_Pstandard_CClass_Pshadow_Pstandard_Cint, .Ltmp151-_Pshadow_Pstandard_CArray_Mallocate_Pshadow_Pstandard_CClass_Pshadow_Pstandard_Cint

	.globl	_Pshadow_Pstandard_CArray_Mindex_Pshadow_Pstandard_Cint_A1
	.align	16, 0x90
	.type	_Pshadow_Pstandard_CArray_Mindex_Pshadow_Pstandard_Cint_A1,@function
_Pshadow_Pstandard_CArray_Mindex_Pshadow_Pstandard_Cint_A1: # @_Pshadow_Pstandard_CArray_Mindex_Pshadow_Pstandard_Cint_A1
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp157:
	.cfi_def_cfa_offset 16
	pushq	%r15
.Ltmp158:
	.cfi_def_cfa_offset 24
	pushq	%r14
.Ltmp159:
	.cfi_def_cfa_offset 32
	pushq	%rbx
.Ltmp160:
	.cfi_def_cfa_offset 40
	pushq	%rax
.Ltmp161:
	.cfi_def_cfa_offset 48
.Ltmp162:
	.cfi_offset %rbx, -40
.Ltmp163:
	.cfi_offset %r14, -32
.Ltmp164:
	.cfi_offset %r15, -24
.Ltmp165:
	.cfi_offset %rbp, -16
	cmpl	16(%rdi), %edx
	jne	.LBB20_11
# BB#1:
	movq	8(%rdi), %rax
	movl	(%rsi), %ebx
	cmpl	(%rax), %ebx
	jae	.LBB20_11
# BB#2:
	cmpl	$1, %edx
	je	.LBB20_3
# BB#4:                                 # %.preheader.i.preheader
	movl	$1, %ecx
	subl	%edx, %ecx
	addq	$4, %rax
	addq	$4, %rsi
	.align	16, 0x90
.LBB20_5:                               # %.preheader.i
                                        # =>This Inner Loop Header: Depth=1
	movl	(%rax), %ebp
	movl	(%rsi), %edx
	cmpl	%ebp, %edx
	jae	.LBB20_11
# BB#6:                                 #   in Loop: Header=BB20_5 Depth=1
	imull	%ebx, %ebp
	addl	%edx, %ebp
	addq	$4, %rax
	addq	$4, %rsi
	incl	%ecx
	movl	%ebp, %ebx
	jne	.LBB20_5
	jmp	.LBB20_7
.LBB20_3:
	movl	%ebx, %ebp
.LBB20_7:                               # %computeIndex.exit
	movq	24(%rdi), %rbx
	movq	32(%rdi), %r15
	testb	$2, 48(%rbx)
	je	.LBB20_8
# BB#10:
	movl	52(%rbx), %edi
	callq	malloc
	movq	%rax, %r14
	movq	%rbx, (%r14)
	movl	56(%rbx), %edx
	imull	%edx, %ebp
	movslq	%ebp, %rax
	addq	%rax, %r15
	leaq	8(%r14), %rdi
	movq	%r15, %rsi
	callq	memcpy
	movq	%r14, %rax
	jmp	.LBB20_9
.LBB20_8:
	movslq	%ebp, %rax
	movq	(%r15,%rax,8), %rax
.LBB20_9:
	addq	$8, %rsp
	popq	%rbx
	popq	%r14
	popq	%r15
	popq	%rbp
	ret
.LBB20_11:                              # %throw.i
	movl	$8, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_CException_Mclass, (%rax)
	movq	$.L_string286, 8(%rax)
	movq	$_Pshadow_Pstandard_CIndexOutOfBoundsException_Mclass, (%rax)
	movq	%rax, %rdi
	callq	*_Pshadow_Pstandard_CIndexOutOfBoundsException_Mclass+128(%rip)
.Ltmp166:
	.size	_Pshadow_Pstandard_CArray_Mindex_Pshadow_Pstandard_Cint_A1, .Ltmp166-_Pshadow_Pstandard_CArray_Mindex_Pshadow_Pstandard_Cint_A1
	.cfi_endproc

	.globl	_Pshadow_Pstandard_CArray_Mindex_Pshadow_Pstandard_Cint_A1_CT
	.align	16, 0x90
	.type	_Pshadow_Pstandard_CArray_Mindex_Pshadow_Pstandard_Cint_A1_CT,@function
_Pshadow_Pstandard_CArray_Mindex_Pshadow_Pstandard_Cint_A1_CT: # @_Pshadow_Pstandard_CArray_Mindex_Pshadow_Pstandard_Cint_A1_CT
	.cfi_startproc
# BB#0:
	pushq	%rax
.Ltmp168:
	.cfi_def_cfa_offset 16
	cmpl	16(%rdi), %edx
	jne	.LBB21_9
# BB#1:
	movq	8(%rdi), %r9
	movl	(%rsi), %r10d
	cmpl	(%r9), %r10d
	jae	.LBB21_9
# BB#2:
	cmpl	$1, %edx
	je	.LBB21_3
# BB#4:                                 # %.preheader.i.preheader
	movl	$1, %r8d
	subl	%edx, %r8d
	addq	$4, %r9
	addq	$4, %rsi
	.align	16, 0x90
.LBB21_5:                               # %.preheader.i
                                        # =>This Inner Loop Header: Depth=1
	movl	(%r9), %eax
	movl	(%rsi), %edx
	cmpl	%eax, %edx
	jae	.LBB21_9
# BB#6:                                 #   in Loop: Header=BB21_5 Depth=1
	imull	%r10d, %eax
	addl	%edx, %eax
	addq	$4, %r9
	addq	$4, %rsi
	incl	%r8d
	movl	%eax, %r10d
	jne	.LBB21_5
	jmp	.LBB21_7
.LBB21_3:
	movl	%r10d, %eax
.LBB21_7:                               # %computeIndex.exit
	movq	24(%rdi), %rdx
	movq	32(%rdi), %rdi
	testb	$2, 48(%rdx)
	je	.LBB21_10
# BB#8:
	movl	56(%rdx), %edx
	imull	%edx, %eax
	movslq	%eax, %rax
	addq	%rax, %rdi
	addq	$8, %rcx
	movq	%rcx, %rsi
	callq	memcpy
	popq	%rax
	ret
.LBB21_10:
	movq	%rcx, (%rdi)
	popq	%rax
	ret
.LBB21_9:                               # %throw.i
	movl	$8, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_CException_Mclass, (%rax)
	movq	$.L_string286, 8(%rax)
	movq	$_Pshadow_Pstandard_CIndexOutOfBoundsException_Mclass, (%rax)
	movq	%rax, %rdi
	callq	*_Pshadow_Pstandard_CIndexOutOfBoundsException_Mclass+128(%rip)
.Ltmp169:
	.size	_Pshadow_Pstandard_CArray_Mindex_Pshadow_Pstandard_Cint_A1_CT, .Ltmp169-_Pshadow_Pstandard_CArray_Mindex_Pshadow_Pstandard_Cint_A1_CT
	.cfi_endproc

	.globl	_Pshadow_Pstandard_CArray_Mindex_Pshadow_Pstandard_Cint_A1_old
	.align	16, 0x90
	.type	_Pshadow_Pstandard_CArray_Mindex_Pshadow_Pstandard_Cint_A1_old,@function
_Pshadow_Pstandard_CArray_Mindex_Pshadow_Pstandard_Cint_A1_old: # @_Pshadow_Pstandard_CArray_Mindex_Pshadow_Pstandard_Cint_A1_old
# BB#0:
	pushq	%rax
	callq	abort
.Ltmp170:
	.size	_Pshadow_Pstandard_CArray_Mindex_Pshadow_Pstandard_Cint_A1_old, .Ltmp170-_Pshadow_Pstandard_CArray_Mindex_Pshadow_Pstandard_Cint_A1_old

	.globl	_Pshadow_Pstandard_CArray_Mindex_Pshadow_Pstandard_Cint_A1_CT_old
	.align	16, 0x90
	.type	_Pshadow_Pstandard_CArray_Mindex_Pshadow_Pstandard_Cint_A1_CT_old,@function
_Pshadow_Pstandard_CArray_Mindex_Pshadow_Pstandard_Cint_A1_CT_old: # @_Pshadow_Pstandard_CArray_Mindex_Pshadow_Pstandard_Cint_A1_CT_old
# BB#0:
	pushq	%rax
	callq	abort
.Ltmp171:
	.size	_Pshadow_Pstandard_CArray_Mindex_Pshadow_Pstandard_Cint_A1_CT_old, .Ltmp171-_Pshadow_Pstandard_CArray_Mindex_Pshadow_Pstandard_Cint_A1_CT_old

	.globl	_Pshadow_Pstandard_CArray_Msubarray_Pshadow_Pstandard_Cint_Pshadow_Pstandard_Cint
	.align	16, 0x90
	.type	_Pshadow_Pstandard_CArray_Msubarray_Pshadow_Pstandard_Cint_Pshadow_Pstandard_Cint,@function
_Pshadow_Pstandard_CArray_Msubarray_Pshadow_Pstandard_Cint_Pshadow_Pstandard_Cint: # @_Pshadow_Pstandard_CArray_Msubarray_Pshadow_Pstandard_Cint_Pshadow_Pstandard_Cint
# BB#0:
	pushq	%rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	pushq	%rax
	movl	%edx, %ebp
	movl	%esi, %r14d
	movq	%rdi, %r13
	movl	$40, %edi
	callq	malloc
	movq	%rax, %rbx
	movq	24(%r13), %rax
	movq	%rax, (%rsp)            # 8-byte Spill
	movl	16(%r13), %r15d
	movl	%r15d, %edi
	movl	$4, %esi
	callq	calloc
	movq	%rax, %r12
	subl	%r14d, %ebp
	movl	%ebp, (%r12)
	leaq	4(%r12), %rdi
	movq	8(%r13), %rsi
	leal	-1(%r15), %edx
	addq	$4, %rsi
	callq	memcpy
	movq	(%rsp), %rcx            # 8-byte Reload
	imull	56(%rcx), %r14d
	movq	32(%r13), %rax
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rbx)
	movq	$_Pshadow_Pstandard_CArray_Mclass, (%rbx)
	movq	%rcx, 24(%rbx)
	movl	%r15d, 16(%rbx)
	movq	%r12, 8(%rbx)
	movslq	%r14d, %rcx
	addq	%rax, %rcx
	movq	%rcx, 32(%rbx)
	movq	%rbx, %rax
	addq	$8, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	ret
.Ltmp172:
	.size	_Pshadow_Pstandard_CArray_Msubarray_Pshadow_Pstandard_Cint_Pshadow_Pstandard_Cint, .Ltmp172-_Pshadow_Pstandard_CArray_Msubarray_Pshadow_Pstandard_Cint_Pshadow_Pstandard_Cint

	.globl	_Pshadow_Pstandard_Cboolean_MtoString
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Cboolean_MtoString,@function
_Pshadow_Pstandard_Cboolean_MtoString:  # @_Pshadow_Pstandard_Cboolean_MtoString
# BB#0:                                 # %_label2
	movb	8(%rdi), %dl
	movl	$.L_string114, %ecx
	movl	$.L_string216, %eax
	testb	%dl, %dl
	cmovneq	%rcx, %rax
	ret
.Ltmp173:
	.size	_Pshadow_Pstandard_Cboolean_MtoString, .Ltmp173-_Pshadow_Pstandard_Cboolean_MtoString

	.globl	_Pshadow_Pstandard_Cboolean_Mcreate
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Cboolean_Mcreate,@function
_Pshadow_Pstandard_Cboolean_Mcreate:    # @_Pshadow_Pstandard_Cboolean_Mcreate
# BB#0:
	movq	$_Pshadow_Pstandard_Cboolean_Mclass, (%rdi)
	movq	%rdi, %rax
	ret
.Ltmp174:
	.size	_Pshadow_Pstandard_Cboolean_Mcreate, .Ltmp174-_Pshadow_Pstandard_Cboolean_Mcreate

	.globl	_Pshadow_Pstandard_Cbyte_Mmin_Pshadow_Pstandard_Cbyte
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Cbyte_Mmin_Pshadow_Pstandard_Cbyte,@function
_Pshadow_Pstandard_Cbyte_Mmin_Pshadow_Pstandard_Cbyte: # @_Pshadow_Pstandard_Cbyte_Mmin_Pshadow_Pstandard_Cbyte
# BB#0:                                 # %_label2
	movb	8(%rdi), %al
	cmpb	%sil, %al
	jle	.LBB27_2
# BB#1:                                 # %_label2
	movb	%sil, %al
.LBB27_2:                               # %_label2
	ret
.Ltmp175:
	.size	_Pshadow_Pstandard_Cbyte_Mmin_Pshadow_Pstandard_Cbyte, .Ltmp175-_Pshadow_Pstandard_Cbyte_Mmin_Pshadow_Pstandard_Cbyte

	.globl	_Pshadow_Pstandard_Cbyte_Mmax_Pshadow_Pstandard_Cbyte
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Cbyte_Mmax_Pshadow_Pstandard_Cbyte,@function
_Pshadow_Pstandard_Cbyte_Mmax_Pshadow_Pstandard_Cbyte: # @_Pshadow_Pstandard_Cbyte_Mmax_Pshadow_Pstandard_Cbyte
# BB#0:                                 # %_label5
	movb	8(%rdi), %al
	cmpb	%sil, %al
	jge	.LBB28_2
# BB#1:                                 # %_label5
	movb	%sil, %al
.LBB28_2:                               # %_label5
	ret
.Ltmp176:
	.size	_Pshadow_Pstandard_Cbyte_Mmax_Pshadow_Pstandard_Cbyte, .Ltmp176-_Pshadow_Pstandard_Cbyte_Mmax_Pshadow_Pstandard_Cbyte

	.globl	_Pshadow_Pstandard_Cbyte_Mabs
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Cbyte_Mabs,@function
_Pshadow_Pstandard_Cbyte_Mabs:          # @_Pshadow_Pstandard_Cbyte_Mabs
# BB#0:                                 # %_label8
	movb	8(%rdi), %al
	movb	%al, %cl
	sarb	$7, %cl
	addb	%cl, %al
	xorb	%cl, %al
	ret
.Ltmp177:
	.size	_Pshadow_Pstandard_Cbyte_Mabs, .Ltmp177-_Pshadow_Pstandard_Cbyte_Mabs

	.globl	_Pshadow_Pstandard_Cbyte_MtoString
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Cbyte_MtoString,@function
_Pshadow_Pstandard_Cbyte_MtoString:     # @_Pshadow_Pstandard_Cbyte_MtoString
	.cfi_startproc
# BB#0:
	pushq	%rbx
.Ltmp180:
	.cfi_def_cfa_offset 16
.Ltmp181:
	.cfi_offset %rbx, -16
	movb	8(%rdi), %bl
	movl	$16, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_Cbyte_Mclass, (%rax)
	movb	%bl, 8(%rax)
	movq	%rax, %rdi
	movl	$10, %esi
	popq	%rbx
	jmp	_Pshadow_Pstandard_Cbyte_MtoString_Pshadow_Pstandard_Cubyte # TAILCALL
.Ltmp182:
	.size	_Pshadow_Pstandard_Cbyte_MtoString, .Ltmp182-_Pshadow_Pstandard_Cbyte_MtoString
	.cfi_endproc

	.globl	_Pshadow_Pstandard_Cbyte_MtoString_Pshadow_Pstandard_Cubyte
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Cbyte_MtoString_Pshadow_Pstandard_Cubyte,@function
_Pshadow_Pstandard_Cbyte_MtoString_Pshadow_Pstandard_Cubyte: # @_Pshadow_Pstandard_Cbyte_MtoString_Pshadow_Pstandard_Cubyte
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp190:
	.cfi_def_cfa_offset 16
	pushq	%r15
.Ltmp191:
	.cfi_def_cfa_offset 24
	pushq	%r14
.Ltmp192:
	.cfi_def_cfa_offset 32
	pushq	%r13
.Ltmp193:
	.cfi_def_cfa_offset 40
	pushq	%r12
.Ltmp194:
	.cfi_def_cfa_offset 48
	pushq	%rbx
.Ltmp195:
	.cfi_def_cfa_offset 56
	pushq	%rax
.Ltmp196:
	.cfi_def_cfa_offset 64
.Ltmp197:
	.cfi_offset %rbx, -56
.Ltmp198:
	.cfi_offset %r12, -48
.Ltmp199:
	.cfi_offset %r13, -40
.Ltmp200:
	.cfi_offset %r14, -32
.Ltmp201:
	.cfi_offset %r15, -24
.Ltmp202:
	.cfi_offset %rbp, -16
	movl	%esi, %r14d
	movb	8(%rdi), %r15b
	movl	_Pshadow_Pstandard_CMutableString_Mclass+52(%rip), %edi
	callq	malloc
	movq	%rax, %r13
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%r13)
	movq	$_Pshadow_Pstandard_CMutableString_Mclass, (%r13)
	movl	$10, %edi
	movl	$1, %esi
	callq	calloc
	movq	%rax, 8(%r13)
	movl	$10, 16(%r13)
	movb	%r15b, %al
	sarb	$7, %al
	movl	$0, 24(%r13)
	movb	%r15b, %bpl
	addb	%al, %bpl
	xorb	%al, %bpl
	movl	$48, %r12d
	.align	16, 0x90
.LBB31_1:                               # %_label3.i
                                        # =>This Inner Loop Header: Depth=1
	movq	(%r13), %rax
	movq	112(%rax), %rbx
	movl	$16, %edi
	callq	malloc
	movq	%rax, %rcx
	movq	$_Pshadow_Pstandard_Ccode_Mclass, (%rcx)
	movzbl	%bpl, %eax
                                        # kill: EAX<def> EAX<kill> AX<def>
	divb	%r14b
	movw	%ax, %bp
	shrw	$8, %ax
	movq	$_Pshadow_Pstandard_Ccode_Mclass, (%rcx)
	cmpb	$10, %al
	movl	$87, %edx
	cmovbl	%r12d, %edx
	movsbl	%al, %eax
	addl	%edx, %eax
	movl	%eax, 8(%rcx)
	movq	%r13, %rdi
	movq	%rcx, %rsi
	callq	*%rbx
	testb	%bpl, %bpl
	jne	.LBB31_1
# BB#2:                                 # %_Pshadow_Pstandard_Cubyte_MtoString_Pshadow_Pstandard_Cubyte.exit
	movq	(%r13), %rax
	movq	%r13, %rdi
	callq	*152(%rax)
	movq	(%rax), %rcx
	movq	%rax, %rdi
	callq	*104(%rcx)
	movq	%rax, %rbx
	testb	%r15b, %r15b
	jns	.LBB31_6
# BB#3:                                 # %_label10
	movl	$16, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_Ccode_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_Ccode_Mclass, (%rax)
	movl	$45, 8(%rax)
	movq	(%rax), %rax
	movq	104(%rax), %rbp
	movl	$16, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_Ccode_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_Ccode_Mclass, (%rax)
	movl	$45, 8(%rax)
	movq	%rax, %rdi
	callq	*%rbp
	movq	%rax, %rbp
	movl	$.L_string1424, %eax
	testq	%rbx, %rbx
	je	.LBB31_5
# BB#4:                                 # %_label13
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*104(%rax)
.LBB31_5:                               # %_label14
	movq	%rbp, %rdi
	movq	%rax, %rsi
	callq	_Pshadow_Pstandard_CString_Mconcatenate_Pshadow_Pstandard_CString
	movq	%rax, %rbx
.LBB31_6:                               # %_label11
	movq	%rbx, %rax
	addq	$8, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	ret
.Ltmp203:
	.size	_Pshadow_Pstandard_Cbyte_MtoString_Pshadow_Pstandard_Cubyte, .Ltmp203-_Pshadow_Pstandard_Cbyte_MtoString_Pshadow_Pstandard_Cubyte
	.cfi_endproc

	.globl	_Pshadow_Pstandard_Cbyte_Mcreate
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Cbyte_Mcreate,@function
_Pshadow_Pstandard_Cbyte_Mcreate:       # @_Pshadow_Pstandard_Cbyte_Mcreate
# BB#0:
	movq	$_Pshadow_Pstandard_Cbyte_Mclass, (%rdi)
	movq	%rdi, %rax
	ret
.Ltmp204:
	.size	_Pshadow_Pstandard_Cbyte_Mcreate, .Ltmp204-_Pshadow_Pstandard_Cbyte_Mcreate

	.globl	_Pshadow_Pstandard_CClass_MisSubtype_Pshadow_Pstandard_CClass
	.align	16, 0x90
	.type	_Pshadow_Pstandard_CClass_MisSubtype_Pshadow_Pstandard_CClass,@function
_Pshadow_Pstandard_CClass_MisSubtype_Pshadow_Pstandard_CClass: # @_Pshadow_Pstandard_CClass_MisSubtype_Pshadow_Pstandard_CClass
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp212:
	.cfi_def_cfa_offset 16
	pushq	%r15
.Ltmp213:
	.cfi_def_cfa_offset 24
	pushq	%r14
.Ltmp214:
	.cfi_def_cfa_offset 32
	pushq	%r13
.Ltmp215:
	.cfi_def_cfa_offset 40
	pushq	%r12
.Ltmp216:
	.cfi_def_cfa_offset 48
	pushq	%rbx
.Ltmp217:
	.cfi_def_cfa_offset 56
	pushq	%rax
.Ltmp218:
	.cfi_def_cfa_offset 64
.Ltmp219:
	.cfi_offset %rbx, -56
.Ltmp220:
	.cfi_offset %r12, -48
.Ltmp221:
	.cfi_offset %r13, -40
.Ltmp222:
	.cfi_offset %r14, -32
.Ltmp223:
	.cfi_offset %r15, -24
.Ltmp224:
	.cfi_offset %rbp, -16
	movq	%rsi, %rbx
	movq	%rdi, %r15
	testq	%r15, %r15
	je	.LBB33_2
# BB#1:                                 # %_label4
	movq	(%r15), %rax
	movq	%r15, %rdi
	movq	%rbx, %rsi
	callq	*80(%rax)
	movb	%al, %cl
	movb	$1, %al
	testb	$1, %cl
	je	.LBB33_3
	jmp	.LBB33_11
.LBB33_2:                               # %_label5
	movb	$1, %al
	testq	%rbx, %rbx
	je	.LBB33_11
.LBB33_3:                               # %_label2
	testb	$1, 48(%rbx)
	je	.LBB33_5
# BB#4:                                 # %_label13.preheader
	movq	%rbx, (%rsp)            # 8-byte Spill
	xorl	%r12d, %r12d
	jmp	.LBB33_10
	.align	16, 0x90
.LBB33_9:                               # %_label15
                                        #   in Loop: Header=BB33_10 Depth=1
	incl	%r12d
.LBB33_10:                              # %_label13
                                        # =>This Inner Loop Header: Depth=1
	movq	8(%r15), %r13
	movl	16(%r15), %ebp
	movl	$1, %edi
	movl	$4, %esi
	callq	calloc
	movq	%rax, %rbx
	movl	%ebp, (%rbx)
	movl	$40, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_CArray_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_CClass_Mclass, 24(%rax)
	movq	%rbx, 8(%rax)
	movl	$1, 16(%rax)
	movq	%r13, 32(%rax)
	movq	(%rax), %rax
	movq	160(%rax), %r14
	movl	$1, %edi
	movl	$4, %esi
	callq	calloc
	movq	%rax, %rbx
	movl	%ebp, (%rbx)
	movl	$40, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_CArray_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_CClass_Mclass, 24(%rax)
	movq	%rbx, 8(%rax)
	movl	$1, 16(%rax)
	movq	%r13, 32(%rax)
	movq	%rax, %rdi
	callq	*%r14
	movl	%eax, %ecx
	xorb	%al, %al
	cmpl	%ecx, %r12d
	movq	(%rsp), %rsi            # 8-byte Reload
	jge	.LBB33_11
# BB#7:                                 # %_label12
                                        #   in Loop: Header=BB33_10 Depth=1
	movslq	%r12d, %rax
	movq	8(%r15), %rcx
	movq	(%rcx,%rax,8), %rdi
	testq	%rdi, %rdi
	je	.LBB33_9
# BB#8:                                 # %_label20
                                        #   in Loop: Header=BB33_10 Depth=1
	callq	_Pshadow_Pstandard_CClass_MisSubtype_Pshadow_Pstandard_CClass
	movb	%al, %cl
	movb	$1, %al
	testb	$1, %cl
	jne	.LBB33_11
	jmp	.LBB33_9
.LBB33_5:                               # %_label6
	movq	40(%r15), %rdi
	xorb	%al, %al
	testq	%rdi, %rdi
	je	.LBB33_11
# BB#6:                                 # %_label11
	movq	%rbx, %rsi
	callq	_Pshadow_Pstandard_CClass_MisSubtype_Pshadow_Pstandard_CClass
.LBB33_11:                              # %_label0
	addq	$8, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	ret
.Ltmp225:
	.size	_Pshadow_Pstandard_CClass_MisSubtype_Pshadow_Pstandard_CClass, .Ltmp225-_Pshadow_Pstandard_CClass_MisSubtype_Pshadow_Pstandard_CClass
	.cfi_endproc

	.globl	_Pshadow_Pstandard_CClass_MisInterface
	.align	16, 0x90
	.type	_Pshadow_Pstandard_CClass_MisInterface,@function
_Pshadow_Pstandard_CClass_MisInterface: # @_Pshadow_Pstandard_CClass_MisInterface
# BB#0:
	movb	48(%rdi), %al
	andb	$1, %al
	ret
.Ltmp226:
	.size	_Pshadow_Pstandard_CClass_MisInterface, .Ltmp226-_Pshadow_Pstandard_CClass_MisInterface

	.globl	_Pshadow_Pstandard_CClass_MisPrimitive
	.align	16, 0x90
	.type	_Pshadow_Pstandard_CClass_MisPrimitive,@function
_Pshadow_Pstandard_CClass_MisPrimitive: # @_Pshadow_Pstandard_CClass_MisPrimitive
# BB#0:
	movb	48(%rdi), %al
	andb	$2, %al
	shrb	%al
	ret
.Ltmp227:
	.size	_Pshadow_Pstandard_CClass_MisPrimitive, .Ltmp227-_Pshadow_Pstandard_CClass_MisPrimitive

	.globl	_Pshadow_Pstandard_CClass_Mparent
	.align	16, 0x90
	.type	_Pshadow_Pstandard_CClass_Mparent,@function
_Pshadow_Pstandard_CClass_Mparent:      # @_Pshadow_Pstandard_CClass_Mparent
# BB#0:
	movq	40(%rdi), %rax
	ret
.Ltmp228:
	.size	_Pshadow_Pstandard_CClass_Mparent, .Ltmp228-_Pshadow_Pstandard_CClass_Mparent

	.globl	_Pshadow_Pstandard_CClass_MtoString
	.align	16, 0x90
	.type	_Pshadow_Pstandard_CClass_MtoString,@function
_Pshadow_Pstandard_CClass_MtoString:    # @_Pshadow_Pstandard_CClass_MtoString
# BB#0:
	movq	32(%rdi), %rax
	ret
.Ltmp229:
	.size	_Pshadow_Pstandard_CClass_MtoString, .Ltmp229-_Pshadow_Pstandard_CClass_MtoString

	.globl	_Pshadow_Pstandard_CClass_Mcreate
	.align	16, 0x90
	.type	_Pshadow_Pstandard_CClass_Mcreate,@function
_Pshadow_Pstandard_CClass_Mcreate:      # @_Pshadow_Pstandard_CClass_Mcreate
# BB#0:
	pushq	%rbx
	movq	%rdi, %rbx
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rbx)
	movq	$_Pshadow_Pstandard_CClass_Mclass, (%rbx)
	movl	$0, 48(%rbx)
	movl	$0, 56(%rbx)
	movq	$.L_string286, 32(%rbx)
	movq	$0, 24(%rbx)
	xorl	%edi, %edi
	movl	$8, %esi
	callq	calloc
	movq	%rax, 8(%rbx)
	movl	$0, 16(%rbx)
	movq	$0, 40(%rbx)
	movl	$0, 52(%rbx)
	movq	%rbx, %rax
	popq	%rbx
	ret
.Ltmp230:
	.size	_Pshadow_Pstandard_CClass_Mcreate, .Ltmp230-_Pshadow_Pstandard_CClass_Mcreate

	.globl	_Pshadow_Pstandard_CClass_Mallocate
	.align	16, 0x90
	.type	_Pshadow_Pstandard_CClass_Mallocate,@function
_Pshadow_Pstandard_CClass_Mallocate:    # @_Pshadow_Pstandard_CClass_Mallocate
# BB#0:
	pushq	%rbx
	movq	%rdi, %rbx
	movl	52(%rbx), %edi
	callq	malloc
	movq	%rbx, (%rax)
	popq	%rbx
	ret
.Ltmp231:
	.size	_Pshadow_Pstandard_CClass_Mallocate, .Ltmp231-_Pshadow_Pstandard_CClass_Mallocate

	.globl	_Pshadow_Pstandard_CClass_Mallocate_Pshadow_Pstandard_Cint
	.align	16, 0x90
	.type	_Pshadow_Pstandard_CClass_Mallocate_Pshadow_Pstandard_Cint,@function
_Pshadow_Pstandard_CClass_Mallocate_Pshadow_Pstandard_Cint: # @_Pshadow_Pstandard_CClass_Mallocate_Pshadow_Pstandard_Cint
# BB#0:
	movl	56(%rdi), %eax
	movl	%esi, %edi
	movl	%eax, %esi
	jmp	calloc                  # TAILCALL
.Ltmp232:
	.size	_Pshadow_Pstandard_CClass_Mallocate_Pshadow_Pstandard_Cint, .Ltmp232-_Pshadow_Pstandard_CClass_Mallocate_Pshadow_Pstandard_Cint

	.globl	_Pshadow_Pstandard_Ccode_MtoUpperCase
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Ccode_MtoUpperCase,@function
_Pshadow_Pstandard_Ccode_MtoUpperCase:  # @_Pshadow_Pstandard_Ccode_MtoUpperCase
# BB#0:
	movl	8(%rdi), %eax
	leal	-97(%rax), %ecx
	cmpl	$25, %ecx
	ja	.LBB41_2
# BB#1:                                 # %_label0
	addl	$-32, %eax
.LBB41_2:                               # %_label2
	ret
.Ltmp233:
	.size	_Pshadow_Pstandard_Ccode_MtoUpperCase, .Ltmp233-_Pshadow_Pstandard_Ccode_MtoUpperCase

	.globl	_Pshadow_Pstandard_Ccode_MtoLowerCase
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Ccode_MtoLowerCase,@function
_Pshadow_Pstandard_Ccode_MtoLowerCase:  # @_Pshadow_Pstandard_Ccode_MtoLowerCase
# BB#0:
	movl	8(%rdi), %eax
	leal	-65(%rax), %ecx
	cmpl	$25, %ecx
	ja	.LBB42_2
# BB#1:                                 # %_label5
	addl	$32, %eax
.LBB42_2:                               # %_label7
	ret
.Ltmp234:
	.size	_Pshadow_Pstandard_Ccode_MtoLowerCase, .Ltmp234-_Pshadow_Pstandard_Ccode_MtoLowerCase

	.globl	_Pshadow_Pstandard_Ccode_MtoString
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Ccode_MtoString,@function
_Pshadow_Pstandard_Ccode_MtoString:     # @_Pshadow_Pstandard_Ccode_MtoString
	.cfi_startproc
# BB#0:
	pushq	%r14
.Ltmp238:
	.cfi_def_cfa_offset 16
	pushq	%rbx
.Ltmp239:
	.cfi_def_cfa_offset 24
	pushq	%rax
.Ltmp240:
	.cfi_def_cfa_offset 32
.Ltmp241:
	.cfi_offset %rbx, -24
.Ltmp242:
	.cfi_offset %r14, -16
	movl	8(%rdi), %ebx
	movl	$1, %edi
	movl	$4, %esi
	callq	calloc
	movq	%rax, %r14
	movl	%ebx, (%r14)
	movl	$32, %edi
	callq	malloc
	movq	%rax, %rbx
	movq	$_Pshadow_Pstandard_CString_Mclass, (%rbx)
	movq	%rbx, %rdi
	movq	%r14, %rsi
	movl	$1, %edx
	callq	_Pshadow_Pstandard_CString_Mcreate_Pshadow_Pstandard_Ccode_A1
	movq	%rbx, %rax
	addq	$8, %rsp
	popq	%rbx
	popq	%r14
	ret
.Ltmp243:
	.size	_Pshadow_Pstandard_Ccode_MtoString, .Ltmp243-_Pshadow_Pstandard_Ccode_MtoString
	.cfi_endproc

	.globl	_Pshadow_Pstandard_Ccode_Mcreate
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Ccode_Mcreate,@function
_Pshadow_Pstandard_Ccode_Mcreate:       # @_Pshadow_Pstandard_Ccode_Mcreate
# BB#0:
	movq	$_Pshadow_Pstandard_Ccode_Mclass, (%rdi)
	movq	%rdi, %rax
	ret
.Ltmp244:
	.size	_Pshadow_Pstandard_Ccode_Mcreate, .Ltmp244-_Pshadow_Pstandard_Ccode_Mcreate

	.globl	_Pshadow_Pstandard_Cdouble_Mcreate
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Cdouble_Mcreate,@function
_Pshadow_Pstandard_Cdouble_Mcreate:     # @_Pshadow_Pstandard_Cdouble_Mcreate
# BB#0:
	movq	$_Pshadow_Pstandard_Cdouble_Mclass, (%rdi)
	movq	%rdi, %rax
	ret
.Ltmp245:
	.size	_Pshadow_Pstandard_Cdouble_Mcreate, .Ltmp245-_Pshadow_Pstandard_Cdouble_Mcreate

	.globl	_Pshadow_Pstandard_Cdouble_MtoString
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Cdouble_MtoString,@function
_Pshadow_Pstandard_Cdouble_MtoString:   # @_Pshadow_Pstandard_Cdouble_MtoString
	.cfi_startproc
# BB#0:
	pushq	%r14
.Ltmp249:
	.cfi_def_cfa_offset 16
	pushq	%rbx
.Ltmp250:
	.cfi_def_cfa_offset 24
	subq	$24, %rsp
.Ltmp251:
	.cfi_def_cfa_offset 48
.Ltmp252:
	.cfi_offset %rbx, -24
.Ltmp253:
	.cfi_offset %r14, -16
	vmovsd	8(%rdi), %xmm0
	leaq	(%rsp), %r14
	movq	%r14, %rdi
	movl	$.Lformat, %esi
	movb	$1, %al
	callq	sprintf
	movl	$32, %edi
	callq	malloc
	movq	%rax, %rbx
	movq	$_Pshadow_Pstandard_CString_Mclass, (%rbx)
	movq	%r14, %rdi
	callq	strlen
	movq	%rbx, %rdi
	movq	%r14, %rsi
	movl	%eax, %edx
	callq	_Pshadow_Pstandard_CString_Mcreate_Pshadow_Pstandard_Cbyte_A1
	addq	$24, %rsp
	popq	%rbx
	popq	%r14
	ret
.Ltmp254:
	.size	_Pshadow_Pstandard_Cdouble_MtoString, .Ltmp254-_Pshadow_Pstandard_Cdouble_MtoString
	.cfi_endproc

	.globl	_Pshadow_Pstandard_CException_Mmessage
	.align	16, 0x90
	.type	_Pshadow_Pstandard_CException_Mmessage,@function
_Pshadow_Pstandard_CException_Mmessage: # @_Pshadow_Pstandard_CException_Mmessage
# BB#0:
	movq	8(%rdi), %rax
	ret
.Ltmp255:
	.size	_Pshadow_Pstandard_CException_Mmessage, .Ltmp255-_Pshadow_Pstandard_CException_Mmessage

	.globl	_Pshadow_Pstandard_CException_Mterminate
	.align	16, 0x90
	.type	_Pshadow_Pstandard_CException_Mterminate,@function
_Pshadow_Pstandard_CException_Mterminate: # @_Pshadow_Pstandard_CException_Mterminate
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp263:
	.cfi_def_cfa_offset 16
	pushq	%r15
.Ltmp264:
	.cfi_def_cfa_offset 24
	pushq	%r14
.Ltmp265:
	.cfi_def_cfa_offset 32
	pushq	%r13
.Ltmp266:
	.cfi_def_cfa_offset 40
	pushq	%r12
.Ltmp267:
	.cfi_def_cfa_offset 48
	pushq	%rbx
.Ltmp268:
	.cfi_def_cfa_offset 56
	pushq	%rax
.Ltmp269:
	.cfi_def_cfa_offset 64
.Ltmp270:
	.cfi_offset %rbx, -56
.Ltmp271:
	.cfi_offset %r12, -48
.Ltmp272:
	.cfi_offset %r13, -40
.Ltmp273:
	.cfi_offset %r14, -32
.Ltmp274:
	.cfi_offset %r15, -24
.Ltmp275:
	.cfi_offset %rbp, -16
	movq	%rdi, %r14
	movq	_Pshadow_Pio_CConsole_Minstance(%rip), %rbx
	testq	%rbx, %rbx
	jne	.LBB48_2
# BB#1:                                 # %_label0
	movl	_Pshadow_Pio_CConsole_Mclass+52(%rip), %edi
	callq	malloc
	movq	%rax, %rbx
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rbx)
	movq	$_Pshadow_Pio_CConsole_Mclass, (%rbx)
	movb	$0, 8(%rbx)
	movq	%rbx, _Pshadow_Pio_CConsole_Minstance(%rip)
.LBB48_2:                               # %_label1
	movq	(%rbx), %rax
	movq	128(%rax), %rbp
	movq	(%r14), %rax
	movq	%r14, %rdi
	callq	*96(%rax)
	movq	%rbx, %rdi
	movq	%rax, %rsi
	callq	*%rbp
	movq	8(%r14), %rax
	movq	8(%rax), %r12
	movl	16(%rax), %ebp
	movl	$1, %edi
	movl	$4, %esi
	callq	calloc
	movq	%rax, %r15
	movl	%ebp, (%r15)
	movl	$40, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_CArray_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_Cbyte_Mclass, 24(%rax)
	movq	%r15, 8(%rax)
	movl	$1, 16(%rax)
	movq	%r12, 32(%rax)
	movq	(%rax), %rax
	movq	160(%rax), %r13
	movl	$1, %edi
	movl	$4, %esi
	callq	calloc
	movq	%rax, %r15
	movl	%ebp, (%r15)
	movl	$40, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_CArray_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_Cbyte_Mclass, 24(%rax)
	movq	%r15, 8(%rax)
	movl	$1, 16(%rax)
	movq	%r12, 32(%rax)
	movq	%rax, %rdi
	callq	*%r13
	testl	%eax, %eax
	je	.LBB48_4
# BB#3:                                 # %_label2
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	movl	$.L_string184, %esi
	callq	*136(%rax)
	movq	(%rax), %rcx
	movq	8(%r14), %rsi
	movq	%rax, %rdi
	callq	*136(%rcx)
.LBB48_4:                               # %_label4
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*152(%rax)
	movl	$1, %eax
	addq	$8, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	ret
.Ltmp276:
	.size	_Pshadow_Pstandard_CException_Mterminate, .Ltmp276-_Pshadow_Pstandard_CException_Mterminate
	.cfi_endproc

	.globl	_Pshadow_Pstandard_CException_Mcreate
	.align	16, 0x90
	.type	_Pshadow_Pstandard_CException_Mcreate,@function
_Pshadow_Pstandard_CException_Mcreate:  # @_Pshadow_Pstandard_CException_Mcreate
# BB#0:
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rdi)
	movq	$_Pshadow_Pstandard_CException_Mclass, (%rdi)
	movq	$.L_string286, 8(%rdi)
	movq	%rdi, %rax
	ret
.Ltmp277:
	.size	_Pshadow_Pstandard_CException_Mcreate, .Ltmp277-_Pshadow_Pstandard_CException_Mcreate

	.globl	_Pshadow_Pstandard_CException_Mcreate_Pshadow_Pstandard_CString
	.align	16, 0x90
	.type	_Pshadow_Pstandard_CException_Mcreate_Pshadow_Pstandard_CString,@function
_Pshadow_Pstandard_CException_Mcreate_Pshadow_Pstandard_CString: # @_Pshadow_Pstandard_CException_Mcreate_Pshadow_Pstandard_CString
# BB#0:
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rdi)
	movq	$_Pshadow_Pstandard_CException_Mclass, (%rdi)
	movq	%rsi, 8(%rdi)
	movq	%rdi, %rax
	ret
.Ltmp278:
	.size	_Pshadow_Pstandard_CException_Mcreate_Pshadow_Pstandard_CString, .Ltmp278-_Pshadow_Pstandard_CException_Mcreate_Pshadow_Pstandard_CString

	.globl	_Pshadow_Pstandard_Cfloat_Mcreate
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Cfloat_Mcreate,@function
_Pshadow_Pstandard_Cfloat_Mcreate:      # @_Pshadow_Pstandard_Cfloat_Mcreate
# BB#0:
	movq	$_Pshadow_Pstandard_Cfloat_Mclass, (%rdi)
	movq	%rdi, %rax
	ret
.Ltmp279:
	.size	_Pshadow_Pstandard_Cfloat_Mcreate, .Ltmp279-_Pshadow_Pstandard_Cfloat_Mcreate

	.globl	_Pshadow_Pstandard_CIllegalArgumentException_Mcreate
	.align	16, 0x90
	.type	_Pshadow_Pstandard_CIllegalArgumentException_Mcreate,@function
_Pshadow_Pstandard_CIllegalArgumentException_Mcreate: # @_Pshadow_Pstandard_CIllegalArgumentException_Mcreate
# BB#0:
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rdi)
	movq	$_Pshadow_Pstandard_CException_Mclass, (%rdi)
	movq	$.L_string286, 8(%rdi)
	movq	$_Pshadow_Pstandard_CIllegalArgumentException_Mclass, (%rdi)
	movq	%rdi, %rax
	ret
.Ltmp280:
	.size	_Pshadow_Pstandard_CIllegalArgumentException_Mcreate, .Ltmp280-_Pshadow_Pstandard_CIllegalArgumentException_Mcreate

	.globl	_Pshadow_Pstandard_CIndexOutOfBoundsException_Mcreate
	.align	16, 0x90
	.type	_Pshadow_Pstandard_CIndexOutOfBoundsException_Mcreate,@function
_Pshadow_Pstandard_CIndexOutOfBoundsException_Mcreate: # @_Pshadow_Pstandard_CIndexOutOfBoundsException_Mcreate
# BB#0:
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rdi)
	movq	$_Pshadow_Pstandard_CException_Mclass, (%rdi)
	movq	$.L_string286, 8(%rdi)
	movq	$_Pshadow_Pstandard_CIndexOutOfBoundsException_Mclass, (%rdi)
	movq	%rdi, %rax
	ret
.Ltmp281:
	.size	_Pshadow_Pstandard_CIndexOutOfBoundsException_Mcreate, .Ltmp281-_Pshadow_Pstandard_CIndexOutOfBoundsException_Mcreate

	.globl	_Pshadow_Pstandard_CIndexOutOfBoundsException_Mcreate_Pshadow_Pstandard_Cint
	.align	16, 0x90
	.type	_Pshadow_Pstandard_CIndexOutOfBoundsException_Mcreate_Pshadow_Pstandard_Cint,@function
_Pshadow_Pstandard_CIndexOutOfBoundsException_Mcreate_Pshadow_Pstandard_Cint: # @_Pshadow_Pstandard_CIndexOutOfBoundsException_Mcreate_Pshadow_Pstandard_Cint
	.cfi_startproc
# BB#0:                                 # %_label1
	pushq	%rbp
.Ltmp287:
	.cfi_def_cfa_offset 16
	pushq	%r15
.Ltmp288:
	.cfi_def_cfa_offset 24
	pushq	%r14
.Ltmp289:
	.cfi_def_cfa_offset 32
	pushq	%rbx
.Ltmp290:
	.cfi_def_cfa_offset 40
	pushq	%rax
.Ltmp291:
	.cfi_def_cfa_offset 48
.Ltmp292:
	.cfi_offset %rbx, -40
.Ltmp293:
	.cfi_offset %r14, -32
.Ltmp294:
	.cfi_offset %r15, -24
.Ltmp295:
	.cfi_offset %rbp, -16
	movl	%esi, %ebp
	movq	%rdi, %rbx
	movq	.L_string1108(%rip), %rax
	movl	$.L_string1108, %edi
	callq	*104(%rax)
	movq	%rax, %r14
	movl	$16, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_Cint_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_Cint_Mclass, (%rax)
	movl	%ebp, 8(%rax)
	movq	(%rax), %rax
	movq	104(%rax), %r15
	movl	$16, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_Cint_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_Cint_Mclass, (%rax)
	movl	%ebp, 8(%rax)
	movq	%rax, %rdi
	callq	*%r15
	movq	%r14, %rdi
	movq	%rax, %rsi
	callq	_Pshadow_Pstandard_CString_Mconcatenate_Pshadow_Pstandard_CString
	movq	%rax, %rbp
	movq	.L_string3112(%rip), %rax
	movl	$.L_string3112, %edi
	callq	*104(%rax)
	movq	%rbp, %rdi
	movq	%rax, %rsi
	callq	_Pshadow_Pstandard_CString_Mconcatenate_Pshadow_Pstandard_CString
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rbx)
	movq	$_Pshadow_Pstandard_CException_Mclass, (%rbx)
	movq	%rax, 8(%rbx)
	movq	$_Pshadow_Pstandard_CIndexOutOfBoundsException_Mclass, (%rbx)
	movq	%rbx, %rax
	addq	$8, %rsp
	popq	%rbx
	popq	%r14
	popq	%r15
	popq	%rbp
	ret
.Ltmp296:
	.size	_Pshadow_Pstandard_CIndexOutOfBoundsException_Mcreate_Pshadow_Pstandard_Cint, .Ltmp296-_Pshadow_Pstandard_CIndexOutOfBoundsException_Mcreate_Pshadow_Pstandard_Cint
	.cfi_endproc

	.globl	_Pshadow_Pstandard_Cint_Mmin_Pshadow_Pstandard_Cint
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Cint_Mmin_Pshadow_Pstandard_Cint,@function
_Pshadow_Pstandard_Cint_Mmin_Pshadow_Pstandard_Cint: # @_Pshadow_Pstandard_Cint_Mmin_Pshadow_Pstandard_Cint
# BB#0:                                 # %_label2
	movl	8(%rdi), %eax
	cmpl	%esi, %eax
	cmovgl	%esi, %eax
	ret
.Ltmp297:
	.size	_Pshadow_Pstandard_Cint_Mmin_Pshadow_Pstandard_Cint, .Ltmp297-_Pshadow_Pstandard_Cint_Mmin_Pshadow_Pstandard_Cint

	.globl	_Pshadow_Pstandard_Cint_Mmax_Pshadow_Pstandard_Cint
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Cint_Mmax_Pshadow_Pstandard_Cint,@function
_Pshadow_Pstandard_Cint_Mmax_Pshadow_Pstandard_Cint: # @_Pshadow_Pstandard_Cint_Mmax_Pshadow_Pstandard_Cint
# BB#0:                                 # %_label5
	movl	8(%rdi), %eax
	cmpl	%esi, %eax
	cmovll	%esi, %eax
	ret
.Ltmp298:
	.size	_Pshadow_Pstandard_Cint_Mmax_Pshadow_Pstandard_Cint, .Ltmp298-_Pshadow_Pstandard_Cint_Mmax_Pshadow_Pstandard_Cint

	.globl	_Pshadow_Pstandard_Cint_Mabs
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Cint_Mabs,@function
_Pshadow_Pstandard_Cint_Mabs:           # @_Pshadow_Pstandard_Cint_Mabs
# BB#0:                                 # %_label8
	movl	8(%rdi), %ecx
	movl	%ecx, %eax
	negl	%eax
	cmovll	%ecx, %eax
	ret
.Ltmp299:
	.size	_Pshadow_Pstandard_Cint_Mabs, .Ltmp299-_Pshadow_Pstandard_Cint_Mabs

	.globl	_Pshadow_Pstandard_Cint_Mhash
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Cint_Mhash,@function
_Pshadow_Pstandard_Cint_Mhash:          # @_Pshadow_Pstandard_Cint_Mhash
# BB#0:
	movl	8(%rdi), %eax
	ret
.Ltmp300:
	.size	_Pshadow_Pstandard_Cint_Mhash, .Ltmp300-_Pshadow_Pstandard_Cint_Mhash

	.globl	_Pshadow_Pstandard_Cint_MtoString
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Cint_MtoString,@function
_Pshadow_Pstandard_Cint_MtoString:      # @_Pshadow_Pstandard_Cint_MtoString
	.cfi_startproc
# BB#0:
	pushq	%rbx
.Ltmp303:
	.cfi_def_cfa_offset 16
.Ltmp304:
	.cfi_offset %rbx, -16
	movl	8(%rdi), %ebx
	movl	$16, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_Cint_Mclass, (%rax)
	movl	%ebx, 8(%rax)
	movq	%rax, %rdi
	movl	$10, %esi
	popq	%rbx
	jmp	_Pshadow_Pstandard_Cint_MtoString_Pshadow_Pstandard_Cuint # TAILCALL
.Ltmp305:
	.size	_Pshadow_Pstandard_Cint_MtoString, .Ltmp305-_Pshadow_Pstandard_Cint_MtoString
	.cfi_endproc

	.globl	_Pshadow_Pstandard_Cint_MtoString_Pshadow_Pstandard_Cuint
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Cint_MtoString_Pshadow_Pstandard_Cuint,@function
_Pshadow_Pstandard_Cint_MtoString_Pshadow_Pstandard_Cuint: # @_Pshadow_Pstandard_Cint_MtoString_Pshadow_Pstandard_Cuint
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp313:
	.cfi_def_cfa_offset 16
	pushq	%r15
.Ltmp314:
	.cfi_def_cfa_offset 24
	pushq	%r14
.Ltmp315:
	.cfi_def_cfa_offset 32
	pushq	%r13
.Ltmp316:
	.cfi_def_cfa_offset 40
	pushq	%r12
.Ltmp317:
	.cfi_def_cfa_offset 48
	pushq	%rbx
.Ltmp318:
	.cfi_def_cfa_offset 56
	pushq	%rax
.Ltmp319:
	.cfi_def_cfa_offset 64
.Ltmp320:
	.cfi_offset %rbx, -56
.Ltmp321:
	.cfi_offset %r12, -48
.Ltmp322:
	.cfi_offset %r13, -40
.Ltmp323:
	.cfi_offset %r14, -32
.Ltmp324:
	.cfi_offset %r15, -24
.Ltmp325:
	.cfi_offset %rbp, -16
	movl	%esi, %r14d
	movl	8(%rdi), %r15d
	movl	_Pshadow_Pstandard_CMutableString_Mclass+52(%rip), %edi
	callq	malloc
	movq	%rax, %r13
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%r13)
	movq	$_Pshadow_Pstandard_CMutableString_Mclass, (%r13)
	movl	$10, %edi
	movl	$1, %esi
	callq	calloc
	movq	%rax, 8(%r13)
	movl	$10, 16(%r13)
	movl	%r15d, %ebp
	negl	%ebp
	movl	$0, 24(%r13)
	cmovll	%r15d, %ebp
	movl	$48, %r12d
	.align	16, 0x90
.LBB60_1:                               # %_label9.i
                                        # =>This Inner Loop Header: Depth=1
	movq	(%r13), %rax
	movq	112(%rax), %rbx
	movl	$16, %edi
	callq	malloc
	movq	%rax, %rcx
	movq	$_Pshadow_Pstandard_Ccode_Mclass, (%rcx)
	movq	$_Pshadow_Pstandard_Ccode_Mclass, (%rcx)
	movl	%ebp, %eax
	xorl	%edx, %edx
	divl	%r14d
	movl	%eax, %ebp
	cmpl	$10, %edx
	movl	$87, %eax
	cmovbl	%r12d, %eax
	addl	%edx, %eax
	movl	%eax, 8(%rcx)
	movq	%r13, %rdi
	movq	%rcx, %rsi
	callq	*%rbx
	testl	%ebp, %ebp
	jne	.LBB60_1
# BB#2:                                 # %_Pshadow_Pstandard_Cuint_MtoString_Pshadow_Pstandard_Cuint.exit
	movq	(%r13), %rax
	movq	%r13, %rdi
	callq	*152(%rax)
	movq	(%rax), %rcx
	movq	%rax, %rdi
	callq	*104(%rcx)
	movq	%rax, %rbx
	testl	%r15d, %r15d
	jns	.LBB60_6
# BB#3:                                 # %_label10
	movl	$16, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_Ccode_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_Ccode_Mclass, (%rax)
	movl	$45, 8(%rax)
	movq	(%rax), %rax
	movq	104(%rax), %rbp
	movl	$16, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_Ccode_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_Ccode_Mclass, (%rax)
	movl	$45, 8(%rax)
	movq	%rax, %rdi
	callq	*%rbp
	movq	%rax, %rbp
	movl	$.L_string1424, %eax
	testq	%rbx, %rbx
	je	.LBB60_5
# BB#4:                                 # %_label13
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*104(%rax)
.LBB60_5:                               # %_label14
	movq	%rbp, %rdi
	movq	%rax, %rsi
	callq	_Pshadow_Pstandard_CString_Mconcatenate_Pshadow_Pstandard_CString
	movq	%rax, %rbx
.LBB60_6:                               # %_label11
	movq	%rbx, %rax
	addq	$8, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	ret
.Ltmp326:
	.size	_Pshadow_Pstandard_Cint_MtoString_Pshadow_Pstandard_Cuint, .Ltmp326-_Pshadow_Pstandard_Cint_MtoString_Pshadow_Pstandard_Cuint
	.cfi_endproc

	.globl	_Pshadow_Pstandard_Cint_Mcreate
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Cint_Mcreate,@function
_Pshadow_Pstandard_Cint_Mcreate:        # @_Pshadow_Pstandard_Cint_Mcreate
# BB#0:
	movq	$_Pshadow_Pstandard_Cint_Mclass, (%rdi)
	movq	%rdi, %rax
	ret
.Ltmp327:
	.size	_Pshadow_Pstandard_Cint_Mcreate, .Ltmp327-_Pshadow_Pstandard_Cint_Mcreate

	.globl	_Pshadow_Pstandard_Clong_Mmin_Pshadow_Pstandard_Clong
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Clong_Mmin_Pshadow_Pstandard_Clong,@function
_Pshadow_Pstandard_Clong_Mmin_Pshadow_Pstandard_Clong: # @_Pshadow_Pstandard_Clong_Mmin_Pshadow_Pstandard_Clong
# BB#0:                                 # %_label2
	movq	8(%rdi), %rax
	cmpq	%rsi, %rax
	cmovgq	%rsi, %rax
	ret
.Ltmp328:
	.size	_Pshadow_Pstandard_Clong_Mmin_Pshadow_Pstandard_Clong, .Ltmp328-_Pshadow_Pstandard_Clong_Mmin_Pshadow_Pstandard_Clong

	.globl	_Pshadow_Pstandard_Clong_Mmax_Pshadow_Pstandard_Clong
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Clong_Mmax_Pshadow_Pstandard_Clong,@function
_Pshadow_Pstandard_Clong_Mmax_Pshadow_Pstandard_Clong: # @_Pshadow_Pstandard_Clong_Mmax_Pshadow_Pstandard_Clong
# BB#0:                                 # %_label5
	movq	8(%rdi), %rax
	cmpq	%rsi, %rax
	cmovlq	%rsi, %rax
	ret
.Ltmp329:
	.size	_Pshadow_Pstandard_Clong_Mmax_Pshadow_Pstandard_Clong, .Ltmp329-_Pshadow_Pstandard_Clong_Mmax_Pshadow_Pstandard_Clong

	.globl	_Pshadow_Pstandard_Clong_Mabs
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Clong_Mabs,@function
_Pshadow_Pstandard_Clong_Mabs:          # @_Pshadow_Pstandard_Clong_Mabs
# BB#0:                                 # %_label8
	movq	8(%rdi), %rcx
	movq	%rcx, %rax
	negq	%rax
	cmovlq	%rcx, %rax
	ret
.Ltmp330:
	.size	_Pshadow_Pstandard_Clong_Mabs, .Ltmp330-_Pshadow_Pstandard_Clong_Mabs

	.globl	_Pshadow_Pstandard_Clong_Mhash
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Clong_Mhash,@function
_Pshadow_Pstandard_Clong_Mhash:         # @_Pshadow_Pstandard_Clong_Mhash
# BB#0:
	movl	8(%rdi), %eax
	ret
.Ltmp331:
	.size	_Pshadow_Pstandard_Clong_Mhash, .Ltmp331-_Pshadow_Pstandard_Clong_Mhash

	.globl	_Pshadow_Pstandard_Clong_MtoString
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Clong_MtoString,@function
_Pshadow_Pstandard_Clong_MtoString:     # @_Pshadow_Pstandard_Clong_MtoString
	.cfi_startproc
# BB#0:
	pushq	%rbx
.Ltmp334:
	.cfi_def_cfa_offset 16
.Ltmp335:
	.cfi_offset %rbx, -16
	movq	8(%rdi), %rbx
	movl	$16, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_Clong_Mclass, (%rax)
	movq	%rbx, 8(%rax)
	movq	%rax, %rdi
	movl	$10, %esi
	popq	%rbx
	jmp	_Pshadow_Pstandard_Clong_MtoString_Pshadow_Pstandard_Culong # TAILCALL
.Ltmp336:
	.size	_Pshadow_Pstandard_Clong_MtoString, .Ltmp336-_Pshadow_Pstandard_Clong_MtoString
	.cfi_endproc

	.globl	_Pshadow_Pstandard_Clong_MtoString_Pshadow_Pstandard_Culong
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Clong_MtoString_Pshadow_Pstandard_Culong,@function
_Pshadow_Pstandard_Clong_MtoString_Pshadow_Pstandard_Culong: # @_Pshadow_Pstandard_Clong_MtoString_Pshadow_Pstandard_Culong
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp344:
	.cfi_def_cfa_offset 16
	pushq	%r15
.Ltmp345:
	.cfi_def_cfa_offset 24
	pushq	%r14
.Ltmp346:
	.cfi_def_cfa_offset 32
	pushq	%r13
.Ltmp347:
	.cfi_def_cfa_offset 40
	pushq	%r12
.Ltmp348:
	.cfi_def_cfa_offset 48
	pushq	%rbx
.Ltmp349:
	.cfi_def_cfa_offset 56
	pushq	%rax
.Ltmp350:
	.cfi_def_cfa_offset 64
.Ltmp351:
	.cfi_offset %rbx, -56
.Ltmp352:
	.cfi_offset %r12, -48
.Ltmp353:
	.cfi_offset %r13, -40
.Ltmp354:
	.cfi_offset %r14, -32
.Ltmp355:
	.cfi_offset %r15, -24
.Ltmp356:
	.cfi_offset %rbp, -16
	movq	%rsi, %r14
	movq	8(%rdi), %r12
	movl	_Pshadow_Pstandard_CMutableString_Mclass+52(%rip), %edi
	callq	malloc
	movq	%rax, %r15
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%r15)
	movq	$_Pshadow_Pstandard_CMutableString_Mclass, (%r15)
	movl	$10, %edi
	movl	$1, %esi
	callq	calloc
	movq	%rax, 8(%r15)
	movl	$10, 16(%r15)
	movq	%r12, %rbx
	negq	%rbx
	movl	$0, 24(%r15)
	cmovlq	%r12, %rbx
	movl	$48, %r13d
	.align	16, 0x90
.LBB67_1:                               # %_label3.i
                                        # =>This Inner Loop Header: Depth=1
	movq	(%r15), %rax
	movq	112(%rax), %rbp
	movl	$16, %edi
	callq	malloc
	movq	%rax, %rcx
	movq	$_Pshadow_Pstandard_Ccode_Mclass, (%rcx)
	movq	%rbx, %rax
	xorl	%edx, %edx
	divq	%r14
	movq	%rax, %rbx
	movq	$_Pshadow_Pstandard_Ccode_Mclass, (%rcx)
	cmpq	$10, %rdx
	movl	$87, %eax
	cmovbq	%r13, %rax
	addl	%edx, %eax
	movl	%eax, 8(%rcx)
	movq	%r15, %rdi
	movq	%rcx, %rsi
	callq	*%rbp
	testq	%rbx, %rbx
	jne	.LBB67_1
# BB#2:                                 # %_Pshadow_Pstandard_Culong_MtoString_Pshadow_Pstandard_Culong.exit
	movq	(%r15), %rax
	movq	%r15, %rdi
	callq	*152(%rax)
	movq	(%rax), %rcx
	movq	%rax, %rdi
	callq	*104(%rcx)
	movq	%rax, %rbx
	testq	%r12, %r12
	jns	.LBB67_6
# BB#3:                                 # %_label10
	movl	$16, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_Ccode_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_Ccode_Mclass, (%rax)
	movl	$45, 8(%rax)
	movq	(%rax), %rax
	movq	104(%rax), %rbp
	movl	$16, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_Ccode_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_Ccode_Mclass, (%rax)
	movl	$45, 8(%rax)
	movq	%rax, %rdi
	callq	*%rbp
	movq	%rax, %r14
	movl	$.L_string1424, %eax
	testq	%rbx, %rbx
	je	.LBB67_5
# BB#4:                                 # %_label13
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*104(%rax)
.LBB67_5:                               # %_label14
	movq	%r14, %rdi
	movq	%rax, %rsi
	callq	_Pshadow_Pstandard_CString_Mconcatenate_Pshadow_Pstandard_CString
	movq	%rax, %rbx
.LBB67_6:                               # %_label11
	movq	%rbx, %rax
	addq	$8, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	ret
.Ltmp357:
	.size	_Pshadow_Pstandard_Clong_MtoString_Pshadow_Pstandard_Culong, .Ltmp357-_Pshadow_Pstandard_Clong_MtoString_Pshadow_Pstandard_Culong
	.cfi_endproc

	.globl	_Pshadow_Pstandard_Clong_Mcreate
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Clong_Mcreate,@function
_Pshadow_Pstandard_Clong_Mcreate:       # @_Pshadow_Pstandard_Clong_Mcreate
# BB#0:
	movq	$_Pshadow_Pstandard_Clong_Mclass, (%rdi)
	movq	%rdi, %rax
	ret
.Ltmp358:
	.size	_Pshadow_Pstandard_Clong_Mcreate, .Ltmp358-_Pshadow_Pstandard_Clong_Mcreate

	.globl	_Pshadow_Pstandard_CMutableString_Mappend_Pshadow_Pstandard_CObject
	.align	16, 0x90
	.type	_Pshadow_Pstandard_CMutableString_Mappend_Pshadow_Pstandard_CObject,@function
_Pshadow_Pstandard_CMutableString_Mappend_Pshadow_Pstandard_CObject: # @_Pshadow_Pstandard_CMutableString_Mappend_Pshadow_Pstandard_CObject
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp366:
	.cfi_def_cfa_offset 16
	pushq	%r15
.Ltmp367:
	.cfi_def_cfa_offset 24
	pushq	%r14
.Ltmp368:
	.cfi_def_cfa_offset 32
	pushq	%r13
.Ltmp369:
	.cfi_def_cfa_offset 40
	pushq	%r12
.Ltmp370:
	.cfi_def_cfa_offset 48
	pushq	%rbx
.Ltmp371:
	.cfi_def_cfa_offset 56
	subq	$24, %rsp
.Ltmp372:
	.cfi_def_cfa_offset 80
.Ltmp373:
	.cfi_offset %rbx, -56
.Ltmp374:
	.cfi_offset %r12, -48
.Ltmp375:
	.cfi_offset %r13, -40
.Ltmp376:
	.cfi_offset %r14, -32
.Ltmp377:
	.cfi_offset %r15, -24
.Ltmp378:
	.cfi_offset %rbp, -16
	movq	%rdi, %rbx
	movl	$.L_string1424, %eax
	testq	%rsi, %rsi
	je	.LBB69_2
# BB#1:                                 # %_label1
	movq	(%rsi), %rax
	movq	%rsi, %rdi
	callq	*104(%rax)
.LBB69_2:                               # %_label2
	movq	%rax, 8(%rsp)           # 8-byte Spill
	movq	%rbx, 16(%rsp)          # 8-byte Spill
	movq	(%rbx), %rcx
	movq	144(%rcx), %r12
	movl	24(%rbx), %r15d
	movq	8(%rax), %r14
	movl	16(%rax), %r13d
	movl	$1, %edi
	movl	$4, %esi
	callq	calloc
	movq	%rax, %rbp
	movl	%r13d, (%rbp)
	movl	$40, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_CArray_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_Cbyte_Mclass, 24(%rax)
	movq	%rbp, 8(%rax)
	movl	$1, 16(%rax)
	movq	%r14, 32(%rax)
	movq	(%rax), %rax
	movq	160(%rax), %rax
	movq	%rax, (%rsp)            # 8-byte Spill
	movl	$1, %edi
	movl	$4, %esi
	callq	calloc
	movq	%rax, %rbp
	movl	%r13d, (%rbp)
	movl	$40, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_CArray_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_Cbyte_Mclass, 24(%rax)
	movq	%rbp, 8(%rax)
	movl	$1, 16(%rax)
	movq	%r14, 32(%rax)
	movq	%rax, %rdi
	callq	*(%rsp)                 # 8-byte Folded Reload
	addl	%eax, %r15d
	movq	%rbx, %rdi
	movl	%r15d, %esi
	callq	*%r12
	movq	8(%rsp), %r12           # 8-byte Reload
	xorl	%r15d, %r15d
	jmp	.LBB69_4
	.align	16, 0x90
.LBB69_3:                               # %_label3
                                        #   in Loop: Header=BB69_4 Depth=1
	movslq	%r15d, %rax
	movq	8(%r12), %rcx
	movb	(%rcx,%rax), %al
	movq	16(%rsp), %rsi          # 8-byte Reload
	movslq	24(%rsi), %rcx
	movq	8(%rsi), %rdx
	movb	%al, (%rdx,%rcx)
	incl	24(%rsi)
	incl	%r15d
.LBB69_4:                               # %_label4
                                        # =>This Inner Loop Header: Depth=1
	movq	8(%r12), %r13
	movl	16(%r12), %ebx
	movl	$1, %edi
	movl	$4, %esi
	callq	calloc
	movq	%rax, %rbp
	movl	%ebx, (%rbp)
	movl	$40, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_CArray_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_Cbyte_Mclass, 24(%rax)
	movq	%rbp, 8(%rax)
	movl	$1, 16(%rax)
	movq	%r13, 32(%rax)
	movq	(%rax), %rax
	movq	160(%rax), %r14
	movl	$1, %edi
	movl	$4, %esi
	callq	calloc
	movq	%rax, %rbp
	movl	%ebx, (%rbp)
	movl	$40, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_CArray_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_Cbyte_Mclass, 24(%rax)
	movq	%rbp, 8(%rax)
	movl	$1, 16(%rax)
	movq	%r13, 32(%rax)
	movq	%rax, %rdi
	callq	*%r14
	cmpl	%eax, %r15d
	jl	.LBB69_3
# BB#5:                                 # %_label5
	movq	16(%rsp), %rax          # 8-byte Reload
	addq	$24, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	ret
.Ltmp379:
	.size	_Pshadow_Pstandard_CMutableString_Mappend_Pshadow_Pstandard_CObject, .Ltmp379-_Pshadow_Pstandard_CMutableString_Mappend_Pshadow_Pstandard_CObject
	.cfi_endproc

	.globl	_Pshadow_Pstandard_CMutableString_Mreverse
	.align	16, 0x90
	.type	_Pshadow_Pstandard_CMutableString_Mreverse,@function
_Pshadow_Pstandard_CMutableString_Mreverse: # @_Pshadow_Pstandard_CMutableString_Mreverse
# BB#0:
	movl	24(%rdi), %r9d
	leal	-1(%r9), %ecx
	testl	%ecx, %ecx
	jle	.LBB70_3
# BB#1:                                 # %_label6.preheader
	addl	$-2, %r9d
	xorl	%ecx, %ecx
	.align	16, 0x90
.LBB70_2:                               # %_label6
                                        # =>This Inner Loop Header: Depth=1
	movslq	%ecx, %rcx
	movq	8(%rdi), %rdx
	movb	(%rdx,%rcx), %r8b
	leal	1(%r9), %esi
	movslq	%esi, %rsi
	movb	(%rdx,%rsi), %al
	movb	%al, (%rdx,%rcx)
	movb	%r8b, (%rdx,%rsi)
	incl	%ecx
	cmpl	%r9d, %ecx
	leal	-1(%r9), %r9d
	jl	.LBB70_2
.LBB70_3:                               # %_label8
	movq	%rdi, %rax
	ret
.Ltmp380:
	.size	_Pshadow_Pstandard_CMutableString_Mreverse, .Ltmp380-_Pshadow_Pstandard_CMutableString_Mreverse

	.globl	_Pshadow_Pstandard_CMutableString_MensureCapacity_Pshadow_Pstandard_Cint
	.align	16, 0x90
	.type	_Pshadow_Pstandard_CMutableString_MensureCapacity_Pshadow_Pstandard_Cint,@function
_Pshadow_Pstandard_CMutableString_MensureCapacity_Pshadow_Pstandard_Cint: # @_Pshadow_Pstandard_CMutableString_MensureCapacity_Pshadow_Pstandard_Cint
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp385:
	.cfi_def_cfa_offset 16
	pushq	%r14
.Ltmp386:
	.cfi_def_cfa_offset 24
	pushq	%rbx
.Ltmp387:
	.cfi_def_cfa_offset 32
	subq	$16, %rsp
.Ltmp388:
	.cfi_def_cfa_offset 48
.Ltmp389:
	.cfi_offset %rbx, -32
.Ltmp390:
	.cfi_offset %r14, -24
.Ltmp391:
	.cfi_offset %rbp, -16
	movl	%esi, %ebp
	movq	%rdi, %rbx
	movq	(%rbx), %rax
	callq	*120(%rax)
	cmpl	%ebp, %eax
	jge	.LBB71_6
# BB#1:                                 # %_label9
	movl	%ebp, %edi
	movl	$1, %esi
	callq	calloc
	movq	%rax, %r14
	movl	%ebp, 8(%rsp)
	movq	%r14, (%rsp)
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*160(%rax)
	testl	%eax, %eax
	jle	.LBB71_5
# BB#2:                                 # %_label12.lr.ph
	xorl	%ebp, %ebp
	movq	(%rsp), %r14
	.align	16, 0x90
.LBB71_3:                               # %_label12
                                        # =>This Inner Loop Header: Depth=1
	movslq	%ebp, %rbp
	movq	8(%rbx), %rax
	movb	(%rax,%rbp), %al
	movb	%al, (%r14,%rbp)
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*160(%rax)
	incl	%ebp
	cmpl	%eax, %ebp
	jl	.LBB71_3
# BB#4:                                 # %_label13._label14_crit_edge
	movl	8(%rsp), %ebp
	movq	(%rsp), %r14
.LBB71_5:                               # %_label14
	movq	%r14, 8(%rbx)
	movl	%ebp, 16(%rbx)
.LBB71_6:                               # %_label11
	movq	%rbx, %rax
	addq	$16, %rsp
	popq	%rbx
	popq	%r14
	popq	%rbp
	ret
.Ltmp392:
	.size	_Pshadow_Pstandard_CMutableString_MensureCapacity_Pshadow_Pstandard_Cint, .Ltmp392-_Pshadow_Pstandard_CMutableString_MensureCapacity_Pshadow_Pstandard_Cint
	.cfi_endproc

	.globl	_Pshadow_Pstandard_CMutableString_Mcapacity
	.align	16, 0x90
	.type	_Pshadow_Pstandard_CMutableString_Mcapacity,@function
_Pshadow_Pstandard_CMutableString_Mcapacity: # @_Pshadow_Pstandard_CMutableString_Mcapacity
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp398:
	.cfi_def_cfa_offset 16
	pushq	%r15
.Ltmp399:
	.cfi_def_cfa_offset 24
	pushq	%r14
.Ltmp400:
	.cfi_def_cfa_offset 32
	pushq	%rbx
.Ltmp401:
	.cfi_def_cfa_offset 40
	pushq	%rax
.Ltmp402:
	.cfi_def_cfa_offset 48
.Ltmp403:
	.cfi_offset %rbx, -40
.Ltmp404:
	.cfi_offset %r14, -32
.Ltmp405:
	.cfi_offset %r15, -24
.Ltmp406:
	.cfi_offset %rbp, -16
	movq	8(%rdi), %r14
	movl	16(%rdi), %ebp
	movl	$1, %edi
	movl	$4, %esi
	callq	calloc
	movq	%rax, %rbx
	movl	%ebp, (%rbx)
	movl	$40, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_CArray_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_Cbyte_Mclass, 24(%rax)
	movq	%rbx, 8(%rax)
	movl	$1, 16(%rax)
	movq	%r14, 32(%rax)
	movq	(%rax), %rax
	movq	160(%rax), %r15
	movl	$1, %edi
	movl	$4, %esi
	callq	calloc
	movq	%rax, %rbx
	movl	%ebp, (%rbx)
	movl	$40, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_CArray_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_Cbyte_Mclass, 24(%rax)
	movq	%rbx, 8(%rax)
	movl	$1, 16(%rax)
	movq	%r14, 32(%rax)
	movq	%rax, %rdi
	movq	%r15, %rax
	addq	$8, %rsp
	popq	%rbx
	popq	%r14
	popq	%r15
	popq	%rbp
	jmpq	*%rax  # TAILCALL
.Ltmp407:
	.size	_Pshadow_Pstandard_CMutableString_Mcapacity, .Ltmp407-_Pshadow_Pstandard_CMutableString_Mcapacity
	.cfi_endproc

	.globl	_Pshadow_Pstandard_CMutableString_MtoString
	.align	16, 0x90
	.type	_Pshadow_Pstandard_CMutableString_MtoString,@function
_Pshadow_Pstandard_CMutableString_MtoString: # @_Pshadow_Pstandard_CMutableString_MtoString
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp415:
	.cfi_def_cfa_offset 16
	pushq	%r15
.Ltmp416:
	.cfi_def_cfa_offset 24
	pushq	%r14
.Ltmp417:
	.cfi_def_cfa_offset 32
	pushq	%r13
.Ltmp418:
	.cfi_def_cfa_offset 40
	pushq	%r12
.Ltmp419:
	.cfi_def_cfa_offset 48
	pushq	%rbx
.Ltmp420:
	.cfi_def_cfa_offset 56
	pushq	%rax
.Ltmp421:
	.cfi_def_cfa_offset 64
.Ltmp422:
	.cfi_offset %rbx, -56
.Ltmp423:
	.cfi_offset %r12, -48
.Ltmp424:
	.cfi_offset %r13, -40
.Ltmp425:
	.cfi_offset %r14, -32
.Ltmp426:
	.cfi_offset %r15, -24
.Ltmp427:
	.cfi_offset %rbp, -16
	movq	%rdi, %r15
	movl	$32, %edi
	callq	malloc
	movq	%rax, %r14
	movq	$_Pshadow_Pstandard_CString_Mclass, (%r14)
	movq	8(%r15), %r12
	movl	16(%r15), %ebp
	movl	$1, %edi
	movl	$4, %esi
	callq	calloc
	movq	%rax, %rbx
	movl	%ebp, (%rbx)
	movl	$40, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_CArray_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_Cbyte_Mclass, 24(%rax)
	movq	%rbx, 8(%rax)
	movl	$1, 16(%rax)
	movq	%r12, 32(%rax)
	movq	(%rax), %rax
	movq	168(%rax), %r13
	movl	$1, %edi
	movl	$4, %esi
	callq	calloc
	movq	%rax, %rbx
	movl	%ebp, (%rbx)
	movl	$40, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_CArray_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_Cbyte_Mclass, 24(%rax)
	movq	%rbx, 8(%rax)
	movl	$1, 16(%rax)
	movq	%r12, 32(%rax)
	movl	24(%r15), %edx
	movq	%rax, %rdi
	xorl	%esi, %esi
	callq	*%r13
	movq	8(%rax), %rcx
	movq	32(%rax), %rsi
	movl	(%rcx), %edx
	movq	%r14, %rdi
	callq	_Pshadow_Pstandard_CString_Mcreate_Pshadow_Pstandard_Cbyte_A1
	movq	%r14, %rax
	addq	$8, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	ret
.Ltmp428:
	.size	_Pshadow_Pstandard_CMutableString_MtoString, .Ltmp428-_Pshadow_Pstandard_CMutableString_MtoString
	.cfi_endproc

	.globl	_Pshadow_Pstandard_CMutableString_Mcreate
	.align	16, 0x90
	.type	_Pshadow_Pstandard_CMutableString_Mcreate,@function
_Pshadow_Pstandard_CMutableString_Mcreate: # @_Pshadow_Pstandard_CMutableString_Mcreate
# BB#0:
	pushq	%rbx
	movq	%rdi, %rbx
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rbx)
	movq	$_Pshadow_Pstandard_CMutableString_Mclass, (%rbx)
	movl	$10, %edi
	movl	$1, %esi
	callq	calloc
	movq	%rax, 8(%rbx)
	movl	$10, 16(%rbx)
	movl	$0, 24(%rbx)
	movq	%rbx, %rax
	popq	%rbx
	ret
.Ltmp429:
	.size	_Pshadow_Pstandard_CMutableString_Mcreate, .Ltmp429-_Pshadow_Pstandard_CMutableString_Mcreate

	.globl	_Pshadow_Pstandard_CMutableString_Mcreate_Pshadow_Pstandard_Cint
	.align	16, 0x90
	.type	_Pshadow_Pstandard_CMutableString_Mcreate_Pshadow_Pstandard_Cint,@function
_Pshadow_Pstandard_CMutableString_Mcreate_Pshadow_Pstandard_Cint: # @_Pshadow_Pstandard_CMutableString_Mcreate_Pshadow_Pstandard_Cint
# BB#0:
	pushq	%rbp
	pushq	%rbx
	pushq	%rax
	movl	%esi, %ebp
	movq	%rdi, %rbx
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rbx)
	movq	$_Pshadow_Pstandard_CMutableString_Mclass, (%rbx)
	movl	$0, 24(%rbx)
	movl	%ebp, %edi
	movl	$1, %esi
	callq	calloc
	movl	%ebp, 16(%rbx)
	movq	%rax, 8(%rbx)
	movq	%rbx, %rax
	addq	$8, %rsp
	popq	%rbx
	popq	%rbp
	ret
.Ltmp430:
	.size	_Pshadow_Pstandard_CMutableString_Mcreate_Pshadow_Pstandard_Cint, .Ltmp430-_Pshadow_Pstandard_CMutableString_Mcreate_Pshadow_Pstandard_Cint

	.globl	_Pshadow_Pstandard_CMutableString_Mcreate_Pshadow_Pstandard_CObject
	.align	16, 0x90
	.type	_Pshadow_Pstandard_CMutableString_Mcreate_Pshadow_Pstandard_CObject,@function
_Pshadow_Pstandard_CMutableString_Mcreate_Pshadow_Pstandard_CObject: # @_Pshadow_Pstandard_CMutableString_Mcreate_Pshadow_Pstandard_CObject
	.cfi_startproc
# BB#0:
	pushq	%r14
.Ltmp434:
	.cfi_def_cfa_offset 16
	pushq	%rbx
.Ltmp435:
	.cfi_def_cfa_offset 24
	pushq	%rax
.Ltmp436:
	.cfi_def_cfa_offset 32
.Ltmp437:
	.cfi_offset %rbx, -24
.Ltmp438:
	.cfi_offset %r14, -16
	movq	%rsi, %r14
	movq	%rdi, %rbx
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rbx)
	movq	$_Pshadow_Pstandard_CMutableString_Mclass, (%rbx)
	movl	$10, %edi
	movl	$1, %esi
	callq	calloc
	movq	%rax, 8(%rbx)
	movl	$10, 16(%rbx)
	movl	$0, 24(%rbx)
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	movq	%r14, %rsi
	callq	*112(%rax)
	movq	%rbx, %rax
	addq	$8, %rsp
	popq	%rbx
	popq	%r14
	ret
.Ltmp439:
	.size	_Pshadow_Pstandard_CMutableString_Mcreate_Pshadow_Pstandard_CObject, .Ltmp439-_Pshadow_Pstandard_CMutableString_Mcreate_Pshadow_Pstandard_CObject
	.cfi_endproc

	.globl	_Pshadow_Pstandard_CMutableString_Msize
	.align	16, 0x90
	.type	_Pshadow_Pstandard_CMutableString_Msize,@function
_Pshadow_Pstandard_CMutableString_Msize: # @_Pshadow_Pstandard_CMutableString_Msize
# BB#0:
	movl	24(%rdi), %eax
	ret
.Ltmp440:
	.size	_Pshadow_Pstandard_CMutableString_Msize, .Ltmp440-_Pshadow_Pstandard_CMutableString_Msize

	.globl	_Pshadow_Pstandard_Cbyte_Madd_Pshadow_Pstandard_Cbyte
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Cbyte_Madd_Pshadow_Pstandard_Cbyte,@function
_Pshadow_Pstandard_Cbyte_Madd_Pshadow_Pstandard_Cbyte: # @_Pshadow_Pstandard_Cbyte_Madd_Pshadow_Pstandard_Cbyte
# BB#0:
	addb	%dil, %sil
	movb	%sil, %al
	ret
.Ltmp441:
	.size	_Pshadow_Pstandard_Cbyte_Madd_Pshadow_Pstandard_Cbyte, .Ltmp441-_Pshadow_Pstandard_Cbyte_Madd_Pshadow_Pstandard_Cbyte

	.globl	_Pshadow_Pstandard_Cbyte_Msubtract_Pshadow_Pstandard_Cbyte
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Cbyte_Msubtract_Pshadow_Pstandard_Cbyte,@function
_Pshadow_Pstandard_Cbyte_Msubtract_Pshadow_Pstandard_Cbyte: # @_Pshadow_Pstandard_Cbyte_Msubtract_Pshadow_Pstandard_Cbyte
# BB#0:
	subb	%sil, %dil
	movb	%dil, %al
	ret
.Ltmp442:
	.size	_Pshadow_Pstandard_Cbyte_Msubtract_Pshadow_Pstandard_Cbyte, .Ltmp442-_Pshadow_Pstandard_Cbyte_Msubtract_Pshadow_Pstandard_Cbyte

	.globl	_Pshadow_Pstandard_Cbyte_Mmultiply_Pshadow_Pstandard_Cbyte
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Cbyte_Mmultiply_Pshadow_Pstandard_Cbyte,@function
_Pshadow_Pstandard_Cbyte_Mmultiply_Pshadow_Pstandard_Cbyte: # @_Pshadow_Pstandard_Cbyte_Mmultiply_Pshadow_Pstandard_Cbyte
# BB#0:
	movb	%sil, %al
	mulb	%dil
	ret
.Ltmp443:
	.size	_Pshadow_Pstandard_Cbyte_Mmultiply_Pshadow_Pstandard_Cbyte, .Ltmp443-_Pshadow_Pstandard_Cbyte_Mmultiply_Pshadow_Pstandard_Cbyte

	.globl	_Pshadow_Pstandard_Cbyte_Mdivide_Pshadow_Pstandard_Cbyte
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Cbyte_Mdivide_Pshadow_Pstandard_Cbyte,@function
_Pshadow_Pstandard_Cbyte_Mdivide_Pshadow_Pstandard_Cbyte: # @_Pshadow_Pstandard_Cbyte_Mdivide_Pshadow_Pstandard_Cbyte
# BB#0:
	movb	%dil, %al
	cbtw
	idivb	%sil
	ret
.Ltmp444:
	.size	_Pshadow_Pstandard_Cbyte_Mdivide_Pshadow_Pstandard_Cbyte, .Ltmp444-_Pshadow_Pstandard_Cbyte_Mdivide_Pshadow_Pstandard_Cbyte

	.globl	_Pshadow_Pstandard_Cbyte_Mmodulus_Pshadow_Pstandard_Cbyte
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Cbyte_Mmodulus_Pshadow_Pstandard_Cbyte,@function
_Pshadow_Pstandard_Cbyte_Mmodulus_Pshadow_Pstandard_Cbyte: # @_Pshadow_Pstandard_Cbyte_Mmodulus_Pshadow_Pstandard_Cbyte
# BB#0:
	movb	%dil, %al
	cbtw
	idivb	%sil
	shrw	$8, %ax
                                        # kill: AL<def> AL<kill> AX<kill>
	ret
.Ltmp445:
	.size	_Pshadow_Pstandard_Cbyte_Mmodulus_Pshadow_Pstandard_Cbyte, .Ltmp445-_Pshadow_Pstandard_Cbyte_Mmodulus_Pshadow_Pstandard_Cbyte

	.globl	_Pshadow_Pstandard_Cbyte_Mcompare_Pshadow_Pstandard_Cbyte
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Cbyte_Mcompare_Pshadow_Pstandard_Cbyte,@function
_Pshadow_Pstandard_Cbyte_Mcompare_Pshadow_Pstandard_Cbyte: # @_Pshadow_Pstandard_Cbyte_Mcompare_Pshadow_Pstandard_Cbyte
# BB#0:
	cmpb	%sil, %dil
	setne	%al
	movzbl	%al, %ecx
	movl	$-1, %eax
	cmovgel	%ecx, %eax
	ret
.Ltmp446:
	.size	_Pshadow_Pstandard_Cbyte_Mcompare_Pshadow_Pstandard_Cbyte, .Ltmp446-_Pshadow_Pstandard_Cbyte_Mcompare_Pshadow_Pstandard_Cbyte

	.globl	_Pshadow_Pstandard_Cubyte_Madd_Pshadow_Pstandard_Cubyte
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Cubyte_Madd_Pshadow_Pstandard_Cubyte,@function
_Pshadow_Pstandard_Cubyte_Madd_Pshadow_Pstandard_Cubyte: # @_Pshadow_Pstandard_Cubyte_Madd_Pshadow_Pstandard_Cubyte
# BB#0:
	addb	%dil, %sil
	movb	%sil, %al
	ret
.Ltmp447:
	.size	_Pshadow_Pstandard_Cubyte_Madd_Pshadow_Pstandard_Cubyte, .Ltmp447-_Pshadow_Pstandard_Cubyte_Madd_Pshadow_Pstandard_Cubyte

	.globl	_Pshadow_Pstandard_Cubyte_Msubtract_Pshadow_Pstandard_Cubyte
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Cubyte_Msubtract_Pshadow_Pstandard_Cubyte,@function
_Pshadow_Pstandard_Cubyte_Msubtract_Pshadow_Pstandard_Cubyte: # @_Pshadow_Pstandard_Cubyte_Msubtract_Pshadow_Pstandard_Cubyte
# BB#0:
	subb	%sil, %dil
	movb	%dil, %al
	ret
.Ltmp448:
	.size	_Pshadow_Pstandard_Cubyte_Msubtract_Pshadow_Pstandard_Cubyte, .Ltmp448-_Pshadow_Pstandard_Cubyte_Msubtract_Pshadow_Pstandard_Cubyte

	.globl	_Pshadow_Pstandard_Cubyte_Mmultiply_Pshadow_Pstandard_Cubyte
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Cubyte_Mmultiply_Pshadow_Pstandard_Cubyte,@function
_Pshadow_Pstandard_Cubyte_Mmultiply_Pshadow_Pstandard_Cubyte: # @_Pshadow_Pstandard_Cubyte_Mmultiply_Pshadow_Pstandard_Cubyte
# BB#0:
	movb	%sil, %al
	mulb	%dil
	ret
.Ltmp449:
	.size	_Pshadow_Pstandard_Cubyte_Mmultiply_Pshadow_Pstandard_Cubyte, .Ltmp449-_Pshadow_Pstandard_Cubyte_Mmultiply_Pshadow_Pstandard_Cubyte

	.globl	_Pshadow_Pstandard_Cubyte_Mdivide_Pshadow_Pstandard_Cubyte
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Cubyte_Mdivide_Pshadow_Pstandard_Cubyte,@function
_Pshadow_Pstandard_Cubyte_Mdivide_Pshadow_Pstandard_Cubyte: # @_Pshadow_Pstandard_Cubyte_Mdivide_Pshadow_Pstandard_Cubyte
# BB#0:
	movzbl	%dil, %eax
                                        # kill: EAX<def> EAX<kill> AX<def>
	divb	%sil
	ret
.Ltmp450:
	.size	_Pshadow_Pstandard_Cubyte_Mdivide_Pshadow_Pstandard_Cubyte, .Ltmp450-_Pshadow_Pstandard_Cubyte_Mdivide_Pshadow_Pstandard_Cubyte

	.globl	_Pshadow_Pstandard_Cubyte_Mmodulus_Pshadow_Pstandard_Cubyte
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Cubyte_Mmodulus_Pshadow_Pstandard_Cubyte,@function
_Pshadow_Pstandard_Cubyte_Mmodulus_Pshadow_Pstandard_Cubyte: # @_Pshadow_Pstandard_Cubyte_Mmodulus_Pshadow_Pstandard_Cubyte
# BB#0:
	movzbl	%dil, %eax
                                        # kill: EAX<def> EAX<kill> AX<def>
	divb	%sil
	shrw	$8, %ax
                                        # kill: AL<def> AL<kill> AX<kill>
	ret
.Ltmp451:
	.size	_Pshadow_Pstandard_Cubyte_Mmodulus_Pshadow_Pstandard_Cubyte, .Ltmp451-_Pshadow_Pstandard_Cubyte_Mmodulus_Pshadow_Pstandard_Cubyte

	.globl	_Pshadow_Pstandard_Cubyte_Mcompare_Pshadow_Pstandard_Cubyte
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Cubyte_Mcompare_Pshadow_Pstandard_Cubyte,@function
_Pshadow_Pstandard_Cubyte_Mcompare_Pshadow_Pstandard_Cubyte: # @_Pshadow_Pstandard_Cubyte_Mcompare_Pshadow_Pstandard_Cubyte
# BB#0:
	cmpb	%sil, %dil
	setne	%al
	movzbl	%al, %ecx
	movl	$-1, %eax
	cmovael	%ecx, %eax
	ret
.Ltmp452:
	.size	_Pshadow_Pstandard_Cubyte_Mcompare_Pshadow_Pstandard_Cubyte, .Ltmp452-_Pshadow_Pstandard_Cubyte_Mcompare_Pshadow_Pstandard_Cubyte

	.globl	_Pshadow_Pstandard_Cshort_Madd_Pshadow_Pstandard_Cshort
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Cshort_Madd_Pshadow_Pstandard_Cshort,@function
_Pshadow_Pstandard_Cshort_Madd_Pshadow_Pstandard_Cshort: # @_Pshadow_Pstandard_Cshort_Madd_Pshadow_Pstandard_Cshort
# BB#0:
	addl	%esi, %edi
	movw	%di, %ax
	ret
.Ltmp453:
	.size	_Pshadow_Pstandard_Cshort_Madd_Pshadow_Pstandard_Cshort, .Ltmp453-_Pshadow_Pstandard_Cshort_Madd_Pshadow_Pstandard_Cshort

	.globl	_Pshadow_Pstandard_Cshort_Msubtract_Pshadow_Pstandard_Cshort
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Cshort_Msubtract_Pshadow_Pstandard_Cshort,@function
_Pshadow_Pstandard_Cshort_Msubtract_Pshadow_Pstandard_Cshort: # @_Pshadow_Pstandard_Cshort_Msubtract_Pshadow_Pstandard_Cshort
# BB#0:
	subl	%esi, %edi
	movw	%di, %ax
	ret
.Ltmp454:
	.size	_Pshadow_Pstandard_Cshort_Msubtract_Pshadow_Pstandard_Cshort, .Ltmp454-_Pshadow_Pstandard_Cshort_Msubtract_Pshadow_Pstandard_Cshort

	.globl	_Pshadow_Pstandard_Cshort_Mmultiply_Pshadow_Pstandard_Cshort
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Cshort_Mmultiply_Pshadow_Pstandard_Cshort,@function
_Pshadow_Pstandard_Cshort_Mmultiply_Pshadow_Pstandard_Cshort: # @_Pshadow_Pstandard_Cshort_Mmultiply_Pshadow_Pstandard_Cshort
# BB#0:
	imull	%esi, %edi
	movw	%di, %ax
	ret
.Ltmp455:
	.size	_Pshadow_Pstandard_Cshort_Mmultiply_Pshadow_Pstandard_Cshort, .Ltmp455-_Pshadow_Pstandard_Cshort_Mmultiply_Pshadow_Pstandard_Cshort

	.globl	_Pshadow_Pstandard_Cshort_Mdivide_Pshadow_Pstandard_Cshort
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Cshort_Mdivide_Pshadow_Pstandard_Cshort,@function
_Pshadow_Pstandard_Cshort_Mdivide_Pshadow_Pstandard_Cshort: # @_Pshadow_Pstandard_Cshort_Mdivide_Pshadow_Pstandard_Cshort
# BB#0:
	movw	%di, %ax
	cwtd
	idivw	%si
	ret
.Ltmp456:
	.size	_Pshadow_Pstandard_Cshort_Mdivide_Pshadow_Pstandard_Cshort, .Ltmp456-_Pshadow_Pstandard_Cshort_Mdivide_Pshadow_Pstandard_Cshort

	.globl	_Pshadow_Pstandard_Cshort_Mmodulus_Pshadow_Pstandard_Cshort
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Cshort_Mmodulus_Pshadow_Pstandard_Cshort,@function
_Pshadow_Pstandard_Cshort_Mmodulus_Pshadow_Pstandard_Cshort: # @_Pshadow_Pstandard_Cshort_Mmodulus_Pshadow_Pstandard_Cshort
# BB#0:
	movw	%di, %ax
	cwtd
	idivw	%si
	movw	%dx, %ax
	ret
.Ltmp457:
	.size	_Pshadow_Pstandard_Cshort_Mmodulus_Pshadow_Pstandard_Cshort, .Ltmp457-_Pshadow_Pstandard_Cshort_Mmodulus_Pshadow_Pstandard_Cshort

	.globl	_Pshadow_Pstandard_Cshort_Mcompare_Pshadow_Pstandard_Cshort
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Cshort_Mcompare_Pshadow_Pstandard_Cshort,@function
_Pshadow_Pstandard_Cshort_Mcompare_Pshadow_Pstandard_Cshort: # @_Pshadow_Pstandard_Cshort_Mcompare_Pshadow_Pstandard_Cshort
# BB#0:
	cmpw	%si, %di
	setne	%al
	movzbl	%al, %ecx
	movl	$-1, %eax
	cmovgel	%ecx, %eax
	ret
.Ltmp458:
	.size	_Pshadow_Pstandard_Cshort_Mcompare_Pshadow_Pstandard_Cshort, .Ltmp458-_Pshadow_Pstandard_Cshort_Mcompare_Pshadow_Pstandard_Cshort

	.globl	_Pshadow_Pstandard_Cushort_Madd_Pshadow_Pstandard_Cushort
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Cushort_Madd_Pshadow_Pstandard_Cushort,@function
_Pshadow_Pstandard_Cushort_Madd_Pshadow_Pstandard_Cushort: # @_Pshadow_Pstandard_Cushort_Madd_Pshadow_Pstandard_Cushort
# BB#0:
	addl	%esi, %edi
	movw	%di, %ax
	ret
.Ltmp459:
	.size	_Pshadow_Pstandard_Cushort_Madd_Pshadow_Pstandard_Cushort, .Ltmp459-_Pshadow_Pstandard_Cushort_Madd_Pshadow_Pstandard_Cushort

	.globl	_Pshadow_Pstandard_Cushort_Msubtract_Pshadow_Pstandard_Cushort
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Cushort_Msubtract_Pshadow_Pstandard_Cushort,@function
_Pshadow_Pstandard_Cushort_Msubtract_Pshadow_Pstandard_Cushort: # @_Pshadow_Pstandard_Cushort_Msubtract_Pshadow_Pstandard_Cushort
# BB#0:
	subl	%esi, %edi
	movw	%di, %ax
	ret
.Ltmp460:
	.size	_Pshadow_Pstandard_Cushort_Msubtract_Pshadow_Pstandard_Cushort, .Ltmp460-_Pshadow_Pstandard_Cushort_Msubtract_Pshadow_Pstandard_Cushort

	.globl	_Pshadow_Pstandard_Cushort_Mmultiply_Pshadow_Pstandard_Cushort
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Cushort_Mmultiply_Pshadow_Pstandard_Cushort,@function
_Pshadow_Pstandard_Cushort_Mmultiply_Pshadow_Pstandard_Cushort: # @_Pshadow_Pstandard_Cushort_Mmultiply_Pshadow_Pstandard_Cushort
# BB#0:
	imull	%esi, %edi
	movw	%di, %ax
	ret
.Ltmp461:
	.size	_Pshadow_Pstandard_Cushort_Mmultiply_Pshadow_Pstandard_Cushort, .Ltmp461-_Pshadow_Pstandard_Cushort_Mmultiply_Pshadow_Pstandard_Cushort

	.globl	_Pshadow_Pstandard_Cushort_Mdivide_Pshadow_Pstandard_Cushort
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Cushort_Mdivide_Pshadow_Pstandard_Cushort,@function
_Pshadow_Pstandard_Cushort_Mdivide_Pshadow_Pstandard_Cushort: # @_Pshadow_Pstandard_Cushort_Mdivide_Pshadow_Pstandard_Cushort
# BB#0:
	movw	%di, %ax
	xorl	%edx, %edx
	divw	%si
	ret
.Ltmp462:
	.size	_Pshadow_Pstandard_Cushort_Mdivide_Pshadow_Pstandard_Cushort, .Ltmp462-_Pshadow_Pstandard_Cushort_Mdivide_Pshadow_Pstandard_Cushort

	.globl	_Pshadow_Pstandard_Cushort_Mmodulus_Pshadow_Pstandard_Cushort
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Cushort_Mmodulus_Pshadow_Pstandard_Cushort,@function
_Pshadow_Pstandard_Cushort_Mmodulus_Pshadow_Pstandard_Cushort: # @_Pshadow_Pstandard_Cushort_Mmodulus_Pshadow_Pstandard_Cushort
# BB#0:
	movw	%di, %ax
	xorl	%edx, %edx
	divw	%si
	movw	%dx, %ax
	ret
.Ltmp463:
	.size	_Pshadow_Pstandard_Cushort_Mmodulus_Pshadow_Pstandard_Cushort, .Ltmp463-_Pshadow_Pstandard_Cushort_Mmodulus_Pshadow_Pstandard_Cushort

	.globl	_Pshadow_Pstandard_Cushort_Mcompare_Pshadow_Pstandard_Cushort
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Cushort_Mcompare_Pshadow_Pstandard_Cushort,@function
_Pshadow_Pstandard_Cushort_Mcompare_Pshadow_Pstandard_Cushort: # @_Pshadow_Pstandard_Cushort_Mcompare_Pshadow_Pstandard_Cushort
# BB#0:
	cmpw	%si, %di
	setne	%al
	movzbl	%al, %ecx
	movl	$-1, %eax
	cmovael	%ecx, %eax
	ret
.Ltmp464:
	.size	_Pshadow_Pstandard_Cushort_Mcompare_Pshadow_Pstandard_Cushort, .Ltmp464-_Pshadow_Pstandard_Cushort_Mcompare_Pshadow_Pstandard_Cushort

	.globl	_Pshadow_Pstandard_Cint_Madd_Pshadow_Pstandard_Cint
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Cint_Madd_Pshadow_Pstandard_Cint,@function
_Pshadow_Pstandard_Cint_Madd_Pshadow_Pstandard_Cint: # @_Pshadow_Pstandard_Cint_Madd_Pshadow_Pstandard_Cint
# BB#0:
	addl	%esi, %edi
	movl	%edi, %eax
	ret
.Ltmp465:
	.size	_Pshadow_Pstandard_Cint_Madd_Pshadow_Pstandard_Cint, .Ltmp465-_Pshadow_Pstandard_Cint_Madd_Pshadow_Pstandard_Cint

	.globl	_Pshadow_Pstandard_Cint_Msubtract_Pshadow_Pstandard_Cint
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Cint_Msubtract_Pshadow_Pstandard_Cint,@function
_Pshadow_Pstandard_Cint_Msubtract_Pshadow_Pstandard_Cint: # @_Pshadow_Pstandard_Cint_Msubtract_Pshadow_Pstandard_Cint
# BB#0:
	subl	%esi, %edi
	movl	%edi, %eax
	ret
.Ltmp466:
	.size	_Pshadow_Pstandard_Cint_Msubtract_Pshadow_Pstandard_Cint, .Ltmp466-_Pshadow_Pstandard_Cint_Msubtract_Pshadow_Pstandard_Cint

	.globl	_Pshadow_Pstandard_Cint_Mmultiply_Pshadow_Pstandard_Cint
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Cint_Mmultiply_Pshadow_Pstandard_Cint,@function
_Pshadow_Pstandard_Cint_Mmultiply_Pshadow_Pstandard_Cint: # @_Pshadow_Pstandard_Cint_Mmultiply_Pshadow_Pstandard_Cint
# BB#0:
	imull	%esi, %edi
	movl	%edi, %eax
	ret
.Ltmp467:
	.size	_Pshadow_Pstandard_Cint_Mmultiply_Pshadow_Pstandard_Cint, .Ltmp467-_Pshadow_Pstandard_Cint_Mmultiply_Pshadow_Pstandard_Cint

	.globl	_Pshadow_Pstandard_Cint_Mdivide_Pshadow_Pstandard_Cint
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Cint_Mdivide_Pshadow_Pstandard_Cint,@function
_Pshadow_Pstandard_Cint_Mdivide_Pshadow_Pstandard_Cint: # @_Pshadow_Pstandard_Cint_Mdivide_Pshadow_Pstandard_Cint
# BB#0:
	movl	%edi, %eax
	cltd
	idivl	%esi
	ret
.Ltmp468:
	.size	_Pshadow_Pstandard_Cint_Mdivide_Pshadow_Pstandard_Cint, .Ltmp468-_Pshadow_Pstandard_Cint_Mdivide_Pshadow_Pstandard_Cint

	.globl	_Pshadow_Pstandard_Cint_Mmodulus_Pshadow_Pstandard_Cint
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Cint_Mmodulus_Pshadow_Pstandard_Cint,@function
_Pshadow_Pstandard_Cint_Mmodulus_Pshadow_Pstandard_Cint: # @_Pshadow_Pstandard_Cint_Mmodulus_Pshadow_Pstandard_Cint
# BB#0:
	movl	%edi, %eax
	cltd
	idivl	%esi
	movl	%edx, %eax
	ret
.Ltmp469:
	.size	_Pshadow_Pstandard_Cint_Mmodulus_Pshadow_Pstandard_Cint, .Ltmp469-_Pshadow_Pstandard_Cint_Mmodulus_Pshadow_Pstandard_Cint

	.globl	_Pshadow_Pstandard_Cint_Mcompare_Pshadow_Pstandard_Cint
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Cint_Mcompare_Pshadow_Pstandard_Cint,@function
_Pshadow_Pstandard_Cint_Mcompare_Pshadow_Pstandard_Cint: # @_Pshadow_Pstandard_Cint_Mcompare_Pshadow_Pstandard_Cint
# BB#0:
	cmpl	%esi, %edi
	setne	%al
	movzbl	%al, %ecx
	movl	$-1, %eax
	cmovgel	%ecx, %eax
	ret
.Ltmp470:
	.size	_Pshadow_Pstandard_Cint_Mcompare_Pshadow_Pstandard_Cint, .Ltmp470-_Pshadow_Pstandard_Cint_Mcompare_Pshadow_Pstandard_Cint

	.globl	_Pshadow_Pstandard_Cuint_Madd_Pshadow_Pstandard_Cuint
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Cuint_Madd_Pshadow_Pstandard_Cuint,@function
_Pshadow_Pstandard_Cuint_Madd_Pshadow_Pstandard_Cuint: # @_Pshadow_Pstandard_Cuint_Madd_Pshadow_Pstandard_Cuint
# BB#0:
	addl	%esi, %edi
	movl	%edi, %eax
	ret
.Ltmp471:
	.size	_Pshadow_Pstandard_Cuint_Madd_Pshadow_Pstandard_Cuint, .Ltmp471-_Pshadow_Pstandard_Cuint_Madd_Pshadow_Pstandard_Cuint

	.globl	_Pshadow_Pstandard_Cuint_Msubtract_Pshadow_Pstandard_Cuint
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Cuint_Msubtract_Pshadow_Pstandard_Cuint,@function
_Pshadow_Pstandard_Cuint_Msubtract_Pshadow_Pstandard_Cuint: # @_Pshadow_Pstandard_Cuint_Msubtract_Pshadow_Pstandard_Cuint
# BB#0:
	subl	%esi, %edi
	movl	%edi, %eax
	ret
.Ltmp472:
	.size	_Pshadow_Pstandard_Cuint_Msubtract_Pshadow_Pstandard_Cuint, .Ltmp472-_Pshadow_Pstandard_Cuint_Msubtract_Pshadow_Pstandard_Cuint

	.globl	_Pshadow_Pstandard_Cuint_Mmultiply_Pshadow_Pstandard_Cuint
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Cuint_Mmultiply_Pshadow_Pstandard_Cuint,@function
_Pshadow_Pstandard_Cuint_Mmultiply_Pshadow_Pstandard_Cuint: # @_Pshadow_Pstandard_Cuint_Mmultiply_Pshadow_Pstandard_Cuint
# BB#0:
	imull	%esi, %edi
	movl	%edi, %eax
	ret
.Ltmp473:
	.size	_Pshadow_Pstandard_Cuint_Mmultiply_Pshadow_Pstandard_Cuint, .Ltmp473-_Pshadow_Pstandard_Cuint_Mmultiply_Pshadow_Pstandard_Cuint

	.globl	_Pshadow_Pstandard_Cuint_Mdivide_Pshadow_Pstandard_Cuint
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Cuint_Mdivide_Pshadow_Pstandard_Cuint,@function
_Pshadow_Pstandard_Cuint_Mdivide_Pshadow_Pstandard_Cuint: # @_Pshadow_Pstandard_Cuint_Mdivide_Pshadow_Pstandard_Cuint
# BB#0:
	movl	%edi, %eax
	xorl	%edx, %edx
	divl	%esi
	ret
.Ltmp474:
	.size	_Pshadow_Pstandard_Cuint_Mdivide_Pshadow_Pstandard_Cuint, .Ltmp474-_Pshadow_Pstandard_Cuint_Mdivide_Pshadow_Pstandard_Cuint

	.globl	_Pshadow_Pstandard_Cuint_Mmodulus_Pshadow_Pstandard_Cuint
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Cuint_Mmodulus_Pshadow_Pstandard_Cuint,@function
_Pshadow_Pstandard_Cuint_Mmodulus_Pshadow_Pstandard_Cuint: # @_Pshadow_Pstandard_Cuint_Mmodulus_Pshadow_Pstandard_Cuint
# BB#0:
	movl	%edi, %eax
	xorl	%edx, %edx
	divl	%esi
	movl	%edx, %eax
	ret
.Ltmp475:
	.size	_Pshadow_Pstandard_Cuint_Mmodulus_Pshadow_Pstandard_Cuint, .Ltmp475-_Pshadow_Pstandard_Cuint_Mmodulus_Pshadow_Pstandard_Cuint

	.globl	_Pshadow_Pstandard_Cuint_Mcompare_Pshadow_Pstandard_Cuint
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Cuint_Mcompare_Pshadow_Pstandard_Cuint,@function
_Pshadow_Pstandard_Cuint_Mcompare_Pshadow_Pstandard_Cuint: # @_Pshadow_Pstandard_Cuint_Mcompare_Pshadow_Pstandard_Cuint
# BB#0:
	cmpl	%esi, %edi
	setne	%al
	movzbl	%al, %ecx
	movl	$-1, %eax
	cmovael	%ecx, %eax
	ret
.Ltmp476:
	.size	_Pshadow_Pstandard_Cuint_Mcompare_Pshadow_Pstandard_Cuint, .Ltmp476-_Pshadow_Pstandard_Cuint_Mcompare_Pshadow_Pstandard_Cuint

	.globl	_Pshadow_Pstandard_Clong_Madd_Pshadow_Pstandard_Clong
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Clong_Madd_Pshadow_Pstandard_Clong,@function
_Pshadow_Pstandard_Clong_Madd_Pshadow_Pstandard_Clong: # @_Pshadow_Pstandard_Clong_Madd_Pshadow_Pstandard_Clong
# BB#0:
	addq	%rsi, %rdi
	movq	%rdi, %rax
	ret
.Ltmp477:
	.size	_Pshadow_Pstandard_Clong_Madd_Pshadow_Pstandard_Clong, .Ltmp477-_Pshadow_Pstandard_Clong_Madd_Pshadow_Pstandard_Clong

	.globl	_Pshadow_Pstandard_Clong_Msubtract_Pshadow_Pstandard_Clong
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Clong_Msubtract_Pshadow_Pstandard_Clong,@function
_Pshadow_Pstandard_Clong_Msubtract_Pshadow_Pstandard_Clong: # @_Pshadow_Pstandard_Clong_Msubtract_Pshadow_Pstandard_Clong
# BB#0:
	subq	%rsi, %rdi
	movq	%rdi, %rax
	ret
.Ltmp478:
	.size	_Pshadow_Pstandard_Clong_Msubtract_Pshadow_Pstandard_Clong, .Ltmp478-_Pshadow_Pstandard_Clong_Msubtract_Pshadow_Pstandard_Clong

	.globl	_Pshadow_Pstandard_Clong_Mmultiply_Pshadow_Pstandard_Clong
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Clong_Mmultiply_Pshadow_Pstandard_Clong,@function
_Pshadow_Pstandard_Clong_Mmultiply_Pshadow_Pstandard_Clong: # @_Pshadow_Pstandard_Clong_Mmultiply_Pshadow_Pstandard_Clong
# BB#0:
	imulq	%rsi, %rdi
	movq	%rdi, %rax
	ret
.Ltmp479:
	.size	_Pshadow_Pstandard_Clong_Mmultiply_Pshadow_Pstandard_Clong, .Ltmp479-_Pshadow_Pstandard_Clong_Mmultiply_Pshadow_Pstandard_Clong

	.globl	_Pshadow_Pstandard_Clong_Mdivide_Pshadow_Pstandard_Clong
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Clong_Mdivide_Pshadow_Pstandard_Clong,@function
_Pshadow_Pstandard_Clong_Mdivide_Pshadow_Pstandard_Clong: # @_Pshadow_Pstandard_Clong_Mdivide_Pshadow_Pstandard_Clong
# BB#0:
	movq	%rdi, %rax
	cqto
	idivq	%rsi
	ret
.Ltmp480:
	.size	_Pshadow_Pstandard_Clong_Mdivide_Pshadow_Pstandard_Clong, .Ltmp480-_Pshadow_Pstandard_Clong_Mdivide_Pshadow_Pstandard_Clong

	.globl	_Pshadow_Pstandard_Clong_Mmodulus_Pshadow_Pstandard_Clong
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Clong_Mmodulus_Pshadow_Pstandard_Clong,@function
_Pshadow_Pstandard_Clong_Mmodulus_Pshadow_Pstandard_Clong: # @_Pshadow_Pstandard_Clong_Mmodulus_Pshadow_Pstandard_Clong
# BB#0:
	movq	%rdi, %rax
	cqto
	idivq	%rsi
	movq	%rdx, %rax
	ret
.Ltmp481:
	.size	_Pshadow_Pstandard_Clong_Mmodulus_Pshadow_Pstandard_Clong, .Ltmp481-_Pshadow_Pstandard_Clong_Mmodulus_Pshadow_Pstandard_Clong

	.globl	_Pshadow_Pstandard_Clong_Mcompare_Pshadow_Pstandard_Clong
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Clong_Mcompare_Pshadow_Pstandard_Clong,@function
_Pshadow_Pstandard_Clong_Mcompare_Pshadow_Pstandard_Clong: # @_Pshadow_Pstandard_Clong_Mcompare_Pshadow_Pstandard_Clong
# BB#0:
	cmpq	%rsi, %rdi
	setne	%al
	movzbl	%al, %ecx
	movl	$-1, %eax
	cmovgel	%ecx, %eax
	ret
.Ltmp482:
	.size	_Pshadow_Pstandard_Clong_Mcompare_Pshadow_Pstandard_Clong, .Ltmp482-_Pshadow_Pstandard_Clong_Mcompare_Pshadow_Pstandard_Clong

	.globl	_Pshadow_Pstandard_Culong_Madd_Pshadow_Pstandard_Culong
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Culong_Madd_Pshadow_Pstandard_Culong,@function
_Pshadow_Pstandard_Culong_Madd_Pshadow_Pstandard_Culong: # @_Pshadow_Pstandard_Culong_Madd_Pshadow_Pstandard_Culong
# BB#0:
	addq	%rsi, %rdi
	movq	%rdi, %rax
	ret
.Ltmp483:
	.size	_Pshadow_Pstandard_Culong_Madd_Pshadow_Pstandard_Culong, .Ltmp483-_Pshadow_Pstandard_Culong_Madd_Pshadow_Pstandard_Culong

	.globl	_Pshadow_Pstandard_Culong_Msubtract_Pshadow_Pstandard_Culong
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Culong_Msubtract_Pshadow_Pstandard_Culong,@function
_Pshadow_Pstandard_Culong_Msubtract_Pshadow_Pstandard_Culong: # @_Pshadow_Pstandard_Culong_Msubtract_Pshadow_Pstandard_Culong
# BB#0:
	subq	%rsi, %rdi
	movq	%rdi, %rax
	ret
.Ltmp484:
	.size	_Pshadow_Pstandard_Culong_Msubtract_Pshadow_Pstandard_Culong, .Ltmp484-_Pshadow_Pstandard_Culong_Msubtract_Pshadow_Pstandard_Culong

	.globl	_Pshadow_Pstandard_Culong_Mmultiply_Pshadow_Pstandard_Culong
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Culong_Mmultiply_Pshadow_Pstandard_Culong,@function
_Pshadow_Pstandard_Culong_Mmultiply_Pshadow_Pstandard_Culong: # @_Pshadow_Pstandard_Culong_Mmultiply_Pshadow_Pstandard_Culong
# BB#0:
	imulq	%rsi, %rdi
	movq	%rdi, %rax
	ret
.Ltmp485:
	.size	_Pshadow_Pstandard_Culong_Mmultiply_Pshadow_Pstandard_Culong, .Ltmp485-_Pshadow_Pstandard_Culong_Mmultiply_Pshadow_Pstandard_Culong

	.globl	_Pshadow_Pstandard_Culong_Mdivide_Pshadow_Pstandard_Culong
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Culong_Mdivide_Pshadow_Pstandard_Culong,@function
_Pshadow_Pstandard_Culong_Mdivide_Pshadow_Pstandard_Culong: # @_Pshadow_Pstandard_Culong_Mdivide_Pshadow_Pstandard_Culong
# BB#0:
	movq	%rdi, %rax
	xorl	%edx, %edx
	divq	%rsi
	ret
.Ltmp486:
	.size	_Pshadow_Pstandard_Culong_Mdivide_Pshadow_Pstandard_Culong, .Ltmp486-_Pshadow_Pstandard_Culong_Mdivide_Pshadow_Pstandard_Culong

	.globl	_Pshadow_Pstandard_Culong_Mmodulus_Pshadow_Pstandard_Culong
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Culong_Mmodulus_Pshadow_Pstandard_Culong,@function
_Pshadow_Pstandard_Culong_Mmodulus_Pshadow_Pstandard_Culong: # @_Pshadow_Pstandard_Culong_Mmodulus_Pshadow_Pstandard_Culong
# BB#0:
	movq	%rdi, %rax
	xorl	%edx, %edx
	divq	%rsi
	movq	%rdx, %rax
	ret
.Ltmp487:
	.size	_Pshadow_Pstandard_Culong_Mmodulus_Pshadow_Pstandard_Culong, .Ltmp487-_Pshadow_Pstandard_Culong_Mmodulus_Pshadow_Pstandard_Culong

	.globl	_Pshadow_Pstandard_Culong_Mcompare_Pshadow_Pstandard_Culong
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Culong_Mcompare_Pshadow_Pstandard_Culong,@function
_Pshadow_Pstandard_Culong_Mcompare_Pshadow_Pstandard_Culong: # @_Pshadow_Pstandard_Culong_Mcompare_Pshadow_Pstandard_Culong
# BB#0:
	cmpq	%rsi, %rdi
	setne	%al
	movzbl	%al, %ecx
	movl	$-1, %eax
	cmovael	%ecx, %eax
	ret
.Ltmp488:
	.size	_Pshadow_Pstandard_Culong_Mcompare_Pshadow_Pstandard_Culong, .Ltmp488-_Pshadow_Pstandard_Culong_Mcompare_Pshadow_Pstandard_Culong

	.globl	_Pshadow_Pstandard_Cfloat_Madd_Pshadow_Pstandard_Cfloat
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Cfloat_Madd_Pshadow_Pstandard_Cfloat,@function
_Pshadow_Pstandard_Cfloat_Madd_Pshadow_Pstandard_Cfloat: # @_Pshadow_Pstandard_Cfloat_Madd_Pshadow_Pstandard_Cfloat
# BB#0:
	vaddss	%xmm1, %xmm0, %xmm0
	ret
.Ltmp489:
	.size	_Pshadow_Pstandard_Cfloat_Madd_Pshadow_Pstandard_Cfloat, .Ltmp489-_Pshadow_Pstandard_Cfloat_Madd_Pshadow_Pstandard_Cfloat

	.globl	_Pshadow_Pstandard_Cfloat_Msubtract_Pshadow_Pstandard_Cfloat
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Cfloat_Msubtract_Pshadow_Pstandard_Cfloat,@function
_Pshadow_Pstandard_Cfloat_Msubtract_Pshadow_Pstandard_Cfloat: # @_Pshadow_Pstandard_Cfloat_Msubtract_Pshadow_Pstandard_Cfloat
# BB#0:
	vsubss	%xmm1, %xmm0, %xmm0
	ret
.Ltmp490:
	.size	_Pshadow_Pstandard_Cfloat_Msubtract_Pshadow_Pstandard_Cfloat, .Ltmp490-_Pshadow_Pstandard_Cfloat_Msubtract_Pshadow_Pstandard_Cfloat

	.globl	_Pshadow_Pstandard_Cfloat_Mmultiply_Pshadow_Pstandard_Cfloat
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Cfloat_Mmultiply_Pshadow_Pstandard_Cfloat,@function
_Pshadow_Pstandard_Cfloat_Mmultiply_Pshadow_Pstandard_Cfloat: # @_Pshadow_Pstandard_Cfloat_Mmultiply_Pshadow_Pstandard_Cfloat
# BB#0:
	vmulss	%xmm1, %xmm0, %xmm0
	ret
.Ltmp491:
	.size	_Pshadow_Pstandard_Cfloat_Mmultiply_Pshadow_Pstandard_Cfloat, .Ltmp491-_Pshadow_Pstandard_Cfloat_Mmultiply_Pshadow_Pstandard_Cfloat

	.globl	_Pshadow_Pstandard_Cfloat_Mdivide_Pshadow_Pstandard_Cfloat
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Cfloat_Mdivide_Pshadow_Pstandard_Cfloat,@function
_Pshadow_Pstandard_Cfloat_Mdivide_Pshadow_Pstandard_Cfloat: # @_Pshadow_Pstandard_Cfloat_Mdivide_Pshadow_Pstandard_Cfloat
# BB#0:
	vdivss	%xmm1, %xmm0, %xmm0
	ret
.Ltmp492:
	.size	_Pshadow_Pstandard_Cfloat_Mdivide_Pshadow_Pstandard_Cfloat, .Ltmp492-_Pshadow_Pstandard_Cfloat_Mdivide_Pshadow_Pstandard_Cfloat

	.globl	_Pshadow_Pstandard_Cfloat_Mmodulus_Pshadow_Pstandard_Cfloat
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Cfloat_Mmodulus_Pshadow_Pstandard_Cfloat,@function
_Pshadow_Pstandard_Cfloat_Mmodulus_Pshadow_Pstandard_Cfloat: # @_Pshadow_Pstandard_Cfloat_Mmodulus_Pshadow_Pstandard_Cfloat
# BB#0:
	jmp	fmodf                   # TAILCALL
.Ltmp493:
	.size	_Pshadow_Pstandard_Cfloat_Mmodulus_Pshadow_Pstandard_Cfloat, .Ltmp493-_Pshadow_Pstandard_Cfloat_Mmodulus_Pshadow_Pstandard_Cfloat

	.globl	_Pshadow_Pstandard_Cfloat_Mcompare_Pshadow_Pstandard_Cfloat
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Cfloat_Mcompare_Pshadow_Pstandard_Cfloat,@function
_Pshadow_Pstandard_Cfloat_Mcompare_Pshadow_Pstandard_Cfloat: # @_Pshadow_Pstandard_Cfloat_Mcompare_Pshadow_Pstandard_Cfloat
# BB#0:
	vcmpneqss	%xmm1, %xmm0, %xmm2
	vmovd	%xmm2, %ecx
	andl	$1, %ecx
	movl	$-1, %eax
	vucomiss	%xmm0, %xmm1
	cmovbel	%ecx, %eax
	ret
.Ltmp494:
	.size	_Pshadow_Pstandard_Cfloat_Mcompare_Pshadow_Pstandard_Cfloat, .Ltmp494-_Pshadow_Pstandard_Cfloat_Mcompare_Pshadow_Pstandard_Cfloat

	.globl	_Pshadow_Pstandard_Cdouble_Madd_Pshadow_Pstandard_Cdouble
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Cdouble_Madd_Pshadow_Pstandard_Cdouble,@function
_Pshadow_Pstandard_Cdouble_Madd_Pshadow_Pstandard_Cdouble: # @_Pshadow_Pstandard_Cdouble_Madd_Pshadow_Pstandard_Cdouble
# BB#0:
	vaddsd	%xmm1, %xmm0, %xmm0
	ret
.Ltmp495:
	.size	_Pshadow_Pstandard_Cdouble_Madd_Pshadow_Pstandard_Cdouble, .Ltmp495-_Pshadow_Pstandard_Cdouble_Madd_Pshadow_Pstandard_Cdouble

	.globl	_Pshadow_Pstandard_Cdouble_Msubtract_Pshadow_Pstandard_Cdouble
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Cdouble_Msubtract_Pshadow_Pstandard_Cdouble,@function
_Pshadow_Pstandard_Cdouble_Msubtract_Pshadow_Pstandard_Cdouble: # @_Pshadow_Pstandard_Cdouble_Msubtract_Pshadow_Pstandard_Cdouble
# BB#0:
	vsubsd	%xmm1, %xmm0, %xmm0
	ret
.Ltmp496:
	.size	_Pshadow_Pstandard_Cdouble_Msubtract_Pshadow_Pstandard_Cdouble, .Ltmp496-_Pshadow_Pstandard_Cdouble_Msubtract_Pshadow_Pstandard_Cdouble

	.globl	_Pshadow_Pstandard_Cdouble_Mmultiply_Pshadow_Pstandard_Cdouble
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Cdouble_Mmultiply_Pshadow_Pstandard_Cdouble,@function
_Pshadow_Pstandard_Cdouble_Mmultiply_Pshadow_Pstandard_Cdouble: # @_Pshadow_Pstandard_Cdouble_Mmultiply_Pshadow_Pstandard_Cdouble
# BB#0:
	vmulsd	%xmm1, %xmm0, %xmm0
	ret
.Ltmp497:
	.size	_Pshadow_Pstandard_Cdouble_Mmultiply_Pshadow_Pstandard_Cdouble, .Ltmp497-_Pshadow_Pstandard_Cdouble_Mmultiply_Pshadow_Pstandard_Cdouble

	.globl	_Pshadow_Pstandard_Cdouble_Mdivide_Pshadow_Pstandard_Cdouble
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Cdouble_Mdivide_Pshadow_Pstandard_Cdouble,@function
_Pshadow_Pstandard_Cdouble_Mdivide_Pshadow_Pstandard_Cdouble: # @_Pshadow_Pstandard_Cdouble_Mdivide_Pshadow_Pstandard_Cdouble
# BB#0:
	vdivsd	%xmm1, %xmm0, %xmm0
	ret
.Ltmp498:
	.size	_Pshadow_Pstandard_Cdouble_Mdivide_Pshadow_Pstandard_Cdouble, .Ltmp498-_Pshadow_Pstandard_Cdouble_Mdivide_Pshadow_Pstandard_Cdouble

	.globl	_Pshadow_Pstandard_Cdouble_Mmodulus_Pshadow_Pstandard_Cdouble
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Cdouble_Mmodulus_Pshadow_Pstandard_Cdouble,@function
_Pshadow_Pstandard_Cdouble_Mmodulus_Pshadow_Pstandard_Cdouble: # @_Pshadow_Pstandard_Cdouble_Mmodulus_Pshadow_Pstandard_Cdouble
# BB#0:
	jmp	fmod                    # TAILCALL
.Ltmp499:
	.size	_Pshadow_Pstandard_Cdouble_Mmodulus_Pshadow_Pstandard_Cdouble, .Ltmp499-_Pshadow_Pstandard_Cdouble_Mmodulus_Pshadow_Pstandard_Cdouble

	.globl	_Pshadow_Pstandard_Cdouble_Mcompare_Pshadow_Pstandard_Cdouble
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Cdouble_Mcompare_Pshadow_Pstandard_Cdouble,@function
_Pshadow_Pstandard_Cdouble_Mcompare_Pshadow_Pstandard_Cdouble: # @_Pshadow_Pstandard_Cdouble_Mcompare_Pshadow_Pstandard_Cdouble
# BB#0:
	vcmpneqsd	%xmm1, %xmm0, %xmm2
	vmovd	%xmm2, %ecx
	andl	$1, %ecx
	movl	$-1, %eax
	vucomisd	%xmm0, %xmm1
	cmovbel	%ecx, %eax
	ret
.Ltmp500:
	.size	_Pshadow_Pstandard_Cdouble_Mcompare_Pshadow_Pstandard_Cdouble, .Ltmp500-_Pshadow_Pstandard_Cdouble_Mcompare_Pshadow_Pstandard_Cdouble

	.globl	_Pshadow_Pstandard_CObject_Mequals_Pshadow_Pstandard_CObject
	.align	16, 0x90
	.type	_Pshadow_Pstandard_CObject_Mequals_Pshadow_Pstandard_CObject,@function
_Pshadow_Pstandard_CObject_Mequals_Pshadow_Pstandard_CObject: # @_Pshadow_Pstandard_CObject_Mequals_Pshadow_Pstandard_CObject
# BB#0:
	cmpq	%rsi, %rdi
	sete	%al
	ret
.Ltmp501:
	.size	_Pshadow_Pstandard_CObject_Mequals_Pshadow_Pstandard_CObject, .Ltmp501-_Pshadow_Pstandard_CObject_Mequals_Pshadow_Pstandard_CObject

	.globl	_Pshadow_Pstandard_CObject_MtoString
	.align	16, 0x90
	.type	_Pshadow_Pstandard_CObject_MtoString,@function
_Pshadow_Pstandard_CObject_MtoString:   # @_Pshadow_Pstandard_CObject_MtoString
	.cfi_startproc
# BB#0:
	pushq	%rax
.Ltmp503:
	.cfi_def_cfa_offset 16
	movq	(%rdi), %rax
	callq	*96(%rax)
	movq	32(%rax), %rax
	popq	%rdx
	ret
.Ltmp504:
	.size	_Pshadow_Pstandard_CObject_MtoString, .Ltmp504-_Pshadow_Pstandard_CObject_MtoString
	.cfi_endproc

	.globl	_Pshadow_Pstandard_CObject_Mcreate
	.align	16, 0x90
	.type	_Pshadow_Pstandard_CObject_Mcreate,@function
_Pshadow_Pstandard_CObject_Mcreate:     # @_Pshadow_Pstandard_CObject_Mcreate
# BB#0:
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rdi)
	movq	%rdi, %rax
	ret
.Ltmp505:
	.size	_Pshadow_Pstandard_CObject_Mcreate, .Ltmp505-_Pshadow_Pstandard_CObject_Mcreate

	.globl	_Pshadow_Pstandard_CObject_MreferenceEquals_Pshadow_Pstandard_CObject
	.align	16, 0x90
	.type	_Pshadow_Pstandard_CObject_MreferenceEquals_Pshadow_Pstandard_CObject,@function
_Pshadow_Pstandard_CObject_MreferenceEquals_Pshadow_Pstandard_CObject: # @_Pshadow_Pstandard_CObject_MreferenceEquals_Pshadow_Pstandard_CObject
# BB#0:
	cmpq	%rsi, %rdi
	sete	%al
	ret
.Ltmp506:
	.size	_Pshadow_Pstandard_CObject_MreferenceEquals_Pshadow_Pstandard_CObject, .Ltmp506-_Pshadow_Pstandard_CObject_MreferenceEquals_Pshadow_Pstandard_CObject

	.globl	_Pshadow_Pstandard_CObject_MgetClass
	.align	16, 0x90
	.type	_Pshadow_Pstandard_CObject_MgetClass,@function
_Pshadow_Pstandard_CObject_MgetClass:   # @_Pshadow_Pstandard_CObject_MgetClass
# BB#0:
	movq	(%rdi), %rax
	ret
.Ltmp507:
	.size	_Pshadow_Pstandard_CObject_MgetClass, .Ltmp507-_Pshadow_Pstandard_CObject_MgetClass

	.globl	_Pshadow_Pstandard_CObject_Mcopy
	.align	16, 0x90
	.type	_Pshadow_Pstandard_CObject_Mcopy,@function
_Pshadow_Pstandard_CObject_Mcopy:       # @_Pshadow_Pstandard_CObject_Mcopy
# BB#0:
	movq	%rdi, %rax
	ret
.Ltmp508:
	.size	_Pshadow_Pstandard_CObject_Mcopy, .Ltmp508-_Pshadow_Pstandard_CObject_Mcopy

	.globl	_Pshadow_Pstandard_CObject_Mfreeze
	.align	16, 0x90
	.type	_Pshadow_Pstandard_CObject_Mfreeze,@function
_Pshadow_Pstandard_CObject_Mfreeze:     # @_Pshadow_Pstandard_CObject_Mfreeze
# BB#0:
	movq	%rdi, %rax
	ret
.Ltmp509:
	.size	_Pshadow_Pstandard_CObject_Mfreeze, .Ltmp509-_Pshadow_Pstandard_CObject_Mfreeze

	.globl	_Pshadow_Pstandard_CReference_Mvalue
	.align	16, 0x90
	.type	_Pshadow_Pstandard_CReference_Mvalue,@function
_Pshadow_Pstandard_CReference_Mvalue:   # @_Pshadow_Pstandard_CReference_Mvalue
# BB#0:
	movq	16(%rdi), %rax
	ret
.Ltmp510:
	.size	_Pshadow_Pstandard_CReference_Mvalue, .Ltmp510-_Pshadow_Pstandard_CReference_Mvalue

	.globl	_Pshadow_Pstandard_CReference_Mvalue_CT
	.align	16, 0x90
	.type	_Pshadow_Pstandard_CReference_Mvalue_CT,@function
_Pshadow_Pstandard_CReference_Mvalue_CT: # @_Pshadow_Pstandard_CReference_Mvalue_CT
# BB#0:
	movq	%rsi, 16(%rdi)
	ret
.Ltmp511:
	.size	_Pshadow_Pstandard_CReference_Mvalue_CT, .Ltmp511-_Pshadow_Pstandard_CReference_Mvalue_CT

	.globl	_Pshadow_Pstandard_CReference_MtoString
	.align	16, 0x90
	.type	_Pshadow_Pstandard_CReference_MtoString,@function
_Pshadow_Pstandard_CReference_MtoString: # @_Pshadow_Pstandard_CReference_MtoString
	.cfi_startproc
# BB#0:
	movq	16(%rdi), %rdi
	testq	%rdi, %rdi
	je	.LBB147_1
# BB#2:                                 # %_label1
	movq	(%rdi), %rax
	jmpq	*104(%rax)  # TAILCALL
.LBB147_1:                              # %_label2
	movl	$.L_string1424, %eax
	ret
.Ltmp512:
	.size	_Pshadow_Pstandard_CReference_MtoString, .Ltmp512-_Pshadow_Pstandard_CReference_MtoString
	.cfi_endproc

	.globl	_Pshadow_Pstandard_CReference_Mcreate
	.align	16, 0x90
	.type	_Pshadow_Pstandard_CReference_Mcreate,@function
_Pshadow_Pstandard_CReference_Mcreate:  # @_Pshadow_Pstandard_CReference_Mcreate
# BB#0:
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rdi)
	movq	$_Pshadow_Pstandard_CReference_Mclass, (%rdi)
	movq	%rsi, 8(%rdi)
	movq	$0, 16(%rdi)
	movq	%rdi, %rax
	ret
.Ltmp513:
	.size	_Pshadow_Pstandard_CReference_Mcreate, .Ltmp513-_Pshadow_Pstandard_CReference_Mcreate

	.globl	_Pshadow_Pstandard_CReference_Mcreate_CT
	.align	16, 0x90
	.type	_Pshadow_Pstandard_CReference_Mcreate_CT,@function
_Pshadow_Pstandard_CReference_Mcreate_CT: # @_Pshadow_Pstandard_CReference_Mcreate_CT
# BB#0:
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rdi)
	movq	$_Pshadow_Pstandard_CReference_Mclass, (%rdi)
	movq	%rsi, 8(%rdi)
	movq	%rdx, 16(%rdi)
	movq	%rdi, %rax
	ret
.Ltmp514:
	.size	_Pshadow_Pstandard_CReference_Mcreate_CT, .Ltmp514-_Pshadow_Pstandard_CReference_Mcreate_CT

	.globl	_Pshadow_Pstandard_Cshort_Mcreate
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Cshort_Mcreate,@function
_Pshadow_Pstandard_Cshort_Mcreate:      # @_Pshadow_Pstandard_Cshort_Mcreate
# BB#0:
	movq	$_Pshadow_Pstandard_Cshort_Mclass, (%rdi)
	movq	%rdi, %rax
	ret
.Ltmp515:
	.size	_Pshadow_Pstandard_Cshort_Mcreate, .Ltmp515-_Pshadow_Pstandard_Cshort_Mcreate

	.globl	_Pshadow_Pstandard_CString_MtoUpperCase
	.align	16, 0x90
	.type	_Pshadow_Pstandard_CString_MtoUpperCase,@function
_Pshadow_Pstandard_CString_MtoUpperCase: # @_Pshadow_Pstandard_CString_MtoUpperCase
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp521:
	.cfi_def_cfa_offset 16
	pushq	%r15
.Ltmp522:
	.cfi_def_cfa_offset 24
	pushq	%r14
.Ltmp523:
	.cfi_def_cfa_offset 32
	pushq	%rbx
.Ltmp524:
	.cfi_def_cfa_offset 40
	pushq	%rax
.Ltmp525:
	.cfi_def_cfa_offset 48
.Ltmp526:
	.cfi_offset %rbx, -40
.Ltmp527:
	.cfi_offset %r14, -32
.Ltmp528:
	.cfi_offset %r15, -24
.Ltmp529:
	.cfi_offset %rbp, -16
	movq	%rdi, %rbp
	movl	$24, %edi
	callq	malloc
	movq	%rax, %rbx
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rbx)
	movq	$_Pshadow_Pstandard_CString_IStringIterator_Mclass, (%rbx)
	movq	%rbp, 8(%rbx)
	movl	$0, 16(%rbx)
	movl	_Pshadow_Pstandard_CMutableString_Mclass+52(%rip), %edi
	callq	malloc
	movq	%rax, %r14
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%r14)
	movq	$_Pshadow_Pstandard_CMutableString_Mclass, (%r14)
	movl	$10, %edi
	movl	$1, %esi
	callq	calloc
	movq	%rax, 8(%r14)
	movl	$10, 16(%r14)
	movl	$0, 24(%r14)
	jmp	.LBB151_2
	.align	16, 0x90
.LBB151_1:                              # %_label0
                                        #   in Loop: Header=BB151_2 Depth=1
	movq	112(%rcx), %r15
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*120(%rax)
	movl	%eax, %ebp
	movl	$16, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_Ccode_Mclass, (%rax)
	leal	32(%rbp), %ecx
	leal	-65(%rbp), %edx
	cmpl	$26, %edx
	cmovael	%ebp, %ecx
	movq	$_Pshadow_Pstandard_Ccode_Mclass, (%rax)
	movl	%ecx, 8(%rax)
	movq	%r14, %rdi
	movq	%rax, %rsi
	callq	*%r15
.LBB151_2:                              # %_label0
                                        # =>This Inner Loop Header: Depth=1
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*112(%rax)
	movq	(%r14), %rcx
	testb	$1, %al
	jne	.LBB151_1
# BB#3:                                 # %_label2
	movq	%r14, %rdi
	callq	*104(%rcx)
	addq	$8, %rsp
	popq	%rbx
	popq	%r14
	popq	%r15
	popq	%rbp
	ret
.Ltmp530:
	.size	_Pshadow_Pstandard_CString_MtoUpperCase, .Ltmp530-_Pshadow_Pstandard_CString_MtoUpperCase
	.cfi_endproc

	.globl	_Pshadow_Pstandard_CString_MisEmpty
	.align	16, 0x90
	.type	_Pshadow_Pstandard_CString_MisEmpty,@function
_Pshadow_Pstandard_CString_MisEmpty:    # @_Pshadow_Pstandard_CString_MisEmpty
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp536:
	.cfi_def_cfa_offset 16
	pushq	%r15
.Ltmp537:
	.cfi_def_cfa_offset 24
	pushq	%r14
.Ltmp538:
	.cfi_def_cfa_offset 32
	pushq	%rbx
.Ltmp539:
	.cfi_def_cfa_offset 40
	pushq	%rax
.Ltmp540:
	.cfi_def_cfa_offset 48
.Ltmp541:
	.cfi_offset %rbx, -40
.Ltmp542:
	.cfi_offset %r14, -32
.Ltmp543:
	.cfi_offset %r15, -24
.Ltmp544:
	.cfi_offset %rbp, -16
	movq	8(%rdi), %r14
	movl	16(%rdi), %ebp
	movl	$1, %edi
	movl	$4, %esi
	callq	calloc
	movq	%rax, %rbx
	movl	%ebp, (%rbx)
	movl	$40, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_CArray_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_Cbyte_Mclass, 24(%rax)
	movq	%rbx, 8(%rax)
	movl	$1, 16(%rax)
	movq	%r14, 32(%rax)
	movq	(%rax), %rax
	movq	160(%rax), %r15
	movl	$1, %edi
	movl	$4, %esi
	callq	calloc
	movq	%rax, %rbx
	movl	%ebp, (%rbx)
	movl	$40, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_CArray_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_Cbyte_Mclass, 24(%rax)
	movq	%rbx, 8(%rax)
	movl	$1, 16(%rax)
	movq	%r14, 32(%rax)
	movq	%rax, %rdi
	callq	*%r15
	testl	%eax, %eax
	sete	%al
	addq	$8, %rsp
	popq	%rbx
	popq	%r14
	popq	%r15
	popq	%rbp
	ret
.Ltmp545:
	.size	_Pshadow_Pstandard_CString_MisEmpty, .Ltmp545-_Pshadow_Pstandard_CString_MisEmpty
	.cfi_endproc

	.globl	_Pshadow_Pstandard_CString_Miterator
	.align	16, 0x90
	.type	_Pshadow_Pstandard_CString_Miterator,@function
_Pshadow_Pstandard_CString_Miterator:   # @_Pshadow_Pstandard_CString_Miterator
# BB#0:
	pushq	%rbx
	movq	%rdi, %rbx
	movl	$24, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_CString_IStringIterator_Mclass, (%rax)
	movq	%rbx, 8(%rax)
	movl	$0, 16(%rax)
	popq	%rbx
	ret
.Ltmp546:
	.size	_Pshadow_Pstandard_CString_Miterator, .Ltmp546-_Pshadow_Pstandard_CString_Miterator

	.globl	_Pshadow_Pstandard_CString_Mequals_Pshadow_Pstandard_CString
	.align	16, 0x90
	.type	_Pshadow_Pstandard_CString_Mequals_Pshadow_Pstandard_CString,@function
_Pshadow_Pstandard_CString_Mequals_Pshadow_Pstandard_CString: # @_Pshadow_Pstandard_CString_Mequals_Pshadow_Pstandard_CString
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp554:
	.cfi_def_cfa_offset 16
	pushq	%r15
.Ltmp555:
	.cfi_def_cfa_offset 24
	pushq	%r14
.Ltmp556:
	.cfi_def_cfa_offset 32
	pushq	%r13
.Ltmp557:
	.cfi_def_cfa_offset 40
	pushq	%r12
.Ltmp558:
	.cfi_def_cfa_offset 48
	pushq	%rbx
.Ltmp559:
	.cfi_def_cfa_offset 56
	pushq	%rax
.Ltmp560:
	.cfi_def_cfa_offset 64
.Ltmp561:
	.cfi_offset %rbx, -56
.Ltmp562:
	.cfi_offset %r12, -48
.Ltmp563:
	.cfi_offset %r13, -40
.Ltmp564:
	.cfi_offset %r14, -32
.Ltmp565:
	.cfi_offset %r15, -24
.Ltmp566:
	.cfi_offset %rbp, -16
	movq	%rsi, %r14
	movq	%rdi, %r12
	movq	8(%r12), %r15
	movl	16(%r12), %ebx
	movl	$1, %edi
	movl	$4, %esi
	callq	calloc
	movq	%rax, %rbp
	movl	%ebx, (%rbp)
	movl	$40, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_CArray_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_Cbyte_Mclass, 24(%rax)
	movq	%rbp, 8(%rax)
	movl	$1, 16(%rax)
	movq	%r15, 32(%rax)
	movq	(%rax), %rax
	movq	160(%rax), %r13
	movl	$1, %edi
	movl	$4, %esi
	callq	calloc
	movq	%rax, %rbp
	movl	%ebx, (%rbp)
	movl	$40, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_CArray_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_Cbyte_Mclass, 24(%rax)
	movq	%rbp, 8(%rax)
	movl	$1, 16(%rax)
	movq	%r15, 32(%rax)
	movq	%rax, %rdi
	callq	*%r13
	movl	%eax, 4(%rsp)           # 4-byte Spill
	movq	8(%r14), %r13
	movl	16(%r14), %ebx
	movl	$1, %edi
	movl	$4, %esi
	callq	calloc
	movq	%rax, %rbp
	movl	%ebx, (%rbp)
	movl	$40, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_CArray_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_Cbyte_Mclass, 24(%rax)
	movq	%rbp, 8(%rax)
	movl	$1, 16(%rax)
	movq	%r13, 32(%rax)
	movq	(%rax), %rax
	movq	160(%rax), %r15
	movl	$1, %edi
	movl	$4, %esi
	callq	calloc
	movq	%rax, %rbp
	movl	%ebx, (%rbp)
	movl	$40, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_CArray_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_Cbyte_Mclass, 24(%rax)
	movq	%rbp, 8(%rax)
	movl	$1, 16(%rax)
	movq	%r13, 32(%rax)
	movq	%rax, %rdi
	callq	*%r15
	movl	%eax, %ecx
	xorb	%al, %al
	cmpl	%ecx, 4(%rsp)           # 4-byte Folded Reload
	je	.LBB154_2
# BB#1:                                 # %_label4
	movq	%r12, %rdi
	movq	%r14, %rsi
	callq	_Pshadow_Pstandard_CString_Mcompare_Pshadow_Pstandard_CString
	testl	%eax, %eax
	sete	%al
.LBB154_2:                              # %_label3
	addq	$8, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	ret
.Ltmp567:
	.size	_Pshadow_Pstandard_CString_Mequals_Pshadow_Pstandard_CString, .Ltmp567-_Pshadow_Pstandard_CString_Mequals_Pshadow_Pstandard_CString
	.cfi_endproc

	.globl	_Pshadow_Pstandard_CString_MtoLowerCase
	.align	16, 0x90
	.type	_Pshadow_Pstandard_CString_MtoLowerCase,@function
_Pshadow_Pstandard_CString_MtoLowerCase: # @_Pshadow_Pstandard_CString_MtoLowerCase
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp573:
	.cfi_def_cfa_offset 16
	pushq	%r15
.Ltmp574:
	.cfi_def_cfa_offset 24
	pushq	%r14
.Ltmp575:
	.cfi_def_cfa_offset 32
	pushq	%rbx
.Ltmp576:
	.cfi_def_cfa_offset 40
	pushq	%rax
.Ltmp577:
	.cfi_def_cfa_offset 48
.Ltmp578:
	.cfi_offset %rbx, -40
.Ltmp579:
	.cfi_offset %r14, -32
.Ltmp580:
	.cfi_offset %r15, -24
.Ltmp581:
	.cfi_offset %rbp, -16
	movq	%rdi, %rbp
	movl	$24, %edi
	callq	malloc
	movq	%rax, %rbx
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rbx)
	movq	$_Pshadow_Pstandard_CString_IStringIterator_Mclass, (%rbx)
	movq	%rbp, 8(%rbx)
	movl	$0, 16(%rbx)
	movl	_Pshadow_Pstandard_CMutableString_Mclass+52(%rip), %edi
	callq	malloc
	movq	%rax, %r14
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%r14)
	movq	$_Pshadow_Pstandard_CMutableString_Mclass, (%r14)
	movl	$10, %edi
	movl	$1, %esi
	callq	calloc
	movq	%rax, 8(%r14)
	movl	$10, 16(%r14)
	movl	$0, 24(%r14)
	jmp	.LBB155_2
	.align	16, 0x90
.LBB155_1:                              # %_label5
                                        #   in Loop: Header=BB155_2 Depth=1
	movq	112(%rcx), %r15
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*120(%rax)
	movl	%eax, %ebp
	movl	$16, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_Ccode_Mclass, (%rax)
	leal	32(%rbp), %ecx
	leal	-65(%rbp), %edx
	cmpl	$26, %edx
	cmovael	%ebp, %ecx
	movq	$_Pshadow_Pstandard_Ccode_Mclass, (%rax)
	movl	%ecx, 8(%rax)
	movq	%r14, %rdi
	movq	%rax, %rsi
	callq	*%r15
.LBB155_2:                              # %_label5
                                        # =>This Inner Loop Header: Depth=1
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*112(%rax)
	movq	(%r14), %rcx
	testb	$1, %al
	jne	.LBB155_1
# BB#3:                                 # %_label7
	movq	%r14, %rdi
	callq	*104(%rcx)
	addq	$8, %rsp
	popq	%rbx
	popq	%r14
	popq	%r15
	popq	%rbp
	ret
.Ltmp582:
	.size	_Pshadow_Pstandard_CString_MtoLowerCase, .Ltmp582-_Pshadow_Pstandard_CString_MtoLowerCase
	.cfi_endproc

	.globl	_Pshadow_Pstandard_CString_Mcompare_Pshadow_Pstandard_CString
	.align	16, 0x90
	.type	_Pshadow_Pstandard_CString_Mcompare_Pshadow_Pstandard_CString,@function
_Pshadow_Pstandard_CString_Mcompare_Pshadow_Pstandard_CString: # @_Pshadow_Pstandard_CString_Mcompare_Pshadow_Pstandard_CString
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp590:
	.cfi_def_cfa_offset 16
	pushq	%r15
.Ltmp591:
	.cfi_def_cfa_offset 24
	pushq	%r14
.Ltmp592:
	.cfi_def_cfa_offset 32
	pushq	%r13
.Ltmp593:
	.cfi_def_cfa_offset 40
	pushq	%r12
.Ltmp594:
	.cfi_def_cfa_offset 48
	pushq	%rbx
.Ltmp595:
	.cfi_def_cfa_offset 56
	pushq	%rax
.Ltmp596:
	.cfi_def_cfa_offset 64
.Ltmp597:
	.cfi_offset %rbx, -56
.Ltmp598:
	.cfi_offset %r12, -48
.Ltmp599:
	.cfi_offset %r13, -40
.Ltmp600:
	.cfi_offset %r14, -32
.Ltmp601:
	.cfi_offset %r15, -24
.Ltmp602:
	.cfi_offset %rbp, -16
	movq	%rdi, (%rsp)            # 8-byte Spill
	xorl	%ebp, %ebp
	.align	16, 0x90
.LBB156_1:                              # %_label9
                                        # =>This Inner Loop Header: Depth=1
	movq	8(%rdi), %r12
	movl	16(%rdi), %r13d
	movl	$1, %edi
	movq	%rsi, %r15
	movl	$4, %esi
	callq	calloc
	movq	%rax, %rbx
	movl	%r13d, (%rbx)
	movl	$40, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_CArray_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_Cbyte_Mclass, 24(%rax)
	movq	%rbx, 8(%rax)
	movl	$1, 16(%rax)
	movq	%r12, 32(%rax)
	movq	(%rax), %rax
	movq	160(%rax), %r14
	movl	$1, %edi
	movl	$4, %esi
	callq	calloc
	movq	%rax, %rbx
	movl	%r13d, (%rbx)
	movl	$40, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_CArray_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_Cbyte_Mclass, 24(%rax)
	movq	%rbx, 8(%rax)
	movl	$1, 16(%rax)
	movq	%r12, 32(%rax)
	movq	%rax, %rdi
	callq	*%r14
	cmpl	%eax, %ebp
	jge	.LBB156_6
# BB#2:                                 # %_label14
                                        #   in Loop: Header=BB156_1 Depth=1
	movq	8(%r15), %r12
	movl	16(%r15), %r13d
	movl	$1, %edi
	movl	$4, %esi
	callq	calloc
	movq	%rax, %rbx
	movl	%r13d, (%rbx)
	movl	$40, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_CArray_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_Cbyte_Mclass, 24(%rax)
	movq	%rbx, 8(%rax)
	movl	$1, 16(%rax)
	movq	%r12, 32(%rax)
	movq	(%rax), %rax
	movq	160(%rax), %r14
	movl	$1, %edi
	movl	$4, %esi
	callq	calloc
	movq	%rax, %rbx
	movl	%r13d, (%rbx)
	movl	$40, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_CArray_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_Cbyte_Mclass, 24(%rax)
	movq	%rbx, 8(%rax)
	movl	$1, 16(%rax)
	movq	%r12, 32(%rax)
	movq	%rax, %rdi
	callq	*%r14
	cmpl	%eax, %ebp
	jge	.LBB156_6
# BB#3:                                 # %_label8
                                        #   in Loop: Header=BB156_1 Depth=1
	movslq	%ebp, %rax
	movq	8(%r15), %rcx
	movb	(%rcx,%rax), %cl
	movq	(%rsp), %rdi            # 8-byte Reload
	movq	8(%rdi), %rdx
	movb	(%rdx,%rax), %al
	incl	%ebp
	subb	%cl, %al
	movq	%r15, %rsi
	je	.LBB156_1
# BB#4:                                 # %_label11
	movsbl	%al, %eax
	jmp	.LBB156_5
.LBB156_6:                              # %_label10
	movq	(%rsp), %rax            # 8-byte Reload
	movq	8(%rax), %r12
	movl	16(%rax), %ebp
	movl	$1, %edi
	movl	$4, %esi
	callq	calloc
	movq	%rax, %rbx
	movl	%ebp, (%rbx)
	movl	$40, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_CArray_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_Cbyte_Mclass, 24(%rax)
	movq	%rbx, 8(%rax)
	movl	$1, 16(%rax)
	movq	%r12, 32(%rax)
	movq	(%rax), %rax
	movq	160(%rax), %r14
	movl	$1, %edi
	movl	$4, %esi
	callq	calloc
	movq	%rax, %rbx
	movl	%ebp, (%rbx)
	movl	$40, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_CArray_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_Cbyte_Mclass, 24(%rax)
	movq	%rbx, 8(%rax)
	movl	$1, 16(%rax)
	movq	%r12, 32(%rax)
	movq	%rax, %rdi
	callq	*%r14
	movl	%eax, %r12d
	movq	8(%r15), %r13
	movl	16(%r15), %ebp
	movl	$1, %edi
	movl	$4, %esi
	callq	calloc
	movq	%rax, %rbx
	movl	%ebp, (%rbx)
	movl	$40, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_CArray_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_Cbyte_Mclass, 24(%rax)
	movq	%rbx, 8(%rax)
	movl	$1, 16(%rax)
	movq	%r13, 32(%rax)
	movq	(%rax), %rax
	movq	160(%rax), %r14
	movl	$1, %edi
	movl	$4, %esi
	callq	calloc
	movq	%rax, %rbx
	movl	%ebp, (%rbx)
	movl	$40, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_CArray_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_Cbyte_Mclass, 24(%rax)
	movq	%rbx, 8(%rax)
	movl	$1, 16(%rax)
	movq	%r13, 32(%rax)
	movq	%rax, %rdi
	callq	*%r14
	subl	%eax, %r12d
	movl	%r12d, %eax
.LBB156_5:                              # %_label11
	addq	$8, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	ret
.Ltmp603:
	.size	_Pshadow_Pstandard_CString_Mcompare_Pshadow_Pstandard_CString, .Ltmp603-_Pshadow_Pstandard_CString_Mcompare_Pshadow_Pstandard_CString
	.cfi_endproc

	.globl	_Pshadow_Pstandard_CString_Msubstring_Pshadow_Pstandard_Cint_Pshadow_Pstandard_Cint
	.align	16, 0x90
	.type	_Pshadow_Pstandard_CString_Msubstring_Pshadow_Pstandard_Cint_Pshadow_Pstandard_Cint,@function
_Pshadow_Pstandard_CString_Msubstring_Pshadow_Pstandard_Cint_Pshadow_Pstandard_Cint: # @_Pshadow_Pstandard_CString_Msubstring_Pshadow_Pstandard_Cint_Pshadow_Pstandard_Cint
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp611:
	.cfi_def_cfa_offset 16
	pushq	%r15
.Ltmp612:
	.cfi_def_cfa_offset 24
	pushq	%r14
.Ltmp613:
	.cfi_def_cfa_offset 32
	pushq	%r13
.Ltmp614:
	.cfi_def_cfa_offset 40
	pushq	%r12
.Ltmp615:
	.cfi_def_cfa_offset 48
	pushq	%rbx
.Ltmp616:
	.cfi_def_cfa_offset 56
	pushq	%rax
.Ltmp617:
	.cfi_def_cfa_offset 64
.Ltmp618:
	.cfi_offset %rbx, -56
.Ltmp619:
	.cfi_offset %r12, -48
.Ltmp620:
	.cfi_offset %r13, -40
.Ltmp621:
	.cfi_offset %r14, -32
.Ltmp622:
	.cfi_offset %r15, -24
.Ltmp623:
	.cfi_offset %rbp, -16
	movl	%edx, 4(%rsp)           # 4-byte Spill
	movl	%esi, (%rsp)            # 4-byte Spill
	movq	%rdi, %r14
	movl	$32, %edi
	callq	malloc
	movq	%rax, %rbx
	movq	8(%r14), %r13
	movl	16(%r14), %r15d
	movl	$1, %edi
	movl	$4, %esi
	callq	calloc
	movq	%rax, %rbp
	movl	%r15d, (%rbp)
	movl	$40, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_CArray_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_Cbyte_Mclass, 24(%rax)
	movq	%rbp, 8(%rax)
	movl	$1, 16(%rax)
	movq	%r13, 32(%rax)
	movq	(%rax), %rax
	movq	168(%rax), %r12
	movl	$1, %edi
	movl	$4, %esi
	callq	calloc
	movq	%rax, %rbp
	movl	%r15d, (%rbp)
	movl	$40, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_CArray_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_Cbyte_Mclass, 24(%rax)
	movq	%rbp, 8(%rax)
	movl	$1, 16(%rax)
	movq	%r13, 32(%rax)
	movq	%rax, %rdi
	movl	(%rsp), %esi            # 4-byte Reload
	movl	4(%rsp), %edx           # 4-byte Reload
	callq	*%r12
	movq	8(%rax), %rcx
	movq	32(%rax), %rax
	movl	(%rcx), %edx
	movb	24(%r14), %cl
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rbx)
	movq	$_Pshadow_Pstandard_CString_Mclass, (%rbx)
	movl	%edx, 16(%rbx)
	movq	%rax, 8(%rbx)
	movb	%cl, 24(%rbx)
	movq	%rbx, %rax
	addq	$8, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	ret
.Ltmp624:
	.size	_Pshadow_Pstandard_CString_Msubstring_Pshadow_Pstandard_Cint_Pshadow_Pstandard_Cint, .Ltmp624-_Pshadow_Pstandard_CString_Msubstring_Pshadow_Pstandard_Cint_Pshadow_Pstandard_Cint
	.cfi_endproc

	.globl	_Pshadow_Pstandard_CString_MgetChar_Pshadow_Pstandard_Cint
	.align	16, 0x90
	.type	_Pshadow_Pstandard_CString_MgetChar_Pshadow_Pstandard_Cint,@function
_Pshadow_Pstandard_CString_MgetChar_Pshadow_Pstandard_Cint: # @_Pshadow_Pstandard_CString_MgetChar_Pshadow_Pstandard_Cint
# BB#0:
	movslq	%esi, %rax
	movq	8(%rdi), %rcx
	movb	(%rcx,%rax), %al
	ret
.Ltmp625:
	.size	_Pshadow_Pstandard_CString_MgetChar_Pshadow_Pstandard_Cint, .Ltmp625-_Pshadow_Pstandard_CString_MgetChar_Pshadow_Pstandard_Cint

	.globl	_Pshadow_Pstandard_CString_MtoString
	.align	16, 0x90
	.type	_Pshadow_Pstandard_CString_MtoString,@function
_Pshadow_Pstandard_CString_MtoString:   # @_Pshadow_Pstandard_CString_MtoString
# BB#0:
	movq	%rdi, %rax
	ret
.Ltmp626:
	.size	_Pshadow_Pstandard_CString_MtoString, .Ltmp626-_Pshadow_Pstandard_CString_MtoString

	.globl	_Pshadow_Pstandard_CString_Mchars
	.align	16, 0x90
	.type	_Pshadow_Pstandard_CString_Mchars,@function
_Pshadow_Pstandard_CString_Mchars:      # @_Pshadow_Pstandard_CString_Mchars
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp632:
	.cfi_def_cfa_offset 16
	pushq	%r15
.Ltmp633:
	.cfi_def_cfa_offset 24
	pushq	%r14
.Ltmp634:
	.cfi_def_cfa_offset 32
	pushq	%rbx
.Ltmp635:
	.cfi_def_cfa_offset 40
	pushq	%rax
.Ltmp636:
	.cfi_def_cfa_offset 48
.Ltmp637:
	.cfi_offset %rbx, -40
.Ltmp638:
	.cfi_offset %r14, -32
.Ltmp639:
	.cfi_offset %r15, -24
.Ltmp640:
	.cfi_offset %rbp, -16
	movq	8(%rdi), %r14
	movl	16(%rdi), %ebp
	movl	$1, %edi
	movl	$4, %esi
	callq	calloc
	movq	%rax, %rbx
	movl	%ebp, (%rbx)
	movl	$40, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_CArray_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_Cbyte_Mclass, 24(%rax)
	movq	%rbx, 8(%rax)
	movl	$1, 16(%rax)
	movq	%r14, 32(%rax)
	movq	(%rax), %rax
	movq	64(%rax), %r15
	movl	$1, %edi
	movl	$4, %esi
	callq	calloc
	movq	%rax, %rbx
	movl	%ebp, (%rbx)
	movl	$40, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_CArray_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_Cbyte_Mclass, 24(%rax)
	movq	%rbx, 8(%rax)
	movl	$1, 16(%rax)
	movq	%r14, 32(%rax)
	movq	%rax, %rdi
	callq	*%r15
	movq	8(%rax), %rcx
	movq	32(%rax), %rax
	movl	(%rcx), %edx
	addq	$8, %rsp
	popq	%rbx
	popq	%r14
	popq	%r15
	popq	%rbp
	ret
.Ltmp641:
	.size	_Pshadow_Pstandard_CString_Mchars, .Ltmp641-_Pshadow_Pstandard_CString_Mchars
	.cfi_endproc

	.globl	_Pshadow_Pstandard_CString_Mcreate
	.align	16, 0x90
	.type	_Pshadow_Pstandard_CString_Mcreate,@function
_Pshadow_Pstandard_CString_Mcreate:     # @_Pshadow_Pstandard_CString_Mcreate
# BB#0:
	pushq	%rbx
	movq	%rdi, %rbx
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rbx)
	movq	$_Pshadow_Pstandard_CString_Mclass, (%rbx)
	movb	$1, 24(%rbx)
	xorl	%edi, %edi
	movl	$1, %esi
	callq	calloc
	movq	%rax, 8(%rbx)
	movl	$0, 16(%rbx)
	movq	%rbx, %rax
	popq	%rbx
	ret
.Ltmp642:
	.size	_Pshadow_Pstandard_CString_Mcreate, .Ltmp642-_Pshadow_Pstandard_CString_Mcreate

	.globl	_Pshadow_Pstandard_CString_Mcreate_Pshadow_Pstandard_Cbyte_A1
	.align	16, 0x90
	.type	_Pshadow_Pstandard_CString_Mcreate_Pshadow_Pstandard_Cbyte_A1,@function
_Pshadow_Pstandard_CString_Mcreate_Pshadow_Pstandard_Cbyte_A1: # @_Pshadow_Pstandard_CString_Mcreate_Pshadow_Pstandard_Cbyte_A1
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp650:
	.cfi_def_cfa_offset 16
	pushq	%r15
.Ltmp651:
	.cfi_def_cfa_offset 24
	pushq	%r14
.Ltmp652:
	.cfi_def_cfa_offset 32
	pushq	%r13
.Ltmp653:
	.cfi_def_cfa_offset 40
	pushq	%r12
.Ltmp654:
	.cfi_def_cfa_offset 48
	pushq	%rbx
.Ltmp655:
	.cfi_def_cfa_offset 56
	subq	$40, %rsp
.Ltmp656:
	.cfi_def_cfa_offset 96
.Ltmp657:
	.cfi_offset %rbx, -56
.Ltmp658:
	.cfi_offset %r12, -48
.Ltmp659:
	.cfi_offset %r13, -40
.Ltmp660:
	.cfi_offset %r14, -32
.Ltmp661:
	.cfi_offset %r15, -24
.Ltmp662:
	.cfi_offset %rbp, -16
	movl	%edx, %r12d
	movq	%rsi, %r14
	movq	%rdi, %rbp
	movq	%rbp, 8(%rsp)           # 8-byte Spill
	movl	%r12d, 32(%rsp)
	movq	%r14, 24(%rsp)
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rbp)
	movq	$_Pshadow_Pstandard_CString_Mclass, (%rbp)
	movb	$1, 24(%rbp)
	xorl	%ebx, %ebx
	xorl	%edi, %edi
	movl	$1, %esi
	callq	calloc
	movq	%rax, 8(%rbp)
	movl	$0, 16(%rbp)
	movl	$1, %edi
	movl	$4, %esi
	callq	calloc
	movq	%rax, %r15
	movl	%r12d, (%r15)
	movl	$40, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_CArray_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_Cbyte_Mclass, 24(%rax)
	movq	%r15, 8(%rax)
	movl	$1, 16(%rax)
	movq	%r14, 32(%rax)
	movq	(%rax), %rax
	movq	160(%rax), %rax
	movq	%rax, 16(%rsp)          # 8-byte Spill
	movl	$1, %edi
	movl	$4, %esi
	callq	calloc
	movq	%rax, %r15
	movl	%r12d, (%r15)
	movl	%r12d, %r13d
	movl	$40, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_CArray_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_Cbyte_Mclass, 24(%rax)
	movq	%r15, 8(%rax)
	movl	$1, 16(%rax)
	movq	%r14, 32(%rax)
	movq	%r14, %r15
	movq	%rax, %rdi
	callq	*16(%rsp)               # 8-byte Folded Reload
	movl	%eax, %r14d
	movl	%r14d, %edi
	movl	$1, %esi
	callq	calloc
	movb	$0, 16(%rsp)            # 1-byte Folded Spill
	movl	%r14d, 16(%rbp)
	movq	%rax, 8(%rbp)
	movq	24(%rsp), %r14
	jmp	.LBB162_2
	.align	16, 0x90
.LBB162_1:                              # %_label16
                                        #   in Loop: Header=BB162_2 Depth=1
	movslq	%ebx, %rax
	movb	(%r14,%rax), %cl
	movq	8(%rsp), %rdx           # 8-byte Reload
	movq	8(%rdx), %rdx
	movb	%cl, (%rdx,%rax)
	movb	16(%rsp), %cl           # 1-byte Reload
	orb	(%r14,%rax), %cl
	movb	%cl, 16(%rsp)           # 1-byte Spill
	incl	%ebx
.LBB162_2:                              # %_label17
                                        # =>This Inner Loop Header: Depth=1
	movl	$1, %edi
	movl	$4, %esi
	callq	calloc
	movq	%rax, %rbp
	movl	%r13d, (%rbp)
	movl	$40, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_CArray_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_Cbyte_Mclass, 24(%rax)
	movq	%rbp, 8(%rax)
	movl	$1, 16(%rax)
	movq	%r15, 32(%rax)
	movq	(%rax), %rax
	movq	160(%rax), %r12
	movl	$1, %edi
	movl	$4, %esi
	callq	calloc
	movq	%rax, %rbp
	movl	%r13d, (%rbp)
	movl	$40, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_CArray_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_Cbyte_Mclass, 24(%rax)
	movq	%rbp, 8(%rax)
	movl	$1, 16(%rax)
	movq	%r15, 32(%rax)
	movq	%rax, %rdi
	callq	*%r12
	cmpl	%eax, %ebx
	jl	.LBB162_1
# BB#3:                                 # %_label18
	cmpb	$0, 16(%rsp)            # 1-byte Folded Reload
	movq	8(%rsp), %rax           # 8-byte Reload
	sets	24(%rax)
	addq	$40, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	ret
.Ltmp663:
	.size	_Pshadow_Pstandard_CString_Mcreate_Pshadow_Pstandard_Cbyte_A1, .Ltmp663-_Pshadow_Pstandard_CString_Mcreate_Pshadow_Pstandard_Cbyte_A1
	.cfi_endproc

	.globl	_Pshadow_Pstandard_CString_Mcreate_Pshadow_Pstandard_Ccode_A1
	.align	16, 0x90
	.type	_Pshadow_Pstandard_CString_Mcreate_Pshadow_Pstandard_Ccode_A1,@function
_Pshadow_Pstandard_CString_Mcreate_Pshadow_Pstandard_Ccode_A1: # @_Pshadow_Pstandard_CString_Mcreate_Pshadow_Pstandard_Ccode_A1
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp671:
	.cfi_def_cfa_offset 16
	pushq	%r15
.Ltmp672:
	.cfi_def_cfa_offset 24
	pushq	%r14
.Ltmp673:
	.cfi_def_cfa_offset 32
	pushq	%r13
.Ltmp674:
	.cfi_def_cfa_offset 40
	pushq	%r12
.Ltmp675:
	.cfi_def_cfa_offset 48
	pushq	%rbx
.Ltmp676:
	.cfi_def_cfa_offset 56
	subq	$40, %rsp
.Ltmp677:
	.cfi_def_cfa_offset 96
.Ltmp678:
	.cfi_offset %rbx, -56
.Ltmp679:
	.cfi_offset %r12, -48
.Ltmp680:
	.cfi_offset %r13, -40
.Ltmp681:
	.cfi_offset %r14, -32
.Ltmp682:
	.cfi_offset %r15, -24
.Ltmp683:
	.cfi_offset %rbp, -16
	movl	%edx, %ebx
	movq	%rsi, %r15
	movq	%rdi, %rbp
	movq	%rbp, (%rsp)            # 8-byte Spill
	movl	%ebx, 32(%rsp)
	movq	%r15, 24(%rsp)
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rbp)
	movq	$_Pshadow_Pstandard_CString_Mclass, (%rbp)
	movb	$1, 24(%rbp)
	xorl	%r12d, %r12d
	xorl	%edi, %edi
	movl	$1, %esi
	callq	calloc
	movq	%rax, 8(%rbp)
	movl	$0, 16(%rbp)
	movl	$1, %edi
	movl	$4, %esi
	callq	calloc
	movq	%rax, %rbp
	movl	%ebx, (%rbp)
	movl	$40, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_CArray_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_Ccode_Mclass, 24(%rax)
	movq	%rbp, 8(%rax)
	movl	$1, 16(%rax)
	movq	%r15, 32(%rax)
	movq	(%rax), %rax
	movq	160(%rax), %rax
	movq	%rax, 8(%rsp)           # 8-byte Spill
	movl	$1, %edi
	movl	$4, %esi
	callq	calloc
	movq	%rax, %rbp
	movl	%ebx, (%rbp)
	movl	%ebx, %r14d
	movl	$40, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_CArray_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_Ccode_Mclass, 24(%rax)
	movq	%rbp, 8(%rax)
	movl	$1, 16(%rax)
	movq	%r15, 32(%rax)
	movq	%r15, %r13
	movq	%rax, %rdi
	callq	*8(%rsp)                # 8-byte Folded Reload
	movl	%eax, %ebp
	movq	24(%rsp), %rax
	movq	%rax, 8(%rsp)           # 8-byte Spill
	jmp	.LBB163_7
	.align	16, 0x90
.LBB163_6:                              # %_label24
                                        #   in Loop: Header=BB163_7 Depth=1
	movl	%ebx, %r12d
	incl	%r12d
.LBB163_7:                              # %_label20
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB163_5 Depth 2
	movl	$1, %edi
	movl	$4, %esi
	callq	calloc
	movq	%rax, %rbx
	movl	%r14d, (%rbx)
	movl	$40, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_CArray_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_Ccode_Mclass, 24(%rax)
	movq	%rbx, 8(%rax)
	movl	$1, 16(%rax)
	movq	%r13, 32(%rax)
	movq	(%rax), %rax
	movq	160(%rax), %r15
	movl	$1, %edi
	movl	$4, %esi
	callq	calloc
	movq	%rax, %rbx
	movl	%r14d, (%rbx)
	movl	$40, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_CArray_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_Ccode_Mclass, 24(%rax)
	movq	%rbx, 8(%rax)
	movl	$1, 16(%rax)
	movq	%r13, 32(%rax)
	movq	%rax, %rdi
	callq	*%r15
	cmpl	%eax, %r12d
	jge	.LBB163_8
# BB#1:                                 # %_label19
                                        #   in Loop: Header=BB163_7 Depth=1
	movslq	%r12d, %rax
	movl	%r12d, %ebx
	movq	8(%rsp), %rcx           # 8-byte Reload
	movl	(%rcx,%rax,4), %ecx
	testl	%ecx, %ecx
	jns	.LBB163_3
# BB#2:                                 # %_label22
                                        #   in Loop: Header=BB163_7 Depth=1
	movl	$8, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_CException_Mclass, (%rax)
	movq	$.L_string286, 8(%rax)
	movq	$_Pshadow_Pstandard_CIllegalArgumentException_Mclass, (%rax)
	movq	%rax, %rdi
	callq	*_Pshadow_Pstandard_CIllegalArgumentException_Mclass+128(%rip)
	jmp	.LBB163_6
	.align	16, 0x90
.LBB163_3:                              # %_label23
                                        #   in Loop: Header=BB163_7 Depth=1
	cmpl	$128, %ecx
	movq	(%rsp), %rcx            # 8-byte Reload
	jl	.LBB163_6
# BB#4:                                 # %_label25
                                        #   in Loop: Header=BB163_7 Depth=1
	movb	$0, 24(%rcx)
	movq	8(%rsp), %rcx           # 8-byte Reload
	movl	(%rcx,%rax,4), %eax
	incl	%ebp
	movl	$16, %ecx
	cmpl	$2048, %eax             # imm = 0x800
	jl	.LBB163_6
	.align	16, 0x90
.LBB163_5:                              # %_label28
                                        #   Parent Loop BB163_7 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movl	$1, %edx
	shll	%cl, %edx
	addl	$5, %ecx
	incl	%ebp
	cmpl	%edx, %eax
	jge	.LBB163_5
	jmp	.LBB163_6
.LBB163_8:                              # %_label21
	movl	%ebp, %edi
	movl	$1, %esi
	callq	calloc
	movq	(%rsp), %r12            # 8-byte Reload
	movl	%ebp, 16(%r12)
	movq	%rax, 8(%r12)
	movl	$0, 20(%rsp)
	xorl	%r14d, %r14d
	movq	24(%rsp), %rbp
	movl	32(%rsp), %r15d
	jmp	.LBB163_20
	.align	16, 0x90
.LBB163_19:                             # %_label36
                                        #   in Loop: Header=BB163_20 Depth=1
	incl	%r14d
.LBB163_20:                             # %_label32
                                        # =>This Inner Loop Header: Depth=1
	movl	$1, %edi
	movl	$4, %esi
	callq	calloc
	movq	%rax, %rbx
	movl	%r15d, (%rbx)
	movl	$40, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_CArray_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_Ccode_Mclass, 24(%rax)
	movq	%rbx, 8(%rax)
	movl	$1, 16(%rax)
	movq	%rbp, 32(%rax)
	movq	(%rax), %rax
	movq	160(%rax), %r13
	movl	$1, %edi
	movl	$4, %esi
	callq	calloc
	movq	%rax, %rbx
	movl	%r15d, (%rbx)
	movl	$40, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_CArray_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_Ccode_Mclass, 24(%rax)
	movq	%rbx, 8(%rax)
	movl	$1, 16(%rax)
	movq	%rbp, 32(%rax)
	movq	%rax, %rdi
	callq	*%r13
	cmpl	%eax, %r14d
	jge	.LBB163_21
# BB#9:                                 # %_label31
                                        #   in Loop: Header=BB163_20 Depth=1
	movslq	%r14d, %rax
	movl	(%rbp,%rax,4), %ecx
	cmpl	$127, %ecx
	jg	.LBB163_11
# BB#10:                                # %_label34
                                        #   in Loop: Header=BB163_20 Depth=1
	movq	8(%r12), %rax
	movslq	20(%rsp), %rdx
	movb	%cl, (%rax,%rdx)
	incl	20(%rsp)
	jmp	.LBB163_19
	.align	16, 0x90
.LBB163_11:                             # %_label35
                                        #   in Loop: Header=BB163_20 Depth=1
	cmpl	$2047, %ecx             # imm = 0x7FF
	jg	.LBB163_13
# BB#12:                                # %_label37
                                        #   in Loop: Header=BB163_20 Depth=1
	movq	8(%r12), %rdx
	shrl	$6, %ecx
	andl	$31, %ecx
	orl	$192, %ecx
	movslq	20(%rsp), %rsi
	movb	%cl, (%rdx,%rsi)
	movl	(%rbp,%rax,4), %eax
	andl	$63, %eax
	orl	$128, %eax
	movq	8(%r12), %rcx
	movl	20(%rsp), %edx
	incl	%edx
	movslq	%edx, %rdx
	movb	%al, (%rcx,%rdx)
	addl	$2, 20(%rsp)
	jmp	.LBB163_19
	.align	16, 0x90
.LBB163_13:                             # %_label38
                                        #   in Loop: Header=BB163_20 Depth=1
	cmpl	$65535, %ecx            # imm = 0xFFFF
	jg	.LBB163_15
# BB#14:                                # %_label40
                                        #   in Loop: Header=BB163_20 Depth=1
	movq	8(%r12), %rdx
	shrl	$12, %ecx
	andl	$15, %ecx
	orl	$224, %ecx
	movslq	20(%rsp), %rsi
	movb	%cl, (%rdx,%rsi)
	movl	(%rbp,%rax,4), %ecx
	shrl	$6, %ecx
	andl	$63, %ecx
	orl	$128, %ecx
	movq	8(%r12), %rdx
	movl	20(%rsp), %esi
	incl	%esi
	movslq	%esi, %rsi
	movb	%cl, (%rdx,%rsi)
	movl	(%rbp,%rax,4), %eax
	andl	$63, %eax
	orl	$128, %eax
	movq	8(%r12), %rcx
	movl	20(%rsp), %edx
	addl	$2, %edx
	movslq	%edx, %rdx
	movb	%al, (%rcx,%rdx)
	addl	$3, 20(%rsp)
	jmp	.LBB163_19
.LBB163_15:                             # %_label41
                                        #   in Loop: Header=BB163_20 Depth=1
	cmpl	$2097151, %ecx          # imm = 0x1FFFFF
	jg	.LBB163_17
# BB#16:                                # %_label43
                                        #   in Loop: Header=BB163_20 Depth=1
	movq	8(%r12), %rdx
	shrl	$18, %ecx
	andl	$7, %ecx
	orl	$240, %ecx
	movslq	20(%rsp), %rsi
	movb	%cl, (%rdx,%rsi)
	movl	(%rbp,%rax,4), %ecx
	shrl	$12, %ecx
	andl	$63, %ecx
	orl	$128, %ecx
	movq	8(%r12), %rdx
	movl	20(%rsp), %esi
	incl	%esi
	movslq	%esi, %rsi
	movb	%cl, (%rdx,%rsi)
	movl	(%rbp,%rax,4), %ecx
	shrl	$6, %ecx
	andl	$63, %ecx
	orl	$128, %ecx
	movq	8(%r12), %rdx
	movl	20(%rsp), %esi
	addl	$2, %esi
	movslq	%esi, %rsi
	movb	%cl, (%rdx,%rsi)
	movl	(%rbp,%rax,4), %eax
	andl	$63, %eax
	orl	$128, %eax
	movq	8(%r12), %rcx
	movl	20(%rsp), %edx
	addl	$3, %edx
	movslq	%edx, %rdx
	movb	%al, (%rcx,%rdx)
	addl	$4, 20(%rsp)
	jmp	.LBB163_19
.LBB163_17:                             # %_label44
                                        #   in Loop: Header=BB163_20 Depth=1
	cmpl	$67108863, %ecx         # imm = 0x3FFFFFF
	jg	.LBB163_19
# BB#18:                                # %_label46
                                        #   in Loop: Header=BB163_20 Depth=1
	movq	8(%r12), %rdx
	shrl	$24, %ecx
	andl	$3, %ecx
	orl	$248, %ecx
	movslq	20(%rsp), %rsi
	movb	%cl, (%rdx,%rsi)
	movl	(%rbp,%rax,4), %ecx
	shrl	$18, %ecx
	andl	$63, %ecx
	orl	$128, %ecx
	movq	8(%r12), %rdx
	movl	20(%rsp), %esi
	incl	%esi
	movslq	%esi, %rsi
	movb	%cl, (%rdx,%rsi)
	movl	(%rbp,%rax,4), %ecx
	shrl	$12, %ecx
	andl	$63, %ecx
	orl	$128, %ecx
	movq	8(%r12), %rdx
	movl	20(%rsp), %esi
	addl	$2, %esi
	movslq	%esi, %rsi
	movb	%cl, (%rdx,%rsi)
	movl	(%rbp,%rax,4), %ecx
	shrl	$6, %ecx
	andl	$63, %ecx
	orl	$128, %ecx
	movq	8(%r12), %rdx
	movl	20(%rsp), %esi
	addl	$3, %esi
	movslq	%esi, %rsi
	movb	%cl, (%rdx,%rsi)
	movl	(%rbp,%rax,4), %eax
	andl	$63, %eax
	orl	$128, %eax
	movq	8(%r12), %rcx
	movl	20(%rsp), %edx
	addl	$4, %edx
	movslq	%edx, %rdx
	movb	%al, (%rcx,%rdx)
	addl	$5, 20(%rsp)
	jmp	.LBB163_19
.LBB163_21:                             # %_label33
	movq	%r12, %rax
	addq	$40, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	ret
.Ltmp684:
	.size	_Pshadow_Pstandard_CString_Mcreate_Pshadow_Pstandard_Ccode_A1, .Ltmp684-_Pshadow_Pstandard_CString_Mcreate_Pshadow_Pstandard_Ccode_A1
	.cfi_endproc

	.globl	_Pshadow_Pstandard_CString_Mcreate_Pshadow_Pstandard_CString
	.align	16, 0x90
	.type	_Pshadow_Pstandard_CString_Mcreate_Pshadow_Pstandard_CString,@function
_Pshadow_Pstandard_CString_Mcreate_Pshadow_Pstandard_CString: # @_Pshadow_Pstandard_CString_Mcreate_Pshadow_Pstandard_CString
# BB#0:
	pushq	%r14
	pushq	%rbx
	pushq	%rax
	movq	%rsi, %r14
	movq	%rdi, %rbx
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rbx)
	movq	$_Pshadow_Pstandard_CString_Mclass, (%rbx)
	movb	$1, 24(%rbx)
	xorl	%edi, %edi
	movl	$1, %esi
	callq	calloc
	movq	%rax, 8(%rbx)
	movl	$0, 16(%rbx)
	movq	8(%r14), %rax
	movl	16(%r14), %ecx
	movl	%ecx, 16(%rbx)
	movq	%rax, 8(%rbx)
	movb	24(%r14), %al
	movb	%al, 24(%rbx)
	movq	%rbx, %rax
	addq	$8, %rsp
	popq	%rbx
	popq	%r14
	ret
.Ltmp685:
	.size	_Pshadow_Pstandard_CString_Mcreate_Pshadow_Pstandard_CString, .Ltmp685-_Pshadow_Pstandard_CString_Mcreate_Pshadow_Pstandard_CString

	.globl	_Pshadow_Pstandard_CString_Mcreate_Pshadow_Pstandard_Cbyte_A1_Pshadow_Pstandard_Cboolean
	.align	16, 0x90
	.type	_Pshadow_Pstandard_CString_Mcreate_Pshadow_Pstandard_Cbyte_A1_Pshadow_Pstandard_Cboolean,@function
_Pshadow_Pstandard_CString_Mcreate_Pshadow_Pstandard_Cbyte_A1_Pshadow_Pstandard_Cboolean: # @_Pshadow_Pstandard_CString_Mcreate_Pshadow_Pstandard_Cbyte_A1_Pshadow_Pstandard_Cboolean
# BB#0:
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rdi)
	movq	$_Pshadow_Pstandard_CString_Mclass, (%rdi)
	movl	%edx, 16(%rdi)
	movq	%rsi, 8(%rdi)
	andl	$1, %ecx
	movb	%cl, 24(%rdi)
	movq	%rdi, %rax
	ret
.Ltmp686:
	.size	_Pshadow_Pstandard_CString_Mcreate_Pshadow_Pstandard_Cbyte_A1_Pshadow_Pstandard_Cboolean, .Ltmp686-_Pshadow_Pstandard_CString_Mcreate_Pshadow_Pstandard_Cbyte_A1_Pshadow_Pstandard_Cboolean

	.globl	_Pshadow_Pstandard_CString_Mconcatenate_Pshadow_Pstandard_CString
	.align	16, 0x90
	.type	_Pshadow_Pstandard_CString_Mconcatenate_Pshadow_Pstandard_CString,@function
_Pshadow_Pstandard_CString_Mconcatenate_Pshadow_Pstandard_CString: # @_Pshadow_Pstandard_CString_Mconcatenate_Pshadow_Pstandard_CString
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp694:
	.cfi_def_cfa_offset 16
	pushq	%r15
.Ltmp695:
	.cfi_def_cfa_offset 24
	pushq	%r14
.Ltmp696:
	.cfi_def_cfa_offset 32
	pushq	%r13
.Ltmp697:
	.cfi_def_cfa_offset 40
	pushq	%r12
.Ltmp698:
	.cfi_def_cfa_offset 48
	pushq	%rbx
.Ltmp699:
	.cfi_def_cfa_offset 56
	subq	$40, %rsp
.Ltmp700:
	.cfi_def_cfa_offset 96
.Ltmp701:
	.cfi_offset %rbx, -56
.Ltmp702:
	.cfi_offset %r12, -48
.Ltmp703:
	.cfi_offset %r13, -40
.Ltmp704:
	.cfi_offset %r14, -32
.Ltmp705:
	.cfi_offset %r15, -24
.Ltmp706:
	.cfi_offset %rbp, -16
	movq	%rsi, %r12
	movq	%r12, (%rsp)            # 8-byte Spill
	movq	%rdi, 8(%rsp)           # 8-byte Spill
	movq	8(%rdi), %r15
	movl	16(%rdi), %ebx
	movl	$1, %edi
	movl	$4, %esi
	callq	calloc
	movq	%rax, %rbp
	movl	%ebx, (%rbp)
	movl	$40, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_CArray_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_Cbyte_Mclass, 24(%rax)
	movq	%rbp, 8(%rax)
	movl	$1, 16(%rax)
	movq	%r15, 32(%rax)
	movq	(%rax), %rax
	movq	160(%rax), %r14
	movl	$1, %edi
	movl	$4, %esi
	callq	calloc
	movq	%rax, %rbp
	movl	%ebx, (%rbp)
	movl	$40, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_CArray_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_Cbyte_Mclass, 24(%rax)
	movq	%rbp, 8(%rax)
	movl	$1, 16(%rax)
	movq	%r15, 32(%rax)
	movq	%rax, %rdi
	callq	*%r14
	movl	%eax, %r15d
	movq	8(%r12), %r13
	movl	16(%r12), %ebx
	movl	$1, %edi
	movl	$4, %esi
	callq	calloc
	movq	%rax, %rbp
	movl	%ebx, (%rbp)
	movl	$40, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_CArray_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_Cbyte_Mclass, 24(%rax)
	movq	%rbp, 8(%rax)
	movl	$1, 16(%rax)
	movq	%r13, 32(%rax)
	movq	(%rax), %rax
	movq	160(%rax), %r14
	movl	$1, %edi
	movl	$4, %esi
	callq	calloc
	movq	%rax, %rbp
	movl	%ebx, (%rbp)
	movl	$40, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_CArray_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_Cbyte_Mclass, 24(%rax)
	movq	%rbp, 8(%rax)
	movl	$1, 16(%rax)
	movq	%r13, 32(%rax)
	movq	%rax, %rdi
	callq	*%r14
	movl	%eax, %ebp
	addl	%r15d, %ebp
	movl	%ebp, %edi
	movl	$1, %esi
	callq	calloc
	movq	8(%rsp), %r12           # 8-byte Reload
	xorl	%r13d, %r13d
	movl	%ebp, 32(%rsp)
	movq	%rax, 24(%rsp)
	movq	24(%rsp), %rax
	movq	%rax, 16(%rsp)          # 8-byte Spill
	jmp	.LBB166_2
	.align	16, 0x90
.LBB166_1:                              # %_label52
                                        #   in Loop: Header=BB166_2 Depth=1
	movslq	%r13d, %rax
	movq	8(%r12), %rcx
	movb	(%rcx,%rax), %cl
	movq	16(%rsp), %rdx          # 8-byte Reload
	movb	%cl, (%rdx,%rax)
	incl	%r13d
.LBB166_2:                              # %_label53
                                        # =>This Inner Loop Header: Depth=1
	movq	8(%r12), %r15
	movl	16(%r12), %ebx
	movl	$1, %edi
	movl	$4, %esi
	callq	calloc
	movq	%rax, %rbp
	movl	%ebx, (%rbp)
	movl	$40, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_CArray_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_Cbyte_Mclass, 24(%rax)
	movq	%rbp, 8(%rax)
	movl	$1, 16(%rax)
	movq	%r15, 32(%rax)
	movq	(%rax), %rax
	movq	160(%rax), %r14
	movl	$1, %edi
	movl	$4, %esi
	callq	calloc
	movq	%rax, %rbp
	movl	%ebx, (%rbp)
	movl	$40, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_CArray_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_Cbyte_Mclass, 24(%rax)
	movq	%rbp, 8(%rax)
	movl	$1, 16(%rax)
	movq	%r15, 32(%rax)
	movq	%rax, %rdi
	callq	*%r14
	cmpl	%eax, %r13d
	jl	.LBB166_1
# BB#3:                                 # %_label56.preheader
	movq	%r12, 8(%rsp)           # 8-byte Spill
	xorl	%r15d, %r15d
	jmp	.LBB166_5
	.align	16, 0x90
.LBB166_4:                              # %_label55
                                        #   in Loop: Header=BB166_5 Depth=1
	movslq	%r15d, %rax
	movq	8(%r12), %rcx
	movb	(%rcx,%rax), %r13b
	movq	8(%rsp), %rax           # 8-byte Reload
	movq	8(%rax), %rbx
	movl	16(%rax), %r14d
	movl	$1, %edi
	movl	$4, %esi
	callq	calloc
	movq	%rax, %rbp
	movl	%r14d, (%rbp)
	movl	$40, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_CArray_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_Cbyte_Mclass, 24(%rax)
	movq	%rbp, 8(%rax)
	movl	$1, 16(%rax)
	movq	%rbx, 32(%rax)
	movq	(%rax), %rax
	movq	160(%rax), %r12
	movl	$1, %edi
	movl	$4, %esi
	callq	calloc
	movq	%rax, %rbp
	movl	%r14d, (%rbp)
	movl	$40, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_CArray_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_Cbyte_Mclass, 24(%rax)
	movq	%rbp, 8(%rax)
	movl	$1, 16(%rax)
	movq	%rbx, 32(%rax)
	movq	%rax, %rdi
	callq	*%r12
	addl	%r15d, %eax
	incl	%r15d
	movslq	%eax, %rax
	movq	16(%rsp), %rcx          # 8-byte Reload
	movb	%r13b, (%rcx,%rax)
.LBB166_5:                              # %_label56
                                        # =>This Inner Loop Header: Depth=1
	movq	(%rsp), %rax            # 8-byte Reload
	movq	8(%rax), %r13
	movl	16(%rax), %ebx
	movq	%rax, %r12
	movl	$1, %edi
	movl	$4, %esi
	callq	calloc
	movq	%rax, %rbp
	movl	%ebx, (%rbp)
	movl	$40, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_CArray_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_Cbyte_Mclass, 24(%rax)
	movq	%rbp, 8(%rax)
	movl	$1, 16(%rax)
	movq	%r13, 32(%rax)
	movq	(%rax), %rax
	movq	160(%rax), %r14
	movl	$1, %edi
	movl	$4, %esi
	callq	calloc
	movq	%rax, %rbp
	movl	%ebx, (%rbp)
	movl	$40, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_CArray_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_Cbyte_Mclass, 24(%rax)
	movq	%rbp, 8(%rax)
	movl	$1, 16(%rax)
	movq	%r13, 32(%rax)
	movq	%rax, %rdi
	callq	*%r14
	cmpl	%eax, %r15d
	jl	.LBB166_4
# BB#6:                                 # %_label57
	movl	$32, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_CString_Mclass, (%rax)
	movq	8(%rsp), %rcx           # 8-byte Reload
	movb	24(%rcx), %dl
	xorb	%cl, %cl
	testb	%dl, %dl
	je	.LBB166_8
# BB#7:                                 # %_label59
	movb	24(%r12), %cl
.LBB166_8:                              # %_label58
	movq	24(%rsp), %rdx
	movl	32(%rsp), %esi
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_CString_Mclass, (%rax)
	movl	%esi, 16(%rax)
	movq	%rdx, 8(%rax)
	andb	$1, %cl
	movb	%cl, 24(%rax)
	addq	$40, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	ret
.Ltmp707:
	.size	_Pshadow_Pstandard_CString_Mconcatenate_Pshadow_Pstandard_CString, .Ltmp707-_Pshadow_Pstandard_CString_Mconcatenate_Pshadow_Pstandard_CString
	.cfi_endproc

	.globl	_Pshadow_Pstandard_CString_Msize
	.align	16, 0x90
	.type	_Pshadow_Pstandard_CString_Msize,@function
_Pshadow_Pstandard_CString_Msize:       # @_Pshadow_Pstandard_CString_Msize
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp713:
	.cfi_def_cfa_offset 16
	pushq	%r15
.Ltmp714:
	.cfi_def_cfa_offset 24
	pushq	%r14
.Ltmp715:
	.cfi_def_cfa_offset 32
	pushq	%rbx
.Ltmp716:
	.cfi_def_cfa_offset 40
	pushq	%rax
.Ltmp717:
	.cfi_def_cfa_offset 48
.Ltmp718:
	.cfi_offset %rbx, -40
.Ltmp719:
	.cfi_offset %r14, -32
.Ltmp720:
	.cfi_offset %r15, -24
.Ltmp721:
	.cfi_offset %rbp, -16
	movq	8(%rdi), %r14
	movl	16(%rdi), %ebp
	movl	$1, %edi
	movl	$4, %esi
	callq	calloc
	movq	%rax, %rbx
	movl	%ebp, (%rbx)
	movl	$40, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_CArray_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_Cbyte_Mclass, 24(%rax)
	movq	%rbx, 8(%rax)
	movl	$1, 16(%rax)
	movq	%r14, 32(%rax)
	movq	(%rax), %rax
	movq	160(%rax), %r15
	movl	$1, %edi
	movl	$4, %esi
	callq	calloc
	movq	%rax, %rbx
	movl	%ebp, (%rbx)
	movl	$40, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_CArray_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_Cbyte_Mclass, 24(%rax)
	movq	%rbx, 8(%rax)
	movl	$1, 16(%rax)
	movq	%r14, 32(%rax)
	movq	%rax, %rdi
	movq	%r15, %rax
	addq	$8, %rsp
	popq	%rbx
	popq	%r14
	popq	%r15
	popq	%rbp
	jmpq	*%rax  # TAILCALL
.Ltmp722:
	.size	_Pshadow_Pstandard_CString_Msize, .Ltmp722-_Pshadow_Pstandard_CString_Msize
	.cfi_endproc

	.globl	_Pshadow_Pstandard_CString_IStringIterator_MhasNext
	.align	16, 0x90
	.type	_Pshadow_Pstandard_CString_IStringIterator_MhasNext,@function
_Pshadow_Pstandard_CString_IStringIterator_MhasNext: # @_Pshadow_Pstandard_CString_IStringIterator_MhasNext
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp729:
	.cfi_def_cfa_offset 16
	pushq	%r15
.Ltmp730:
	.cfi_def_cfa_offset 24
	pushq	%r14
.Ltmp731:
	.cfi_def_cfa_offset 32
	pushq	%r12
.Ltmp732:
	.cfi_def_cfa_offset 40
	pushq	%rbx
.Ltmp733:
	.cfi_def_cfa_offset 48
.Ltmp734:
	.cfi_offset %rbx, -48
.Ltmp735:
	.cfi_offset %r12, -40
.Ltmp736:
	.cfi_offset %r14, -32
.Ltmp737:
	.cfi_offset %r15, -24
.Ltmp738:
	.cfi_offset %rbp, -16
	movl	16(%rdi), %r14d
	movq	8(%rdi), %rax
	movq	8(%rax), %r15
	movl	16(%rax), %ebp
	movl	$1, %edi
	movl	$4, %esi
	callq	calloc
	movq	%rax, %rbx
	movl	%ebp, (%rbx)
	movl	$40, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_CArray_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_Cbyte_Mclass, 24(%rax)
	movq	%rbx, 8(%rax)
	movl	$1, 16(%rax)
	movq	%r15, 32(%rax)
	movq	(%rax), %rax
	movq	160(%rax), %r12
	movl	$1, %edi
	movl	$4, %esi
	callq	calloc
	movq	%rax, %rbx
	movl	%ebp, (%rbx)
	movl	$40, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_CArray_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_Cbyte_Mclass, 24(%rax)
	movq	%rbx, 8(%rax)
	movl	$1, 16(%rax)
	movq	%r15, 32(%rax)
	movq	%rax, %rdi
	callq	*%r12
	cmpl	%eax, %r14d
	setl	%al
	popq	%rbx
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret
.Ltmp739:
	.size	_Pshadow_Pstandard_CString_IStringIterator_MhasNext, .Ltmp739-_Pshadow_Pstandard_CString_IStringIterator_MhasNext
	.cfi_endproc

	.globl	_Pshadow_Pstandard_CString_IStringIterator_Mnext
	.align	16, 0x90
	.type	_Pshadow_Pstandard_CString_IStringIterator_Mnext,@function
_Pshadow_Pstandard_CString_IStringIterator_Mnext: # @_Pshadow_Pstandard_CString_IStringIterator_Mnext
# BB#0:
	movslq	16(%rdi), %rsi
	movq	8(%rdi), %rax
	movq	8(%rax), %rax
	movsbl	(%rax,%rsi), %eax
	testl	%eax, %eax
	jns	.LBB169_7
# BB#1:                                 # %_label0
	cmpb	$-65, %al
	jg	.LBB169_2
# BB#8:                                 # %_label5.thread
	andl	$63, %eax
	jmp	.LBB169_7
.LBB169_2:
	xorl	%edx, %edx
	movb	$-64, %cl
	.align	16, 0x90
.LBB169_3:                              # %_label3
                                        # =>This Inner Loop Header: Depth=1
	incl	%edx
	sarb	%cl
	cmpb	%cl, %al
	jge	.LBB169_3
# BB#4:                                 # %_label5
	notb	%cl
	andb	%cl, %al
	movsbl	%al, %eax
	jmp	.LBB169_6
	.align	16, 0x90
.LBB169_5:                              # %_label6
                                        #   in Loop: Header=BB169_6 Depth=1
	incl	%esi
	movl	%esi, 16(%rdi)
	movslq	%esi, %r8
	movq	8(%rdi), %rcx
	movq	8(%rcx), %rcx
	movzbl	(%rcx,%r8), %ecx
	andl	$63, %ecx
	shll	$6, %eax
	orl	%ecx, %eax
	decl	%edx
.LBB169_6:                              # %_label6
                                        # =>This Inner Loop Header: Depth=1
	testl	%edx, %edx
	jg	.LBB169_5
.LBB169_7:                              # %_label2
	incl	%esi
	movl	%esi, 16(%rdi)
	ret
.Ltmp740:
	.size	_Pshadow_Pstandard_CString_IStringIterator_Mnext, .Ltmp740-_Pshadow_Pstandard_CString_IStringIterator_Mnext

	.globl	_Pshadow_Pstandard_CString_IStringIterator_Mcreate
	.align	16, 0x90
	.type	_Pshadow_Pstandard_CString_IStringIterator_Mcreate,@function
_Pshadow_Pstandard_CString_IStringIterator_Mcreate: # @_Pshadow_Pstandard_CString_IStringIterator_Mcreate
# BB#0:
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rdi)
	movq	$_Pshadow_Pstandard_CString_IStringIterator_Mclass, (%rdi)
	movq	%rsi, 8(%rdi)
	movl	$0, 16(%rdi)
	movq	%rdi, %rax
	ret
.Ltmp741:
	.size	_Pshadow_Pstandard_CString_IStringIterator_Mcreate, .Ltmp741-_Pshadow_Pstandard_CString_IStringIterator_Mcreate

	.globl	_Pshadow_Pstandard_CSystem_Mcreate
	.align	16, 0x90
	.type	_Pshadow_Pstandard_CSystem_Mcreate,@function
_Pshadow_Pstandard_CSystem_Mcreate:     # @_Pshadow_Pstandard_CSystem_Mcreate
# BB#0:
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rdi)
	movq	$_Pshadow_Pstandard_CSystem_Mclass, (%rdi)
	movq	%rdi, %rax
	ret
.Ltmp742:
	.size	_Pshadow_Pstandard_CSystem_Mcreate, .Ltmp742-_Pshadow_Pstandard_CSystem_Mcreate

	.globl	_Pshadow_Pstandard_Cubyte_Mdigit_Pshadow_Pstandard_Cubyte
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Cubyte_Mdigit_Pshadow_Pstandard_Cubyte,@function
_Pshadow_Pstandard_Cubyte_Mdigit_Pshadow_Pstandard_Cubyte: # @_Pshadow_Pstandard_Cubyte_Mdigit_Pshadow_Pstandard_Cubyte
# BB#0:
	movsbl	%sil, %eax
	cmpb	$9, %al
	ja	.LBB172_2
# BB#1:                                 # %_label0
	addl	$48, %eax
	ret
.LBB172_2:                              # %_label2
	addl	$87, %eax
	ret
.Ltmp743:
	.size	_Pshadow_Pstandard_Cubyte_Mdigit_Pshadow_Pstandard_Cubyte, .Ltmp743-_Pshadow_Pstandard_Cubyte_Mdigit_Pshadow_Pstandard_Cubyte

	.globl	_Pshadow_Pstandard_Cubyte_MtoString
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Cubyte_MtoString,@function
_Pshadow_Pstandard_Cubyte_MtoString:    # @_Pshadow_Pstandard_Cubyte_MtoString
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp750:
	.cfi_def_cfa_offset 16
	pushq	%r15
.Ltmp751:
	.cfi_def_cfa_offset 24
	pushq	%r14
.Ltmp752:
	.cfi_def_cfa_offset 32
	pushq	%r12
.Ltmp753:
	.cfi_def_cfa_offset 40
	pushq	%rbx
.Ltmp754:
	.cfi_def_cfa_offset 48
.Ltmp755:
	.cfi_offset %rbx, -48
.Ltmp756:
	.cfi_offset %r12, -40
.Ltmp757:
	.cfi_offset %r14, -32
.Ltmp758:
	.cfi_offset %r15, -24
.Ltmp759:
	.cfi_offset %rbp, -16
	movb	8(%rdi), %bl
	movl	_Pshadow_Pstandard_CMutableString_Mclass+52(%rip), %edi
	callq	malloc
	movq	%rax, %r14
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%r14)
	movq	$_Pshadow_Pstandard_CMutableString_Mclass, (%r14)
	movl	$10, %edi
	movl	$1, %esi
	callq	calloc
	movq	%rax, 8(%r14)
	movl	$10, 16(%r14)
	movl	$0, 24(%r14)
	movb	$10, %r15b
	.align	16, 0x90
.LBB173_1:                              # %_label3.i
                                        # =>This Inner Loop Header: Depth=1
	movq	(%r14), %rax
	movq	112(%rax), %r12
	movl	$16, %edi
	callq	malloc
	movq	%rax, %rcx
	movq	$_Pshadow_Pstandard_Ccode_Mclass, (%rcx)
	movzbl	%bl, %ebp
	imull	$205, %ebp, %ebx
	movq	$_Pshadow_Pstandard_Ccode_Mclass, (%rcx)
	shrl	$11, %ebx
	movb	%bl, %al
	mulb	%r15b
	movb	%bpl, %dl
	subb	%al, %dl
	movzbl	%dl, %eax
	orl	$48, %eax
	movl	%eax, 8(%rcx)
	movq	%r14, %rdi
	movq	%rcx, %rsi
	callq	*%r12
	cmpb	$9, %bpl
	ja	.LBB173_1
# BB#2:                                 # %_Pshadow_Pstandard_Cubyte_MtoString_Pshadow_Pstandard_Cubyte.exit
	movq	(%r14), %rax
	movq	%r14, %rdi
	callq	*152(%rax)
	movq	(%rax), %rcx
	movq	%rax, %rdi
	popq	%rbx
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	jmpq	*104(%rcx)  # TAILCALL
.Ltmp760:
	.size	_Pshadow_Pstandard_Cubyte_MtoString, .Ltmp760-_Pshadow_Pstandard_Cubyte_MtoString
	.cfi_endproc

	.globl	_Pshadow_Pstandard_Cubyte_MtoString_Pshadow_Pstandard_Cubyte
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Cubyte_MtoString_Pshadow_Pstandard_Cubyte,@function
_Pshadow_Pstandard_Cubyte_MtoString_Pshadow_Pstandard_Cubyte: # @_Pshadow_Pstandard_Cubyte_MtoString_Pshadow_Pstandard_Cubyte
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp767:
	.cfi_def_cfa_offset 16
	pushq	%r15
.Ltmp768:
	.cfi_def_cfa_offset 24
	pushq	%r14
.Ltmp769:
	.cfi_def_cfa_offset 32
	pushq	%r12
.Ltmp770:
	.cfi_def_cfa_offset 40
	pushq	%rbx
.Ltmp771:
	.cfi_def_cfa_offset 48
.Ltmp772:
	.cfi_offset %rbx, -48
.Ltmp773:
	.cfi_offset %r12, -40
.Ltmp774:
	.cfi_offset %r14, -32
.Ltmp775:
	.cfi_offset %r15, -24
.Ltmp776:
	.cfi_offset %rbp, -16
	movl	%esi, %r14d
	movb	8(%rdi), %bpl
	movl	_Pshadow_Pstandard_CMutableString_Mclass+52(%rip), %edi
	callq	malloc
	movq	%rax, %r12
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%r12)
	movq	$_Pshadow_Pstandard_CMutableString_Mclass, (%r12)
	movl	$10, %edi
	movl	$1, %esi
	callq	calloc
	movq	%rax, 8(%r12)
	movl	$10, 16(%r12)
	movl	$0, 24(%r12)
	movl	$48, %r15d
	.align	16, 0x90
.LBB174_1:                              # %_label3
                                        # =>This Inner Loop Header: Depth=1
	movq	(%r12), %rax
	movq	112(%rax), %rbx
	movl	$16, %edi
	callq	malloc
	movq	%rax, %rcx
	movq	$_Pshadow_Pstandard_Ccode_Mclass, (%rcx)
	movzbl	%bpl, %eax
                                        # kill: EAX<def> EAX<kill> AX<def>
	divb	%r14b
	movw	%ax, %bp
	shrw	$8, %ax
	movq	$_Pshadow_Pstandard_Ccode_Mclass, (%rcx)
	cmpb	$10, %al
	movl	$87, %edx
	cmovbl	%r15d, %edx
	movsbl	%al, %eax
	addl	%edx, %eax
	movl	%eax, 8(%rcx)
	movq	%r12, %rdi
	movq	%rcx, %rsi
	callq	*%rbx
	testb	%bpl, %bpl
	jne	.LBB174_1
# BB#2:                                 # %_label5
	movq	(%r12), %rax
	movq	%r12, %rdi
	callq	*152(%rax)
	movq	(%rax), %rcx
	movq	%rax, %rdi
	callq	*104(%rcx)
	popq	%rbx
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret
.Ltmp777:
	.size	_Pshadow_Pstandard_Cubyte_MtoString_Pshadow_Pstandard_Cubyte, .Ltmp777-_Pshadow_Pstandard_Cubyte_MtoString_Pshadow_Pstandard_Cubyte
	.cfi_endproc

	.globl	_Pshadow_Pstandard_Cubyte_Mcreate
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Cubyte_Mcreate,@function
_Pshadow_Pstandard_Cubyte_Mcreate:      # @_Pshadow_Pstandard_Cubyte_Mcreate
# BB#0:
	movq	$_Pshadow_Pstandard_Cubyte_Mclass, (%rdi)
	movq	%rdi, %rax
	ret
.Ltmp778:
	.size	_Pshadow_Pstandard_Cubyte_Mcreate, .Ltmp778-_Pshadow_Pstandard_Cubyte_Mcreate

	.globl	_Pshadow_Pstandard_Cuint_Mdigit_Pshadow_Pstandard_Cuint
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Cuint_Mdigit_Pshadow_Pstandard_Cuint,@function
_Pshadow_Pstandard_Cuint_Mdigit_Pshadow_Pstandard_Cuint: # @_Pshadow_Pstandard_Cuint_Mdigit_Pshadow_Pstandard_Cuint
# BB#0:
	movl	%esi, %eax
	cmpl	$9, %eax
	ja	.LBB176_2
# BB#1:                                 # %_label0
	addl	$48, %eax
	ret
.LBB176_2:                              # %_label2
	addl	$87, %eax
	ret
.Ltmp779:
	.size	_Pshadow_Pstandard_Cuint_Mdigit_Pshadow_Pstandard_Cuint, .Ltmp779-_Pshadow_Pstandard_Cuint_Mdigit_Pshadow_Pstandard_Cuint

	.globl	_Pshadow_Pstandard_Cuint_Mmin_Pshadow_Pstandard_Cuint
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Cuint_Mmin_Pshadow_Pstandard_Cuint,@function
_Pshadow_Pstandard_Cuint_Mmin_Pshadow_Pstandard_Cuint: # @_Pshadow_Pstandard_Cuint_Mmin_Pshadow_Pstandard_Cuint
# BB#0:                                 # %_label5
	movl	8(%rdi), %eax
	cmpl	%esi, %eax
	cmovael	%esi, %eax
	ret
.Ltmp780:
	.size	_Pshadow_Pstandard_Cuint_Mmin_Pshadow_Pstandard_Cuint, .Ltmp780-_Pshadow_Pstandard_Cuint_Mmin_Pshadow_Pstandard_Cuint

	.globl	_Pshadow_Pstandard_Cuint_Mmax_Pshadow_Pstandard_Cuint
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Cuint_Mmax_Pshadow_Pstandard_Cuint,@function
_Pshadow_Pstandard_Cuint_Mmax_Pshadow_Pstandard_Cuint: # @_Pshadow_Pstandard_Cuint_Mmax_Pshadow_Pstandard_Cuint
# BB#0:                                 # %_label8
	movl	8(%rdi), %eax
	cmpl	%esi, %eax
	cmovbel	%esi, %eax
	ret
.Ltmp781:
	.size	_Pshadow_Pstandard_Cuint_Mmax_Pshadow_Pstandard_Cuint, .Ltmp781-_Pshadow_Pstandard_Cuint_Mmax_Pshadow_Pstandard_Cuint

	.globl	_Pshadow_Pstandard_Cuint_Mhash
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Cuint_Mhash,@function
_Pshadow_Pstandard_Cuint_Mhash:         # @_Pshadow_Pstandard_Cuint_Mhash
# BB#0:
	movl	8(%rdi), %eax
	ret
.Ltmp782:
	.size	_Pshadow_Pstandard_Cuint_Mhash, .Ltmp782-_Pshadow_Pstandard_Cuint_Mhash

	.globl	_Pshadow_Pstandard_Cuint_MtoString
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Cuint_MtoString,@function
_Pshadow_Pstandard_Cuint_MtoString:     # @_Pshadow_Pstandard_Cuint_MtoString
	.cfi_startproc
# BB#0:
	pushq	%r15
.Ltmp789:
	.cfi_def_cfa_offset 16
	pushq	%r14
.Ltmp790:
	.cfi_def_cfa_offset 24
	pushq	%r13
.Ltmp791:
	.cfi_def_cfa_offset 32
	pushq	%r12
.Ltmp792:
	.cfi_def_cfa_offset 40
	pushq	%rbx
.Ltmp793:
	.cfi_def_cfa_offset 48
.Ltmp794:
	.cfi_offset %rbx, -48
.Ltmp795:
	.cfi_offset %r12, -40
.Ltmp796:
	.cfi_offset %r13, -32
.Ltmp797:
	.cfi_offset %r14, -24
.Ltmp798:
	.cfi_offset %r15, -16
	movl	8(%rdi), %ebx
	movl	_Pshadow_Pstandard_CMutableString_Mclass+52(%rip), %edi
	callq	malloc
	movq	%rax, %r14
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%r14)
	movq	$_Pshadow_Pstandard_CMutableString_Mclass, (%r14)
	movl	$10, %edi
	movl	$1, %esi
	callq	calloc
	movq	%rax, 8(%r14)
	movl	$10, 16(%r14)
	movl	$0, 24(%r14)
	movl	$3435973837, %r15d      # imm = 0xCCCCCCCD
	.align	16, 0x90
.LBB180_1:                              # %_label9.i
                                        # =>This Inner Loop Header: Depth=1
	movq	(%r14), %rax
	movq	112(%rax), %r12
	movl	$16, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_Ccode_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_Ccode_Mclass, (%rax)
	movl	%ebx, %r13d
	movq	%r13, %rbx
	imulq	%r15, %rbx
	shrq	$35, %rbx
	imull	$10, %ebx, %edx
	movl	%r13d, %ecx
	subl	%edx, %ecx
	orl	$48, %ecx
	movl	%ecx, 8(%rax)
	movq	%r14, %rdi
	movq	%rax, %rsi
	callq	*%r12
	cmpl	$9, %r13d
	ja	.LBB180_1
# BB#2:                                 # %_Pshadow_Pstandard_Cuint_MtoString_Pshadow_Pstandard_Cuint.exit
	movq	(%r14), %rax
	movq	%r14, %rdi
	callq	*152(%rax)
	movq	(%rax), %rcx
	movq	%rax, %rdi
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	jmpq	*104(%rcx)  # TAILCALL
.Ltmp799:
	.size	_Pshadow_Pstandard_Cuint_MtoString, .Ltmp799-_Pshadow_Pstandard_Cuint_MtoString
	.cfi_endproc

	.globl	_Pshadow_Pstandard_Cuint_MtoString_Pshadow_Pstandard_Cuint
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Cuint_MtoString_Pshadow_Pstandard_Cuint,@function
_Pshadow_Pstandard_Cuint_MtoString_Pshadow_Pstandard_Cuint: # @_Pshadow_Pstandard_Cuint_MtoString_Pshadow_Pstandard_Cuint
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp806:
	.cfi_def_cfa_offset 16
	pushq	%r15
.Ltmp807:
	.cfi_def_cfa_offset 24
	pushq	%r14
.Ltmp808:
	.cfi_def_cfa_offset 32
	pushq	%r12
.Ltmp809:
	.cfi_def_cfa_offset 40
	pushq	%rbx
.Ltmp810:
	.cfi_def_cfa_offset 48
.Ltmp811:
	.cfi_offset %rbx, -48
.Ltmp812:
	.cfi_offset %r12, -40
.Ltmp813:
	.cfi_offset %r14, -32
.Ltmp814:
	.cfi_offset %r15, -24
.Ltmp815:
	.cfi_offset %rbp, -16
	movl	%esi, %r14d
	movl	8(%rdi), %ebp
	movl	_Pshadow_Pstandard_CMutableString_Mclass+52(%rip), %edi
	callq	malloc
	movq	%rax, %r12
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%r12)
	movq	$_Pshadow_Pstandard_CMutableString_Mclass, (%r12)
	movl	$10, %edi
	movl	$1, %esi
	callq	calloc
	movq	%rax, 8(%r12)
	movl	$10, 16(%r12)
	movl	$0, 24(%r12)
	movl	$48, %r15d
	.align	16, 0x90
.LBB181_1:                              # %_label9
                                        # =>This Inner Loop Header: Depth=1
	movq	(%r12), %rax
	movq	112(%rax), %rbx
	movl	$16, %edi
	callq	malloc
	movq	%rax, %rcx
	movq	$_Pshadow_Pstandard_Ccode_Mclass, (%rcx)
	movq	$_Pshadow_Pstandard_Ccode_Mclass, (%rcx)
	movl	%ebp, %eax
	xorl	%edx, %edx
	divl	%r14d
	movl	%eax, %ebp
	cmpl	$10, %edx
	movl	$87, %eax
	cmovbl	%r15d, %eax
	addl	%edx, %eax
	movl	%eax, 8(%rcx)
	movq	%r12, %rdi
	movq	%rcx, %rsi
	callq	*%rbx
	testl	%ebp, %ebp
	jne	.LBB181_1
# BB#2:                                 # %_label11
	movq	(%r12), %rax
	movq	%r12, %rdi
	callq	*152(%rax)
	movq	(%rax), %rcx
	movq	%rax, %rdi
	callq	*104(%rcx)
	popq	%rbx
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret
.Ltmp816:
	.size	_Pshadow_Pstandard_Cuint_MtoString_Pshadow_Pstandard_Cuint, .Ltmp816-_Pshadow_Pstandard_Cuint_MtoString_Pshadow_Pstandard_Cuint
	.cfi_endproc

	.globl	_Pshadow_Pstandard_Cuint_Mcreate
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Cuint_Mcreate,@function
_Pshadow_Pstandard_Cuint_Mcreate:       # @_Pshadow_Pstandard_Cuint_Mcreate
# BB#0:
	movq	$_Pshadow_Pstandard_Cuint_Mclass, (%rdi)
	movq	%rdi, %rax
	ret
.Ltmp817:
	.size	_Pshadow_Pstandard_Cuint_Mcreate, .Ltmp817-_Pshadow_Pstandard_Cuint_Mcreate

	.globl	_Pshadow_Pstandard_Culong_Mdigit_Pshadow_Pstandard_Culong
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Culong_Mdigit_Pshadow_Pstandard_Culong,@function
_Pshadow_Pstandard_Culong_Mdigit_Pshadow_Pstandard_Culong: # @_Pshadow_Pstandard_Culong_Mdigit_Pshadow_Pstandard_Culong
# BB#0:
	movq	%rsi, %rax
	cmpq	$9, %rax
	ja	.LBB183_2
# BB#1:                                 # %_label0
	addl	$48, %eax
                                        # kill: EAX<def> EAX<kill> RAX<kill>
	ret
.LBB183_2:                              # %_label2
	addl	$87, %eax
                                        # kill: EAX<def> EAX<kill> RAX<kill>
	ret
.Ltmp818:
	.size	_Pshadow_Pstandard_Culong_Mdigit_Pshadow_Pstandard_Culong, .Ltmp818-_Pshadow_Pstandard_Culong_Mdigit_Pshadow_Pstandard_Culong

	.globl	_Pshadow_Pstandard_Culong_MtoString
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Culong_MtoString,@function
_Pshadow_Pstandard_Culong_MtoString:    # @_Pshadow_Pstandard_Culong_MtoString
	.cfi_startproc
# BB#0:
	pushq	%r15
.Ltmp825:
	.cfi_def_cfa_offset 16
	pushq	%r14
.Ltmp826:
	.cfi_def_cfa_offset 24
	pushq	%r13
.Ltmp827:
	.cfi_def_cfa_offset 32
	pushq	%r12
.Ltmp828:
	.cfi_def_cfa_offset 40
	pushq	%rbx
.Ltmp829:
	.cfi_def_cfa_offset 48
.Ltmp830:
	.cfi_offset %rbx, -48
.Ltmp831:
	.cfi_offset %r12, -40
.Ltmp832:
	.cfi_offset %r13, -32
.Ltmp833:
	.cfi_offset %r14, -24
.Ltmp834:
	.cfi_offset %r15, -16
	movq	8(%rdi), %r15
	movl	_Pshadow_Pstandard_CMutableString_Mclass+52(%rip), %edi
	callq	malloc
	movq	%rax, %r14
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%r14)
	movq	$_Pshadow_Pstandard_CMutableString_Mclass, (%r14)
	movl	$10, %edi
	movl	$1, %esi
	callq	calloc
	movq	%rax, 8(%r14)
	movl	$10, 16(%r14)
	movl	$0, 24(%r14)
	movabsq	$-3689348814741910323, %r12 # imm = 0xCCCCCCCCCCCCCCCD
	.align	16, 0x90
.LBB184_1:                              # %_label3.i
                                        # =>This Inner Loop Header: Depth=1
	movq	(%r14), %rax
	movq	112(%rax), %r13
	movl	$16, %edi
	callq	malloc
	movq	%rax, %rcx
	movq	$_Pshadow_Pstandard_Ccode_Mclass, (%rcx)
	movq	$_Pshadow_Pstandard_Ccode_Mclass, (%rcx)
	movq	%r15, %rax
	mulq	%r12
	movq	%rdx, %rbx
	shrq	$3, %rbx
	imull	$10, %ebx, %edx
	movl	%r15d, %eax
	subl	%edx, %eax
	orl	$48, %eax
	movl	%eax, 8(%rcx)
	movq	%r14, %rdi
	movq	%rcx, %rsi
	callq	*%r13
	cmpq	$9, %r15
	movq	%rbx, %r15
	ja	.LBB184_1
# BB#2:                                 # %_Pshadow_Pstandard_Culong_MtoString_Pshadow_Pstandard_Culong.exit
	movq	(%r14), %rax
	movq	%r14, %rdi
	callq	*152(%rax)
	movq	(%rax), %rcx
	movq	%rax, %rdi
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	jmpq	*104(%rcx)  # TAILCALL
.Ltmp835:
	.size	_Pshadow_Pstandard_Culong_MtoString, .Ltmp835-_Pshadow_Pstandard_Culong_MtoString
	.cfi_endproc

	.globl	_Pshadow_Pstandard_Culong_MtoString_Pshadow_Pstandard_Culong
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Culong_MtoString_Pshadow_Pstandard_Culong,@function
_Pshadow_Pstandard_Culong_MtoString_Pshadow_Pstandard_Culong: # @_Pshadow_Pstandard_Culong_MtoString_Pshadow_Pstandard_Culong
	.cfi_startproc
# BB#0:
	pushq	%r15
.Ltmp842:
	.cfi_def_cfa_offset 16
	pushq	%r14
.Ltmp843:
	.cfi_def_cfa_offset 24
	pushq	%r13
.Ltmp844:
	.cfi_def_cfa_offset 32
	pushq	%r12
.Ltmp845:
	.cfi_def_cfa_offset 40
	pushq	%rbx
.Ltmp846:
	.cfi_def_cfa_offset 48
.Ltmp847:
	.cfi_offset %rbx, -48
.Ltmp848:
	.cfi_offset %r12, -40
.Ltmp849:
	.cfi_offset %r13, -32
.Ltmp850:
	.cfi_offset %r14, -24
.Ltmp851:
	.cfi_offset %r15, -16
	movq	%rsi, %r14
	movq	8(%rdi), %rbx
	movl	_Pshadow_Pstandard_CMutableString_Mclass+52(%rip), %edi
	callq	malloc
	movq	%rax, %r15
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%r15)
	movq	$_Pshadow_Pstandard_CMutableString_Mclass, (%r15)
	movl	$10, %edi
	movl	$1, %esi
	callq	calloc
	movq	%rax, 8(%r15)
	movl	$10, 16(%r15)
	movl	$0, 24(%r15)
	movl	$48, %r12d
	.align	16, 0x90
.LBB185_1:                              # %_label3
                                        # =>This Inner Loop Header: Depth=1
	movq	(%r15), %rax
	movq	112(%rax), %r13
	movl	$16, %edi
	callq	malloc
	movq	%rax, %rcx
	movq	$_Pshadow_Pstandard_Ccode_Mclass, (%rcx)
	movq	%rbx, %rax
	xorl	%edx, %edx
	divq	%r14
	movq	%rax, %rbx
	movq	$_Pshadow_Pstandard_Ccode_Mclass, (%rcx)
	cmpq	$10, %rdx
	movl	$87, %eax
	cmovbq	%r12, %rax
	addl	%edx, %eax
	movl	%eax, 8(%rcx)
	movq	%r15, %rdi
	movq	%rcx, %rsi
	callq	*%r13
	testq	%rbx, %rbx
	jne	.LBB185_1
# BB#2:                                 # %_label5
	movq	(%r15), %rax
	movq	%r15, %rdi
	callq	*152(%rax)
	movq	(%rax), %rcx
	movq	%rax, %rdi
	callq	*104(%rcx)
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	ret
.Ltmp852:
	.size	_Pshadow_Pstandard_Culong_MtoString_Pshadow_Pstandard_Culong, .Ltmp852-_Pshadow_Pstandard_Culong_MtoString_Pshadow_Pstandard_Culong
	.cfi_endproc

	.globl	_Pshadow_Pstandard_Culong_Mcreate
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Culong_Mcreate,@function
_Pshadow_Pstandard_Culong_Mcreate:      # @_Pshadow_Pstandard_Culong_Mcreate
# BB#0:
	movq	$_Pshadow_Pstandard_Culong_Mclass, (%rdi)
	movq	%rdi, %rax
	ret
.Ltmp853:
	.size	_Pshadow_Pstandard_Culong_Mcreate, .Ltmp853-_Pshadow_Pstandard_Culong_Mcreate

	.globl	_P_CUnexpectedNullException_Mcreate
	.align	16, 0x90
	.type	_P_CUnexpectedNullException_Mcreate,@function
_P_CUnexpectedNullException_Mcreate:    # @_P_CUnexpectedNullException_Mcreate
# BB#0:
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rdi)
	movq	$_Pshadow_Pstandard_CException_Mclass, (%rdi)
	movq	$.L_string286, 8(%rdi)
	movq	$_P_CUnexpectedNullException_Mclass, (%rdi)
	movq	%rdi, %rax
	ret
.Ltmp854:
	.size	_P_CUnexpectedNullException_Mcreate, .Ltmp854-_P_CUnexpectedNullException_Mcreate

	.globl	_Pshadow_Pstandard_Cushort_Mcreate
	.align	16, 0x90
	.type	_Pshadow_Pstandard_Cushort_Mcreate,@function
_Pshadow_Pstandard_Cushort_Mcreate:     # @_Pshadow_Pstandard_Cushort_Mcreate
# BB#0:
	movq	$_Pshadow_Pstandard_Cushort_Mclass, (%rdi)
	movq	%rdi, %rax
	ret
.Ltmp855:
	.size	_Pshadow_Pstandard_Cushort_Mcreate, .Ltmp855-_Pshadow_Pstandard_Cushort_Mcreate

	.globl	_Pshadow_Pio_CConsole_MprintError_Pshadow_Pstandard_CObject
	.align	16, 0x90
	.type	_Pshadow_Pio_CConsole_MprintError_Pshadow_Pstandard_CObject,@function
_Pshadow_Pio_CConsole_MprintError_Pshadow_Pstandard_CObject: # @_Pshadow_Pio_CConsole_MprintError_Pshadow_Pstandard_CObject
	.cfi_startproc
# BB#0:
	pushq	%r14
.Ltmp859:
	.cfi_def_cfa_offset 16
	pushq	%rbx
.Ltmp860:
	.cfi_def_cfa_offset 24
	pushq	%rax
.Ltmp861:
	.cfi_def_cfa_offset 32
.Ltmp862:
	.cfi_offset %rbx, -24
.Ltmp863:
	.cfi_offset %r14, -16
	movq	%rdi, %rbx
	movq	(%rbx), %rax
	movq	136(%rax), %r14
	movl	$.L_string1424, %eax
	testq	%rsi, %rsi
	je	.LBB189_2
# BB#1:                                 # %_label1
	movq	(%rsi), %rax
	movq	%rsi, %rdi
	callq	*104(%rax)
.LBB189_2:                              # %_label2
	movq	%rbx, %rdi
	movq	%rax, %rsi
	callq	*%r14
	addq	$8, %rsp
	popq	%rbx
	popq	%r14
	ret
.Ltmp864:
	.size	_Pshadow_Pio_CConsole_MprintError_Pshadow_Pstandard_CObject, .Ltmp864-_Pshadow_Pio_CConsole_MprintError_Pshadow_Pstandard_CObject
	.cfi_endproc

	.globl	_Pshadow_Pio_CConsole_MreadLine
	.align	16, 0x90
	.type	_Pshadow_Pio_CConsole_MreadLine,@function
_Pshadow_Pio_CConsole_MreadLine:        # @_Pshadow_Pio_CConsole_MreadLine
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp870:
	.cfi_def_cfa_offset 16
	pushq	%r15
.Ltmp871:
	.cfi_def_cfa_offset 24
	pushq	%r14
.Ltmp872:
	.cfi_def_cfa_offset 32
	pushq	%rbx
.Ltmp873:
	.cfi_def_cfa_offset 40
	subq	$24, %rsp
.Ltmp874:
	.cfi_def_cfa_offset 64
.Ltmp875:
	.cfi_offset %rbx, -40
.Ltmp876:
	.cfi_offset %r14, -32
.Ltmp877:
	.cfi_offset %r15, -24
.Ltmp878:
	.cfi_offset %rbp, -16
	movq	%rdi, %r14
	movl	_Pshadow_Pstandard_CMutableString_Mclass+52(%rip), %edi
	callq	malloc
	movq	%rax, %r15
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%r15)
	movq	$_Pshadow_Pstandard_CMutableString_Mclass, (%r15)
	movl	$10, %edi
	movl	$1, %esi
	callq	calloc
	movq	%rax, 8(%r15)
	movl	$10, 16(%r15)
	movl	$0, 24(%r15)
	movq	%r15, 16(%rsp)
	movq	(%r14), %rax
	movq	%r14, %rdi
	callq	*184(%rax)
	movl	%eax, %ebp
	movb	%dl, %al
	andb	$1, %al
	movb	%al, 15(%rsp)
	movb	8(%r14), %al
	testb	%al, %al
	je	.LBB190_4
# BB#1:
	cmpl	$10, %ebp
	je	.LBB190_3
	jmp	.LBB190_4
.LBB190_2:                              # %_label8
	movq	(%r15), %rax
	movq	112(%rax), %rbx
	movl	$16, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_Ccode_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_Ccode_Mclass, (%rax)
	movl	%ebp, 8(%rax)
	movq	%r15, %rdi
	movq	%rax, %rsi
	callq	*%rbx
.LBB190_3:                              # %_label8
	movq	(%r14), %rax
	movq	%r14, %rdi
	callq	*184(%rax)
	movl	%eax, %ebp
	movb	%dl, %al
	andb	$1, %al
	movb	%al, 15(%rsp)
.LBB190_4:                              # %_label8
	cmpl	$10, %ebp
	je	.LBB190_7
# BB#5:                                 # %_label8
	cmpl	$13, %ebp
	je	.LBB190_7
# BB#6:                                 # %_label11
	testb	$1, %dl
	je	.LBB190_2
.LBB190_7:                              # %_label10
	cmpl	$13, %ebp
	sete	8(%r14)
	movl	$.L_string1424, %eax
	movq	16(%rsp), %rdi
	testq	%rdi, %rdi
	je	.LBB190_9
# BB#8:                                 # %_label15
	movq	(%rdi), %rax
	callq	*104(%rax)
.LBB190_9:                              # %_label16
	movb	15(%rsp), %dl
	addq	$24, %rsp
	popq	%rbx
	popq	%r14
	popq	%r15
	popq	%rbp
	ret
.Ltmp879:
	.size	_Pshadow_Pio_CConsole_MreadLine, .Ltmp879-_Pshadow_Pio_CConsole_MreadLine
	.cfi_endproc

	.globl	_Pshadow_Pio_CConsole_MprintLine_Pshadow_Pstandard_CObject
	.align	16, 0x90
	.type	_Pshadow_Pio_CConsole_MprintLine_Pshadow_Pstandard_CObject,@function
_Pshadow_Pio_CConsole_MprintLine_Pshadow_Pstandard_CObject: # @_Pshadow_Pio_CConsole_MprintLine_Pshadow_Pstandard_CObject
	.cfi_startproc
# BB#0:
	pushq	%rax
.Ltmp881:
	.cfi_def_cfa_offset 16
	movq	(%rdi), %rax
	callq	*112(%rax)
	movq	(%rax), %rcx
	movq	%rax, %rdi
	popq	%rax
	jmpq	*168(%rcx)  # TAILCALL
.Ltmp882:
	.size	_Pshadow_Pio_CConsole_MprintLine_Pshadow_Pstandard_CObject, .Ltmp882-_Pshadow_Pio_CConsole_MprintLine_Pshadow_Pstandard_CObject
	.cfi_endproc

	.globl	_Pshadow_Pio_CConsole_MprintErrorLine_Pshadow_Pstandard_CObject
	.align	16, 0x90
	.type	_Pshadow_Pio_CConsole_MprintErrorLine_Pshadow_Pstandard_CObject,@function
_Pshadow_Pio_CConsole_MprintErrorLine_Pshadow_Pstandard_CObject: # @_Pshadow_Pio_CConsole_MprintErrorLine_Pshadow_Pstandard_CObject
	.cfi_startproc
# BB#0:
	pushq	%rax
.Ltmp884:
	.cfi_def_cfa_offset 16
	movq	(%rdi), %rax
	callq	*128(%rax)
	movq	(%rax), %rcx
	movq	%rax, %rdi
	popq	%rax
	jmpq	*152(%rcx)  # TAILCALL
.Ltmp885:
	.size	_Pshadow_Pio_CConsole_MprintErrorLine_Pshadow_Pstandard_CObject, .Ltmp885-_Pshadow_Pio_CConsole_MprintErrorLine_Pshadow_Pstandard_CObject
	.cfi_endproc

	.globl	_Pshadow_Pio_CConsole_Mcreate
	.align	16, 0x90
	.type	_Pshadow_Pio_CConsole_Mcreate,@function
_Pshadow_Pio_CConsole_Mcreate:          # @_Pshadow_Pio_CConsole_Mcreate
# BB#0:
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rdi)
	movq	$_Pshadow_Pio_CConsole_Mclass, (%rdi)
	movb	$0, 8(%rdi)
	movq	%rdi, %rax
	ret
.Ltmp886:
	.size	_Pshadow_Pio_CConsole_Mcreate, .Ltmp886-_Pshadow_Pio_CConsole_Mcreate

	.globl	_Pshadow_Pio_CConsole_Mprint_Pshadow_Pstandard_CObject
	.align	16, 0x90
	.type	_Pshadow_Pio_CConsole_Mprint_Pshadow_Pstandard_CObject,@function
_Pshadow_Pio_CConsole_Mprint_Pshadow_Pstandard_CObject: # @_Pshadow_Pio_CConsole_Mprint_Pshadow_Pstandard_CObject
	.cfi_startproc
# BB#0:
	pushq	%r14
.Ltmp890:
	.cfi_def_cfa_offset 16
	pushq	%rbx
.Ltmp891:
	.cfi_def_cfa_offset 24
	pushq	%rax
.Ltmp892:
	.cfi_def_cfa_offset 32
.Ltmp893:
	.cfi_offset %rbx, -24
.Ltmp894:
	.cfi_offset %r14, -16
	movq	%rdi, %rbx
	movq	(%rbx), %rax
	movq	120(%rax), %r14
	movl	$.L_string1424, %eax
	testq	%rsi, %rsi
	je	.LBB194_2
# BB#1:                                 # %_label18
	movq	(%rsi), %rax
	movq	%rsi, %rdi
	callq	*104(%rax)
.LBB194_2:                              # %_label19
	movq	%rbx, %rdi
	movq	%rax, %rsi
	callq	*%r14
	addq	$8, %rsp
	popq	%rbx
	popq	%r14
	ret
.Ltmp895:
	.size	_Pshadow_Pio_CConsole_Mprint_Pshadow_Pstandard_CObject, .Ltmp895-_Pshadow_Pio_CConsole_Mprint_Pshadow_Pstandard_CObject
	.cfi_endproc

	.globl	_Pshadow_Pio_CConsole_MreadCode
	.align	16, 0x90
	.type	_Pshadow_Pio_CConsole_MreadCode,@function
_Pshadow_Pio_CConsole_MreadCode:        # @_Pshadow_Pio_CConsole_MreadCode
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp900:
	.cfi_def_cfa_offset 16
	pushq	%r14
.Ltmp901:
	.cfi_def_cfa_offset 24
	pushq	%rbx
.Ltmp902:
	.cfi_def_cfa_offset 32
.Ltmp903:
	.cfi_offset %rbx, -32
.Ltmp904:
	.cfi_offset %r14, -24
.Ltmp905:
	.cfi_offset %rbp, -16
	movq	%rdi, %r14
	movq	(%r14), %rax
	callq	*176(%rax)
	movsbl	%al, %ebp
	testb	%bpl, %bpl
	jns	.LBB195_7
# BB#1:                                 # %_label20
	cmpb	$-65, %al
	jg	.LBB195_2
# BB#8:                                 # %_label25.thread
	andl	$63, %ebp
	jmp	.LBB195_7
.LBB195_2:
	xorl	%ebx, %ebx
	movb	$-64, %cl
	.align	16, 0x90
.LBB195_3:                              # %_label23
                                        # =>This Inner Loop Header: Depth=1
	incl	%ebx
	sarb	%cl
	cmpb	%cl, %al
	jge	.LBB195_3
# BB#4:                                 # %_label25
	notb	%cl
	andb	%cl, %al
	movsbl	%al, %ebp
	jmp	.LBB195_6
	.align	16, 0x90
.LBB195_5:                              # %_label26
                                        #   in Loop: Header=BB195_6 Depth=1
	movq	(%r14), %rax
	movq	%r14, %rdi
	callq	*176(%rax)
	andb	$63, %al
	movzbl	%al, %eax
	shll	$6, %ebp
	orl	%eax, %ebp
	decl	%ebx
.LBB195_6:                              # %_label26
                                        # =>This Inner Loop Header: Depth=1
	testl	%ebx, %ebx
	jg	.LBB195_5
.LBB195_7:                              # %_label22
	movl	%ebp, %eax
	popq	%rbx
	popq	%r14
	popq	%rbp
	ret
.Ltmp906:
	.size	_Pshadow_Pio_CConsole_MreadCode, .Ltmp906-_Pshadow_Pio_CConsole_MreadCode
	.cfi_endproc

	.globl	_Pshadow_Putility_CArrayList_IArrayListIterator_MhasNext
	.align	16, 0x90
	.type	_Pshadow_Putility_CArrayList_IArrayListIterator_MhasNext,@function
_Pshadow_Putility_CArrayList_IArrayListIterator_MhasNext: # @_Pshadow_Putility_CArrayList_IArrayListIterator_MhasNext
	.cfi_startproc
# BB#0:
	pushq	%rax
.Ltmp908:
	.cfi_def_cfa_offset 16
	movq	16(%rdi), %rax
	movl	24(%rdi), %ecx
	cmpl	32(%rax), %ecx
	jne	.LBB196_2
# BB#1:                                 # %_Pshadow_Putility_CArrayList_IArrayListIterator_McheckForModifications.exit
	movl	28(%rdi), %ecx
	cmpl	36(%rax), %ecx
	setl	%al
	popq	%rdx
	ret
.LBB196_2:                              # %_label6.i
	movl	$8, %edi
	callq	malloc
	movq	$_P_CIllegalModificationException_Mclass, (%rax)
	movq	$_P_CIllegalModificationException_Mclass, (%rax)
	movq	%rax, %rdi
	callq	_Pshadow_Pstandard_CException_Mthrow__
.Ltmp909:
	.size	_Pshadow_Putility_CArrayList_IArrayListIterator_MhasNext, .Ltmp909-_Pshadow_Putility_CArrayList_IArrayListIterator_MhasNext
	.cfi_endproc

	.globl	_Pshadow_Putility_CArrayList_IArrayListIterator_Mnext
	.align	16, 0x90
	.type	_Pshadow_Putility_CArrayList_IArrayListIterator_Mnext,@function
_Pshadow_Putility_CArrayList_IArrayListIterator_Mnext: # @_Pshadow_Putility_CArrayList_IArrayListIterator_Mnext
	.cfi_startproc
# BB#0:
	pushq	%rax
.Ltmp911:
	.cfi_def_cfa_offset 16
	movq	16(%rdi), %rax
	movl	24(%rdi), %ecx
	cmpl	32(%rax), %ecx
	jne	.LBB197_4
# BB#1:                                 # %_Pshadow_Putility_CArrayList_IArrayListIterator_McheckForModifications.exit
	movl	28(%rdi), %ecx
	cmpl	36(%rax), %ecx
	jge	.LBB197_5
# BB#2:                                 # %_label2
	movslq	%ecx, %rdx
	movq	8(%rax), %rax
	movq	(%rax,%rdx,8), %rax
	testq	%rax, %rax
	je	.LBB197_3
# BB#6:                                 # %_label5
	incl	%ecx
	movl	%ecx, 28(%rdi)
	popq	%rdx
	ret
.LBB197_4:                              # %_label6.i
	movl	$8, %edi
	callq	malloc
	movq	$_P_CIllegalModificationException_Mclass, (%rax)
	movq	$_P_CIllegalModificationException_Mclass, (%rax)
	movq	%rax, %rdi
	callq	_Pshadow_Pstandard_CException_Mthrow__
.LBB197_5:                              # %_label0
	movl	_Pshadow_Pstandard_CIndexOutOfBoundsException_Mclass+52(%rip), %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_CException_Mclass, (%rax)
	movq	$.L_string286, 8(%rax)
	movq	$_Pshadow_Pstandard_CIndexOutOfBoundsException_Mclass, (%rax)
	movq	%rax, %rdi
	callq	_Pshadow_Pstandard_CException_Mthrow__
.LBB197_3:                              # %_label4
	movl	$8, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_CException_Mclass, (%rax)
	movq	$.L_string286, 8(%rax)
	movq	$_P_CUnexpectedNullException_Mclass, (%rax)
	movq	%rax, %rdi
	callq	_Pshadow_Pstandard_CException_Mthrow__
.Ltmp912:
	.size	_Pshadow_Putility_CArrayList_IArrayListIterator_Mnext, .Ltmp912-_Pshadow_Putility_CArrayList_IArrayListIterator_Mnext
	.cfi_endproc

	.globl	_Pshadow_Putility_CArrayList_IArrayListIterator_Mcreate
	.align	16, 0x90
	.type	_Pshadow_Putility_CArrayList_IArrayListIterator_Mcreate,@function
_Pshadow_Putility_CArrayList_IArrayListIterator_Mcreate: # @_Pshadow_Putility_CArrayList_IArrayListIterator_Mcreate
# BB#0:
	movq	$_Pshadow_Putility_CArrayList_IArrayListIterator_Mclass, (%rdi)
	movq	%rsi, 16(%rdi)
	movq	%rdx, 8(%rdi)
	movl	$0, 28(%rdi)
	movq	16(%rdi), %rax
	movl	32(%rax), %eax
	movl	%eax, 24(%rdi)
	movq	%rdi, %rax
	ret
.Ltmp913:
	.size	_Pshadow_Putility_CArrayList_IArrayListIterator_Mcreate, .Ltmp913-_Pshadow_Putility_CArrayList_IArrayListIterator_Mcreate

	.globl	_Pshadow_Putility_CArrayList_IArrayListIterator_McheckForModifications
	.align	16, 0x90
	.type	_Pshadow_Putility_CArrayList_IArrayListIterator_McheckForModifications,@function
_Pshadow_Putility_CArrayList_IArrayListIterator_McheckForModifications: # @_Pshadow_Putility_CArrayList_IArrayListIterator_McheckForModifications
	.cfi_startproc
# BB#0:
	pushq	%rax
.Ltmp915:
	.cfi_def_cfa_offset 16
	movq	16(%rdi), %rax
	movl	24(%rdi), %ecx
	cmpl	32(%rax), %ecx
	jne	.LBB199_2
# BB#1:                                 # %_label8
	popq	%rax
	ret
.LBB199_2:                              # %_label6
	movl	$8, %edi
	callq	malloc
	movq	$_P_CIllegalModificationException_Mclass, (%rax)
	movq	$_P_CIllegalModificationException_Mclass, (%rax)
	movq	%rax, %rdi
	callq	_Pshadow_Pstandard_CException_Mthrow__
.Ltmp916:
	.size	_Pshadow_Putility_CArrayList_IArrayListIterator_McheckForModifications, .Ltmp916-_Pshadow_Putility_CArrayList_IArrayListIterator_McheckForModifications
	.cfi_endproc

	.globl	_Pshadow_Putility_CArrayList_Mclear
	.align	16, 0x90
	.type	_Pshadow_Putility_CArrayList_Mclear,@function
_Pshadow_Putility_CArrayList_Mclear:    # @_Pshadow_Putility_CArrayList_Mclear
# BB#0:
	movl	$0, 36(%rdi)
	incl	32(%rdi)
	ret
.Ltmp917:
	.size	_Pshadow_Putility_CArrayList_Mclear, .Ltmp917-_Pshadow_Putility_CArrayList_Mclear

	.globl	_Pshadow_Putility_CArrayList_Miterator
	.align	16, 0x90
	.type	_Pshadow_Putility_CArrayList_Miterator,@function
_Pshadow_Putility_CArrayList_Miterator: # @_Pshadow_Putility_CArrayList_Miterator
# BB#0:
	pushq	%rbx
	movq	%rdi, %rbx
	movl	$32, %edi
	callq	malloc
	movq	$_Pshadow_Putility_CArrayList_IArrayListIterator_Mclass, (%rax)
	movq	24(%rbx), %rcx
	movq	$_Pshadow_Putility_CArrayList_IArrayListIterator_Mclass, (%rax)
	movq	%rbx, 16(%rax)
	movq	%rcx, 8(%rax)
	movl	$0, 28(%rax)
	movq	16(%rax), %rcx
	movl	32(%rcx), %ecx
	movl	%ecx, 24(%rax)
	popq	%rbx
	ret
.Ltmp918:
	.size	_Pshadow_Putility_CArrayList_Miterator, .Ltmp918-_Pshadow_Putility_CArrayList_Miterator

	.globl	_Pshadow_Putility_CArrayList_Mindex_Pshadow_Pstandard_Cint
	.align	16, 0x90
	.type	_Pshadow_Putility_CArrayList_Mindex_Pshadow_Pstandard_Cint,@function
_Pshadow_Putility_CArrayList_Mindex_Pshadow_Pstandard_Cint: # @_Pshadow_Putility_CArrayList_Mindex_Pshadow_Pstandard_Cint
	.cfi_startproc
# BB#0:
	pushq	%rax
.Ltmp920:
	.cfi_def_cfa_offset 16
	testl	%esi, %esi
	js	.LBB202_4
# BB#1:                                 # %_label3
	cmpl	%esi, 36(%rdi)
	jle	.LBB202_4
# BB#2:                                 # %_label2
	movslq	%esi, %rax
	movq	8(%rdi), %rcx
	movq	(%rcx,%rax,8), %rax
	testq	%rax, %rax
	je	.LBB202_3
# BB#5:                                 # %_label7
	popq	%rdx
	ret
.LBB202_4:                              # %_label0
	movl	_Pshadow_Pstandard_CIndexOutOfBoundsException_Mclass+52(%rip), %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_CException_Mclass, (%rax)
	movq	$.L_string286, 8(%rax)
	movq	$_Pshadow_Pstandard_CIndexOutOfBoundsException_Mclass, (%rax)
	movq	%rax, %rdi
	callq	_Pshadow_Pstandard_CException_Mthrow__
.LBB202_3:                              # %_label6
	movl	$8, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_CException_Mclass, (%rax)
	movq	$.L_string286, 8(%rax)
	movq	$_P_CUnexpectedNullException_Mclass, (%rax)
	movq	%rax, %rdi
	callq	_Pshadow_Pstandard_CException_Mthrow__
.Ltmp921:
	.size	_Pshadow_Putility_CArrayList_Mindex_Pshadow_Pstandard_Cint, .Ltmp921-_Pshadow_Putility_CArrayList_Mindex_Pshadow_Pstandard_Cint
	.cfi_endproc

	.globl	_Pshadow_Putility_CArrayList_Mindex_Pshadow_Pstandard_Cint_CV
	.align	16, 0x90
	.type	_Pshadow_Putility_CArrayList_Mindex_Pshadow_Pstandard_Cint_CV,@function
_Pshadow_Putility_CArrayList_Mindex_Pshadow_Pstandard_Cint_CV: # @_Pshadow_Putility_CArrayList_Mindex_Pshadow_Pstandard_Cint_CV
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp927:
	.cfi_def_cfa_offset 16
	pushq	%r15
.Ltmp928:
	.cfi_def_cfa_offset 24
	pushq	%r14
.Ltmp929:
	.cfi_def_cfa_offset 32
	pushq	%rbx
.Ltmp930:
	.cfi_def_cfa_offset 40
	subq	$24, %rsp
.Ltmp931:
	.cfi_def_cfa_offset 64
.Ltmp932:
	.cfi_offset %rbx, -40
.Ltmp933:
	.cfi_offset %r14, -32
.Ltmp934:
	.cfi_offset %r15, -24
.Ltmp935:
	.cfi_offset %rbp, -16
	movq	%rdx, %r14
	movl	%esi, %r15d
	movq	%rdi, %rbx
	testl	%r15d, %r15d
	js	.LBB203_11
# BB#1:                                 # %_label11
	cmpl	%r15d, 36(%rbx)
	jl	.LBB203_11
# BB#2:                                 # %_label10
	jne	.LBB203_10
# BB#3:                                 # %_label13
	movl	16(%rbx), %ebp
	cmpl	%r15d, %ebp
	movl	%r15d, %eax
	jg	.LBB203_9
# BB#4:                                 # %_label16
	movq	24(%rbx), %rax
	movl	56(%rax), %esi
	addl	%ebp, %ebp
	movl	%ebp, %edi
	callq	calloc
	movl	%ebp, 16(%rsp)
	movq	%rax, 8(%rsp)
	movl	16(%rbx), %ecx
	testl	%ecx, %ecx
	jle	.LBB203_8
# BB#5:                                 # %_label22.lr.ph.i
	movq	8(%rbx), %rdx
	xorl	%eax, %eax
	movq	8(%rsp), %rcx
	.align	16, 0x90
.LBB203_6:                              # %_label22.i
                                        # =>This Inner Loop Header: Depth=1
	movslq	%eax, %rax
	movq	(%rdx,%rax,8), %rdx
	movq	%rdx, (%rcx,%rax,8)
	movq	8(%rbx), %rdx
	incl	%eax
	cmpl	16(%rbx), %eax
	jl	.LBB203_6
# BB#7:                                 # %_label23._label24_crit_edge.i
	movl	16(%rsp), %ebp
	movq	8(%rsp), %rax
.LBB203_8:                              # %_Pshadow_Putility_CArrayList_Mgrow.exit
	movq	%rax, 8(%rbx)
	movl	%ebp, 16(%rbx)
	movl	36(%rbx), %eax
.LBB203_9:                              # %_label18
	incl	%eax
	movl	%eax, 36(%rbx)
.LBB203_10:                             # %_label15
	movq	8(%rbx), %rax
	movslq	%r15d, %rcx
	movq	%r14, (%rax,%rcx,8)
	incl	32(%rbx)
	addq	$24, %rsp
	popq	%rbx
	popq	%r14
	popq	%r15
	popq	%rbp
	ret
.LBB203_11:                             # %_label8
	movl	_Pshadow_Pstandard_CIndexOutOfBoundsException_Mclass+52(%rip), %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_CException_Mclass, (%rax)
	movq	$.L_string286, 8(%rax)
	movq	$_Pshadow_Pstandard_CIndexOutOfBoundsException_Mclass, (%rax)
	movq	%rax, %rdi
	callq	_Pshadow_Pstandard_CException_Mthrow__
.Ltmp936:
	.size	_Pshadow_Putility_CArrayList_Mindex_Pshadow_Pstandard_Cint_CV, .Ltmp936-_Pshadow_Putility_CArrayList_Mindex_Pshadow_Pstandard_Cint_CV
	.cfi_endproc

	.globl	_Pshadow_Putility_CArrayList_Mremove_CV
	.align	16, 0x90
	.type	_Pshadow_Putility_CArrayList_Mremove_CV,@function
_Pshadow_Putility_CArrayList_Mremove_CV: # @_Pshadow_Putility_CArrayList_Mremove_CV
	.cfi_startproc
# BB#0:
	pushq	%rbx
.Ltmp939:
	.cfi_def_cfa_offset 16
.Ltmp940:
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	movq	(%rbx), %rax
	callq	*160(%rax)
	cmpl	$-1, %eax
	jne	.LBB204_2
# BB#1:                                 # %_label19
	xorb	%al, %al
	popq	%rbx
	ret
.LBB204_2:                              # %_label21
	movq	(%rbx), %rcx
	movq	%rbx, %rdi
	movl	%eax, %esi
	callq	*136(%rcx)
	movb	$1, %al
	popq	%rbx
	ret
.Ltmp941:
	.size	_Pshadow_Putility_CArrayList_Mremove_CV, .Ltmp941-_Pshadow_Putility_CArrayList_Mremove_CV
	.cfi_endproc

	.globl	_Pshadow_Putility_CArrayList_Mgrow
	.align	16, 0x90
	.type	_Pshadow_Putility_CArrayList_Mgrow,@function
_Pshadow_Putility_CArrayList_Mgrow:     # @_Pshadow_Putility_CArrayList_Mgrow
# BB#0:
	pushq	%rbp
	pushq	%rbx
	subq	$24, %rsp
	movq	%rdi, %rbx
	movq	24(%rbx), %rax
	movl	56(%rax), %esi
	movl	16(%rbx), %ebp
	addl	%ebp, %ebp
	movl	%ebp, %edi
	callq	calloc
	movl	%ebp, 16(%rsp)
	movq	%rax, 8(%rsp)
	movl	16(%rbx), %ecx
	testl	%ecx, %ecx
	jle	.LBB205_4
# BB#1:                                 # %_label22.lr.ph
	movq	8(%rbx), %rdx
	xorl	%eax, %eax
	movq	8(%rsp), %rcx
	.align	16, 0x90
.LBB205_2:                              # %_label22
                                        # =>This Inner Loop Header: Depth=1
	movslq	%eax, %rax
	movq	(%rdx,%rax,8), %rdx
	movq	%rdx, (%rcx,%rax,8)
	movq	8(%rbx), %rdx
	incl	%eax
	cmpl	16(%rbx), %eax
	jl	.LBB205_2
# BB#3:                                 # %_label23._label24_crit_edge
	movl	16(%rsp), %ebp
	movq	8(%rsp), %rax
.LBB205_4:                              # %_label24
	movq	%rax, 8(%rbx)
	movl	%ebp, 16(%rbx)
	addq	$24, %rsp
	popq	%rbx
	popq	%rbp
	ret
.Ltmp942:
	.size	_Pshadow_Putility_CArrayList_Mgrow, .Ltmp942-_Pshadow_Putility_CArrayList_Mgrow

	.globl	_Pshadow_Putility_CArrayList_Mdelete_Pshadow_Pstandard_Cint
	.align	16, 0x90
	.type	_Pshadow_Putility_CArrayList_Mdelete_Pshadow_Pstandard_Cint,@function
_Pshadow_Putility_CArrayList_Mdelete_Pshadow_Pstandard_Cint: # @_Pshadow_Putility_CArrayList_Mdelete_Pshadow_Pstandard_Cint
	.cfi_startproc
# BB#0:
	subq	$24, %rsp
.Ltmp944:
	.cfi_def_cfa_offset 32
	movq	%rdi, 16(%rsp)
	testl	%esi, %esi
	js	.LBB206_8
# BB#1:                                 # %_label28
	movl	36(%rdi), %eax
	cmpl	%esi, %eax
	jle	.LBB206_8
# BB#2:                                 # %_label27
	movslq	%esi, %rcx
	movq	8(%rdi), %r8
	movq	(%r8,%rcx,8), %rcx
	testq	%rcx, %rcx
	je	.LBB206_7
# BB#3:                                 # %_label32
	movq	%rcx, 8(%rsp)
	decl	%eax
	cmpl	%esi, %eax
	jle	.LBB206_6
	jmp	.LBB206_4
	.align	16, 0x90
.LBB206_5:                              # %_label33._label33_crit_edge
                                        #   in Loop: Header=BB206_4 Depth=1
	movq	8(%rdi), %r8
	movl	%edx, %esi
.LBB206_4:                              # %_label33
                                        # =>This Inner Loop Header: Depth=1
	leal	1(%rsi), %edx
	movslq	%edx, %rcx
	movq	(%r8,%rcx,8), %rax
	movslq	%esi, %rsi
	movq	%rax, (%r8,%rsi,8)
	movl	36(%rdi), %eax
	decl	%eax
	cmpl	%eax, %ecx
	jl	.LBB206_5
.LBB206_6:                              # %_label35
	movl	%eax, 36(%rdi)
	movq	16(%rsp), %rax
	incl	32(%rax)
	movq	8(%rsp), %rax
	addq	$24, %rsp
	ret
.LBB206_8:                              # %_label25
	movl	_Pshadow_Pstandard_CIndexOutOfBoundsException_Mclass+52(%rip), %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_CException_Mclass, (%rax)
	movq	$.L_string286, 8(%rax)
	movq	$_Pshadow_Pstandard_CIndexOutOfBoundsException_Mclass, (%rax)
	movq	%rax, %rdi
	callq	_Pshadow_Pstandard_CException_Mthrow__
.LBB206_7:                              # %_label31
	movl	$8, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_CException_Mclass, (%rax)
	movq	$.L_string286, 8(%rax)
	movq	$_P_CUnexpectedNullException_Mclass, (%rax)
	movq	%rax, %rdi
	callq	_Pshadow_Pstandard_CException_Mthrow__
.Ltmp945:
	.size	_Pshadow_Putility_CArrayList_Mdelete_Pshadow_Pstandard_Cint, .Ltmp945-_Pshadow_Putility_CArrayList_Mdelete_Pshadow_Pstandard_Cint
	.cfi_endproc

	.globl	_Pshadow_Putility_CArrayList_Mcontains_CV
	.align	16, 0x90
	.type	_Pshadow_Putility_CArrayList_Mcontains_CV,@function
_Pshadow_Putility_CArrayList_Mcontains_CV: # @_Pshadow_Putility_CArrayList_Mcontains_CV
	.cfi_startproc
# BB#0:
	pushq	%rax
.Ltmp947:
	.cfi_def_cfa_offset 16
	movq	(%rdi), %rax
	callq	*160(%rax)
	cmpl	$-1, %eax
	setne	%al
	popq	%rdx
	ret
.Ltmp948:
	.size	_Pshadow_Putility_CArrayList_Mcontains_CV, .Ltmp948-_Pshadow_Putility_CArrayList_Mcontains_CV
	.cfi_endproc

	.globl	_Pshadow_Putility_CArrayList_MindexOf_CV
	.align	16, 0x90
	.type	_Pshadow_Putility_CArrayList_MindexOf_CV,@function
_Pshadow_Putility_CArrayList_MindexOf_CV: # @_Pshadow_Putility_CArrayList_MindexOf_CV
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp954:
	.cfi_def_cfa_offset 16
	pushq	%r15
.Ltmp955:
	.cfi_def_cfa_offset 24
	pushq	%r14
.Ltmp956:
	.cfi_def_cfa_offset 32
	pushq	%rbx
.Ltmp957:
	.cfi_def_cfa_offset 40
	pushq	%rax
.Ltmp958:
	.cfi_def_cfa_offset 48
.Ltmp959:
	.cfi_offset %rbx, -40
.Ltmp960:
	.cfi_offset %r14, -32
.Ltmp961:
	.cfi_offset %r15, -24
.Ltmp962:
	.cfi_offset %rbp, -16
	movq	%rsi, %r15
	movq	%rdi, %rbp
	movl	16(%rbp), %eax
	movl	$-1, %r14d
	testl	%eax, %eax
	jle	.LBB208_8
# BB#1:
	movq	8(%rbp), %rcx
	xorl	%ebx, %ebx
	.align	16, 0x90
.LBB208_2:                              # %_label36
                                        # =>This Inner Loop Header: Depth=1
	movslq	%ebx, %rdx
	movq	(%rcx,%rdx,8), %rdi
	testq	%rdi, %rdi
	jne	.LBB208_3
# BB#6:                                 # %_label44
                                        #   in Loop: Header=BB208_2 Depth=1
	testq	%r15, %r15
	jne	.LBB208_5
	jmp	.LBB208_7
	.align	16, 0x90
.LBB208_3:                              # %_label43
                                        #   in Loop: Header=BB208_2 Depth=1
	movq	(%rdi), %rax
	movq	%r15, %rsi
	callq	*80(%rax)
	testb	$1, %al
	jne	.LBB208_7
# BB#4:                                 # %_label43._label41_crit_edge
                                        #   in Loop: Header=BB208_2 Depth=1
	movl	16(%rbp), %eax
	movq	8(%rbp), %rcx
.LBB208_5:                              # %_label41
                                        #   in Loop: Header=BB208_2 Depth=1
	incl	%ebx
	cmpl	%eax, %ebx
	jl	.LBB208_2
	jmp	.LBB208_8
.LBB208_7:
	movl	%ebx, %r14d
.LBB208_8:                              # %_label39
	movl	%r14d, %eax
	addq	$8, %rsp
	popq	%rbx
	popq	%r14
	popq	%r15
	popq	%rbp
	ret
.Ltmp963:
	.size	_Pshadow_Putility_CArrayList_MindexOf_CV, .Ltmp963-_Pshadow_Putility_CArrayList_MindexOf_CV
	.cfi_endproc

	.globl	_Pshadow_Putility_CArrayList_Madd_CV
	.align	16, 0x90
	.type	_Pshadow_Putility_CArrayList_Madd_CV,@function
_Pshadow_Putility_CArrayList_Madd_CV:   # @_Pshadow_Putility_CArrayList_Madd_CV
# BB#0:
	pushq	%rbp
	pushq	%r14
	pushq	%rbx
	subq	$16, %rsp
	movq	%rsi, %r14
	movq	%rdi, %rbx
	movl	16(%rbx), %ebp
	movl	36(%rbx), %eax
	cmpl	%ebp, %eax
	jl	.LBB209_6
# BB#1:                                 # %_label45
	movq	24(%rbx), %rax
	movl	56(%rax), %esi
	addl	%ebp, %ebp
	movl	%ebp, %edi
	callq	calloc
	movl	%ebp, 8(%rsp)
	movq	%rax, (%rsp)
	movl	16(%rbx), %ecx
	testl	%ecx, %ecx
	jle	.LBB209_5
# BB#2:                                 # %_label22.lr.ph.i
	movq	8(%rbx), %rdx
	xorl	%eax, %eax
	movq	(%rsp), %rcx
	.align	16, 0x90
.LBB209_3:                              # %_label22.i
                                        # =>This Inner Loop Header: Depth=1
	movslq	%eax, %rax
	movq	(%rdx,%rax,8), %rdx
	movq	%rdx, (%rcx,%rax,8)
	movq	8(%rbx), %rdx
	incl	%eax
	cmpl	16(%rbx), %eax
	jl	.LBB209_3
# BB#4:                                 # %_label23._label24_crit_edge.i
	movl	8(%rsp), %ebp
	movq	(%rsp), %rax
.LBB209_5:                              # %_Pshadow_Putility_CArrayList_Mgrow.exit
	movq	%rax, 8(%rbx)
	movl	%ebp, 16(%rbx)
	movl	36(%rbx), %eax
.LBB209_6:                              # %_label47
	movq	8(%rbx), %rcx
	movslq	%eax, %rax
	movq	%r14, (%rcx,%rax,8)
	incl	36(%rbx)
	incl	32(%rbx)
	movb	$1, %al
	addq	$16, %rsp
	popq	%rbx
	popq	%r14
	popq	%rbp
	ret
.Ltmp964:
	.size	_Pshadow_Putility_CArrayList_Madd_CV, .Ltmp964-_Pshadow_Putility_CArrayList_Madd_CV

	.globl	_Pshadow_Putility_CArrayList_Mcreate
	.align	16, 0x90
	.type	_Pshadow_Putility_CArrayList_Mcreate,@function
_Pshadow_Putility_CArrayList_Mcreate:   # @_Pshadow_Putility_CArrayList_Mcreate
# BB#0:
	pushq	%rbx
	movq	%rdi, %rbx
	movq	$_Pshadow_Putility_CArrayList_Mclass, (%rbx)
	movq	%rsi, 24(%rbx)
	movl	$0, 32(%rbx)
	movl	56(%rsi), %esi
	movl	$10, %edi
	callq	calloc
	movq	%rax, 8(%rbx)
	movl	$10, 16(%rbx)
	movl	$0, 36(%rbx)
	movq	%rbx, %rax
	popq	%rbx
	ret
.Ltmp965:
	.size	_Pshadow_Putility_CArrayList_Mcreate, .Ltmp965-_Pshadow_Putility_CArrayList_Mcreate

	.globl	_Pshadow_Putility_CArrayList_Msize
	.align	16, 0x90
	.type	_Pshadow_Putility_CArrayList_Msize,@function
_Pshadow_Putility_CArrayList_Msize:     # @_Pshadow_Putility_CArrayList_Msize
# BB#0:
	movl	36(%rdi), %eax
	ret
.Ltmp966:
	.size	_Pshadow_Putility_CArrayList_Msize, .Ltmp966-_Pshadow_Putility_CArrayList_Msize

	.globl	_P_CIllegalModificationException_Mcreate
	.align	16, 0x90
	.type	_P_CIllegalModificationException_Mcreate,@function
_P_CIllegalModificationException_Mcreate: # @_P_CIllegalModificationException_Mcreate
# BB#0:
	movq	$_P_CIllegalModificationException_Mclass, (%rdi)
	movq	%rdi, %rax
	ret
.Ltmp967:
	.size	_P_CIllegalModificationException_Mcreate, .Ltmp967-_P_CIllegalModificationException_Mcreate

	.globl	_Pshadow_Putility_CRandom_MnextUInt_Pshadow_Pstandard_Cuint
	.align	16, 0x90
	.type	_Pshadow_Putility_CRandom_MnextUInt_Pshadow_Pstandard_Cuint,@function
_Pshadow_Putility_CRandom_MnextUInt_Pshadow_Pstandard_Cuint: # @_Pshadow_Putility_CRandom_MnextUInt_Pshadow_Pstandard_Cuint
	.cfi_startproc
# BB#0:
	pushq	%rbx
.Ltmp970:
	.cfi_def_cfa_offset 16
.Ltmp971:
	.cfi_offset %rbx, -16
	movl	%esi, %ebx
	movq	(%rdi), %rax
	callq	*136(%rax)
	xorl	%edx, %edx
	divl	%ebx
	movl	%edx, %eax
	popq	%rbx
	ret
.Ltmp972:
	.size	_Pshadow_Putility_CRandom_MnextUInt_Pshadow_Pstandard_Cuint, .Ltmp972-_Pshadow_Putility_CRandom_MnextUInt_Pshadow_Pstandard_Cuint
	.cfi_endproc

	.globl	_Pshadow_Putility_CRandom_Mcreate
	.align	16, 0x90
	.type	_Pshadow_Putility_CRandom_Mcreate,@function
_Pshadow_Putility_CRandom_Mcreate:      # @_Pshadow_Putility_CRandom_Mcreate
	.cfi_startproc
# BB#0:
	pushq	%rbx
.Ltmp975:
	.cfi_def_cfa_offset 16
	subq	$16, %rsp
.Ltmp976:
	.cfi_def_cfa_offset 32
.Ltmp977:
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	movq	$_Pshadow_Putility_CRandom_Mclass, (%rbx)
	cmpq	$0, _Pshadow_Pstandard_CSystem_Minstance(%rip)
	jne	.LBB214_2
# BB#1:                                 # %_label0
	movl	$8, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_CSystem_Mclass, (%rax)
	movq	%rax, _Pshadow_Pstandard_CSystem_Minstance(%rip)
.LBB214_2:                              # %_label1
	leaq	(%rsp), %rsi
	movl	$1, %edi
	callq	clock_gettime
	xorl	%esi, %esi
	testl	%eax, %eax
	jne	.LBB214_4
# BB#3:
	imulq	$1000000000, (%rsp), %rsi # imm = 0x3B9ACA00
	addq	8(%rsp), %rsi
.LBB214_4:                              # %_Pshadow_Pstandard_CSystem_MnanoTime.exit
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*152(%rax)
	movq	%rbx, %rax
	addq	$16, %rsp
	popq	%rbx
	ret
.Ltmp978:
	.size	_Pshadow_Putility_CRandom_Mcreate, .Ltmp978-_Pshadow_Putility_CRandom_Mcreate
	.cfi_endproc

	.globl	_Pshadow_Putility_CRandom_Mcreate_Pshadow_Pstandard_Culong
	.align	16, 0x90
	.type	_Pshadow_Putility_CRandom_Mcreate_Pshadow_Pstandard_Culong,@function
_Pshadow_Putility_CRandom_Mcreate_Pshadow_Pstandard_Culong: # @_Pshadow_Putility_CRandom_Mcreate_Pshadow_Pstandard_Culong
# BB#0:
	pushq	%rbx
	movq	%rdi, %rbx
	movq	$_Pshadow_Putility_CRandom_Mclass, (%rbx)
	xorl	%edi, %edi
	callq	srand
	movq	%rbx, %rax
	popq	%rbx
	ret
.Ltmp979:
	.size	_Pshadow_Putility_CRandom_Mcreate_Pshadow_Pstandard_Culong, .Ltmp979-_Pshadow_Putility_CRandom_Mcreate_Pshadow_Pstandard_Culong

	.globl	_Pshadow_Putility_CRandom_MnextInt
	.align	16, 0x90
	.type	_Pshadow_Putility_CRandom_MnextInt,@function
_Pshadow_Putility_CRandom_MnextInt:     # @_Pshadow_Putility_CRandom_MnextInt
	.cfi_startproc
# BB#0:
	movq	(%rdi), %rax
	jmpq	*136(%rax)  # TAILCALL
.Ltmp980:
	.size	_Pshadow_Putility_CRandom_MnextInt, .Ltmp980-_Pshadow_Putility_CRandom_MnextInt
	.cfi_endproc

	.globl	_Pshadow_Putility_CRandom_MnextInt_Pshadow_Pstandard_Cint
	.align	16, 0x90
	.type	_Pshadow_Putility_CRandom_MnextInt_Pshadow_Pstandard_Cint,@function
_Pshadow_Putility_CRandom_MnextInt_Pshadow_Pstandard_Cint: # @_Pshadow_Putility_CRandom_MnextInt_Pshadow_Pstandard_Cint
	.cfi_startproc
# BB#0:
	movq	(%rdi), %rax
	movq	144(%rax), %rax
	jmpq	*%rax  # TAILCALL
.Ltmp981:
	.size	_Pshadow_Putility_CRandom_MnextInt_Pshadow_Pstandard_Cint, .Ltmp981-_Pshadow_Putility_CRandom_MnextInt_Pshadow_Pstandard_Cint
	.cfi_endproc

	.globl	_Pshadow_Putility_CRandom_Mseed_Pshadow_Pstandard_Culong
	.align	16, 0x90
	.type	_Pshadow_Putility_CRandom_Mseed_Pshadow_Pstandard_Culong,@function
_Pshadow_Putility_CRandom_Mseed_Pshadow_Pstandard_Culong: # @_Pshadow_Putility_CRandom_Mseed_Pshadow_Pstandard_Culong
# BB#0:
	xorl	%edi, %edi
	jmp	srand                   # TAILCALL
.Ltmp982:
	.size	_Pshadow_Putility_CRandom_Mseed_Pshadow_Pstandard_Culong, .Ltmp982-_Pshadow_Putility_CRandom_Mseed_Pshadow_Pstandard_Culong

	.globl	_Pshadow_Putility_CRandom_MnextUInt
	.align	16, 0x90
	.type	_Pshadow_Putility_CRandom_MnextUInt,@function
_Pshadow_Putility_CRandom_MnextUInt:    # @_Pshadow_Putility_CRandom_MnextUInt
# BB#0:
	jmp	rand                    # TAILCALL
.Ltmp983:
	.size	_Pshadow_Putility_CRandom_MnextUInt, .Ltmp983-_Pshadow_Putility_CRandom_MnextUInt

	.globl	_Pshadow_Ptest_CArrayTest_Mcreate
	.align	16, 0x90
	.type	_Pshadow_Ptest_CArrayTest_Mcreate,@function
_Pshadow_Ptest_CArrayTest_Mcreate:      # @_Pshadow_Ptest_CArrayTest_Mcreate
# BB#0:
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rdi)
	movq	$_Pshadow_Ptest_CArrayTest_Mclass, (%rdi)
	movq	%rdi, %rax
	ret
.Ltmp984:
	.size	_Pshadow_Ptest_CArrayTest_Mcreate, .Ltmp984-_Pshadow_Ptest_CArrayTest_Mcreate

	.globl	_Pshadow_Ptest_CArrayTest_Mmain_Pshadow_Pstandard_CString_A1
	.align	16, 0x90
	.type	_Pshadow_Ptest_CArrayTest_Mmain_Pshadow_Pstandard_CString_A1,@function
_Pshadow_Ptest_CArrayTest_Mmain_Pshadow_Pstandard_CString_A1: # @_Pshadow_Ptest_CArrayTest_Mmain_Pshadow_Pstandard_CString_A1
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp992:
	.cfi_def_cfa_offset 16
	pushq	%r15
.Ltmp993:
	.cfi_def_cfa_offset 24
	pushq	%r14
.Ltmp994:
	.cfi_def_cfa_offset 32
	pushq	%r13
.Ltmp995:
	.cfi_def_cfa_offset 40
	pushq	%r12
.Ltmp996:
	.cfi_def_cfa_offset 48
	pushq	%rbx
.Ltmp997:
	.cfi_def_cfa_offset 56
	subq	$40, %rsp
.Ltmp998:
	.cfi_def_cfa_offset 96
.Ltmp999:
	.cfi_offset %rbx, -56
.Ltmp1000:
	.cfi_offset %r12, -48
.Ltmp1001:
	.cfi_offset %r13, -40
.Ltmp1002:
	.cfi_offset %r14, -32
.Ltmp1003:
	.cfi_offset %r15, -24
.Ltmp1004:
	.cfi_offset %rbp, -16
	movl	$1, %edi
	movl	$4, %esi
	callq	calloc
	movq	%rax, %r14
	movq	%r14, 24(%rsp)
	movl	$1, 32(%rsp)
	movl	$5, (%r14)
	movl	$40, %edi
	callq	malloc
	movq	%rax, %rbp
	movq	$_Pshadow_Pstandard_CArray_Mclass, (%rbp)
	movq	%rbp, %rdi
	movl	$_Pshadow_Pstandard_CObject_Mclass, %esi
	movq	%r14, %rdx
	movl	$1, %ecx
	callq	_Pshadow_Pstandard_CArray_Mcreate_Pshadow_Pstandard_Cint_A1
	movq	%rbp, 16(%rsp)
	movq	_Pshadow_Pio_CConsole_Minstance(%rip), %rbp
	testq	%rbp, %rbp
	jne	.LBB221_2
# BB#1:                                 # %_label0
	movl	_Pshadow_Pio_CConsole_Mclass+52(%rip), %edi
	callq	malloc
	movq	%rax, %rbp
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rbp)
	movq	$_Pshadow_Pio_CConsole_Mclass, (%rbp)
	movb	$0, 8(%rbp)
	movq	%rbp, _Pshadow_Pio_CConsole_Minstance(%rip)
.LBB221_2:                              # %_label1
	movq	(%rbp), %rax
	movq	112(%rax), %r15
	movl	$1, %edi
	movl	$4, %esi
	callq	calloc
	movq	%rax, %rbx
	movl	$1, (%rbx)
	movl	$40, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_CArray_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_Cint_Mclass, 24(%rax)
	movq	%rbx, 8(%rax)
	movl	$1, 16(%rax)
	movq	%r14, 32(%rax)
	movq	%rbp, %rdi
	movq	%rax, %rsi
	callq	*%r15
	movq	(%rax), %rcx
	movq	16(%rsp), %rsi
	movq	%rax, %rdi
	callq	*160(%rcx)
	movq	24(%rsp), %rax
	movl	$0, (%rax)
	movq	16(%rsp), %rbx
	movq	(%rbx), %rax
	movq	144(%rax), %rbp
	movl	32(%rsp), %r15d
	movq	24(%rsp), %r14
	movl	$16, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_Cint_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_Cint_Mclass, (%rax)
	movl	$0, 8(%rax)
	movq	%rbx, %rdi
	movq	%r14, %rsi
	movl	%r15d, %edx
	movq	%rax, %rcx
	callq	*%rbp
	movq	_Pshadow_Pio_CConsole_Minstance(%rip), %rbx
	testq	%rbx, %rbx
	jne	.LBB221_4
# BB#3:                                 # %_label2
	movl	_Pshadow_Pio_CConsole_Mclass+52(%rip), %edi
	callq	malloc
	movq	%rax, %rbx
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rbx)
	movq	$_Pshadow_Pio_CConsole_Mclass, (%rbx)
	movb	$0, 8(%rbx)
	movq	%rbx, _Pshadow_Pio_CConsole_Minstance(%rip)
.LBB221_4:                              # %_label3
	movq	(%rbx), %rax
	movq	112(%rax), %r12
	movl	$1, %edi
	movl	$4, %esi
	callq	calloc
	movq	%rax, %rbp
	movl	%r15d, (%rbp)
	movl	$40, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_CArray_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_Cint_Mclass, 24(%rax)
	movq	%rbp, 8(%rax)
	movl	$1, 16(%rax)
	movq	%r14, 32(%rax)
	movq	%rbx, %rdi
	movq	%rax, %rsi
	callq	*%r12
	movq	(%rax), %rcx
	movq	16(%rsp), %rsi
	movq	%rax, %rdi
	callq	*160(%rcx)
	movq	24(%rsp), %rax
	movl	$1, (%rax)
	movq	16(%rsp), %rbx
	movq	(%rbx), %rax
	movq	144(%rax), %rbp
	movl	32(%rsp), %r15d
	movq	24(%rsp), %r14
	movl	$16, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_Ccode_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_Ccode_Mclass, (%rax)
	movl	$50, 8(%rax)
	movq	%rbx, %rdi
	movq	%r14, %rsi
	movl	%r15d, %edx
	movq	%rax, %rcx
	callq	*%rbp
	movq	_Pshadow_Pio_CConsole_Minstance(%rip), %rbx
	testq	%rbx, %rbx
	jne	.LBB221_6
# BB#5:                                 # %_label4
	movl	_Pshadow_Pio_CConsole_Mclass+52(%rip), %edi
	callq	malloc
	movq	%rax, %rbx
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rbx)
	movq	$_Pshadow_Pio_CConsole_Mclass, (%rbx)
	movb	$0, 8(%rbx)
	movq	%rbx, _Pshadow_Pio_CConsole_Minstance(%rip)
.LBB221_6:                              # %_label5
	movq	(%rbx), %rax
	movq	112(%rax), %r12
	movl	$1, %edi
	movl	$4, %esi
	callq	calloc
	movq	%rax, %rbp
	movl	%r15d, (%rbp)
	movl	$40, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_CArray_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_Cint_Mclass, 24(%rax)
	movq	%rbp, 8(%rax)
	movl	$1, 16(%rax)
	movq	%r14, 32(%rax)
	movq	%rbx, %rdi
	movq	%rax, %rsi
	callq	*%r12
	movq	(%rax), %rcx
	movq	16(%rsp), %rsi
	movq	%rax, %rdi
	callq	*160(%rcx)
	movq	24(%rsp), %rax
	movl	$2, (%rax)
	movq	16(%rsp), %rdi
	movq	(%rdi), %rax
	movl	32(%rsp), %r15d
	movq	24(%rsp), %r14
	movq	%r14, %rsi
	movl	%r15d, %edx
	movl	$.L_string1482, %ecx
	callq	*144(%rax)
	movq	_Pshadow_Pio_CConsole_Minstance(%rip), %rbx
	testq	%rbx, %rbx
	jne	.LBB221_8
# BB#7:                                 # %_label6
	movl	_Pshadow_Pio_CConsole_Mclass+52(%rip), %edi
	callq	malloc
	movq	%rax, %rbx
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rbx)
	movq	$_Pshadow_Pio_CConsole_Mclass, (%rbx)
	movb	$0, 8(%rbx)
	movq	%rbx, _Pshadow_Pio_CConsole_Minstance(%rip)
.LBB221_8:                              # %_label7
	movq	(%rbx), %rax
	movq	112(%rax), %r12
	movl	$1, %edi
	movl	$4, %esi
	callq	calloc
	movq	%rax, %rbp
	movl	%r15d, (%rbp)
	movl	$40, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_CArray_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_Cint_Mclass, 24(%rax)
	movq	%rbp, 8(%rax)
	movl	$1, 16(%rax)
	movq	%r14, 32(%rax)
	movq	%rbx, %rdi
	movq	%rax, %rsi
	callq	*%r12
	movq	(%rax), %rcx
	movq	16(%rsp), %rsi
	movq	%rax, %rdi
	callq	*160(%rcx)
	movq	24(%rsp), %rax
	movl	$3, (%rax)
	movq	16(%rsp), %rbx
	movq	(%rbx), %rax
	movq	144(%rax), %rbp
	movl	32(%rsp), %r15d
	movq	24(%rsp), %r14
	movl	$16, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_Cint_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_Cint_Mclass, (%rax)
	movl	$88, 8(%rax)
	movq	%rbx, %rdi
	movq	%r14, %rsi
	movl	%r15d, %edx
	movq	%rax, %rcx
	callq	*%rbp
	movq	_Pshadow_Pio_CConsole_Minstance(%rip), %rbx
	testq	%rbx, %rbx
	jne	.LBB221_10
# BB#9:                                 # %_label8
	movl	_Pshadow_Pio_CConsole_Mclass+52(%rip), %edi
	callq	malloc
	movq	%rax, %rbx
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rbx)
	movq	$_Pshadow_Pio_CConsole_Mclass, (%rbx)
	movb	$0, 8(%rbx)
	movq	%rbx, _Pshadow_Pio_CConsole_Minstance(%rip)
.LBB221_10:                             # %_label9
	movq	(%rbx), %rax
	movq	112(%rax), %r12
	movl	$1, %edi
	movl	$4, %esi
	callq	calloc
	movq	%rax, %rbp
	movl	%r15d, (%rbp)
	movl	$40, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_CArray_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_Cint_Mclass, 24(%rax)
	movq	%rbp, 8(%rax)
	movl	$1, 16(%rax)
	movq	%r14, 32(%rax)
	movq	%rbx, %rdi
	movq	%rax, %rsi
	callq	*%r12
	movq	(%rax), %rcx
	movq	16(%rsp), %rsi
	movq	%rax, %rdi
	callq	*160(%rcx)
	movq	24(%rsp), %rax
	movl	$4, (%rax)
	movq	16(%rsp), %rdi
	movq	(%rdi), %rax
	movl	32(%rsp), %r15d
	movq	24(%rsp), %r14
	movq	%r14, %rsi
	movl	%r15d, %edx
	xorl	%ecx, %ecx
	callq	*144(%rax)
	movq	_Pshadow_Pio_CConsole_Minstance(%rip), %rbx
	testq	%rbx, %rbx
	jne	.LBB221_12
# BB#11:                                # %_label10
	movl	_Pshadow_Pio_CConsole_Mclass+52(%rip), %edi
	callq	malloc
	movq	%rax, %rbx
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rbx)
	movq	$_Pshadow_Pio_CConsole_Mclass, (%rbx)
	movb	$0, 8(%rbx)
	movq	%rbx, _Pshadow_Pio_CConsole_Minstance(%rip)
.LBB221_12:                             # %_label11
	movq	(%rbx), %rax
	movq	112(%rax), %r12
	movl	$1, %edi
	movl	$4, %esi
	callq	calloc
	movq	%rax, %rbp
	movl	%r15d, (%rbp)
	movl	$40, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_CArray_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_Cint_Mclass, 24(%rax)
	movq	%rbp, 8(%rax)
	movl	$1, 16(%rax)
	movq	%r14, 32(%rax)
	movq	%rbx, %rdi
	movq	%rax, %rsi
	callq	*%r12
	movq	(%rax), %rcx
	movq	16(%rsp), %rsi
	movq	%rax, %rdi
	callq	*160(%rcx)
	movq	_Pshadow_Pio_CConsole_Minstance(%rip), %rax
	testq	%rax, %rax
	jne	.LBB221_14
# BB#13:                                # %_label12
	movl	_Pshadow_Pio_CConsole_Mclass+52(%rip), %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rax)
	movq	$_Pshadow_Pio_CConsole_Mclass, (%rax)
	movb	$0, 8(%rax)
	movq	%rax, _Pshadow_Pio_CConsole_Minstance(%rip)
.LBB221_14:                             # %_label13
	movq	(%rax), %rcx
	movq	%rax, %rdi
	callq	*168(%rcx)
	movq	16(%rsp), %rdi
	movq	(%rdi), %rax
	callq	*64(%rax)
	movq	%rax, 8(%rsp)           # 8-byte Spill
	movq	(%rax), %rcx
	movq	%rax, %rdi
	movl	$1, %esi
	movl	$4, %edx
	callq	*168(%rcx)
	movq	%rax, %r15
	movq	24(%rsp), %rbx
	movl	$0, (%rbx)
	movq	16(%rsp), %rdi
	movq	(%rdi), %rax
	callq	*160(%rax)
	testl	%eax, %eax
	jle	.LBB221_16
	.align	16, 0x90
.LBB221_15:                             # %_label14
                                        # =>This Inner Loop Header: Depth=1
	movq	16(%rsp), %rbp
	movq	(%rbp), %rax
	movq	144(%rax), %r13
	movq	24(%rsp), %rbx
	movl	(%rbx), %r14d
	movl	32(%rsp), %r12d
	movl	$16, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_Cint_Mclass, (%rax)
	movq	$_Pshadow_Pstandard_Cint_Mclass, (%rax)
	movl	%r14d, 8(%rax)
	movq	%rbp, %rdi
	movq	%rbx, %rsi
	movl	%r12d, %edx
	movq	%rax, %rcx
	callq	*%r13
	movq	24(%rsp), %rbx
	movl	(%rbx), %ebp
	incl	%ebp
	movl	%ebp, (%rbx)
	movq	16(%rsp), %rdi
	movq	(%rdi), %rax
	callq	*160(%rax)
	cmpl	%eax, %ebp
	jl	.LBB221_15
.LBB221_16:                             # %_label16
	movl	$0, (%rbx)
	movq	(%r15), %rax
	movl	32(%rsp), %edx
	movq	24(%rsp), %rsi
	movq	%r15, %rdi
	movl	$.L_string2484, %ecx
	callq	*144(%rax)
	movq	24(%rsp), %rax
	movl	$1, (%rax)
	movq	(%r15), %rax
	movl	32(%rsp), %edx
	movq	24(%rsp), %rsi
	movq	%r15, %rdi
	movl	$.L_string3486, %ecx
	callq	*144(%rax)
	movq	24(%rsp), %rax
	movl	$2, (%rax)
	movq	(%r15), %rax
	movl	32(%rsp), %edx
	movq	24(%rsp), %rsi
	movq	%r15, %rdi
	movl	$.L_string4488, %ecx
	callq	*144(%rax)
	movq	_Pshadow_Pio_CConsole_Minstance(%rip), %rax
	testq	%rax, %rax
	jne	.LBB221_18
# BB#17:                                # %_label17
	movl	_Pshadow_Pio_CConsole_Mclass+52(%rip), %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rax)
	movq	$_Pshadow_Pio_CConsole_Mclass, (%rax)
	movb	$0, 8(%rax)
	movq	%rax, _Pshadow_Pio_CConsole_Minstance(%rip)
.LBB221_18:                             # %_label18
	movq	(%rax), %rcx
	movq	16(%rsp), %rsi
	movq	%rax, %rdi
	callq	*160(%rcx)
	movq	_Pshadow_Pio_CConsole_Minstance(%rip), %rax
	testq	%rax, %rax
	jne	.LBB221_20
# BB#19:                                # %_label19
	movl	_Pshadow_Pio_CConsole_Mclass+52(%rip), %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rax)
	movq	$_Pshadow_Pio_CConsole_Mclass, (%rax)
	movb	$0, 8(%rax)
	movq	%rax, _Pshadow_Pio_CConsole_Minstance(%rip)
.LBB221_20:                             # %_label20
	movq	(%rax), %rcx
	movq	%rax, %rdi
	movq	8(%rsp), %rsi           # 8-byte Reload
	callq	*160(%rcx)
	movq	_Pshadow_Pio_CConsole_Minstance(%rip), %rax
	testq	%rax, %rax
	jne	.LBB221_22
# BB#21:                                # %_label21
	movl	_Pshadow_Pio_CConsole_Mclass+52(%rip), %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rax)
	movq	$_Pshadow_Pio_CConsole_Mclass, (%rax)
	movb	$0, 8(%rax)
	movq	%rax, _Pshadow_Pio_CConsole_Minstance(%rip)
.LBB221_22:                             # %_label22
	movq	(%rax), %rcx
	movq	%rax, %rdi
	movq	%r15, %rsi
	callq	*160(%rcx)
	movq	16(%rsp), %rdi
	movq	(%rdi), %rax
	callq	*160(%rax)
	testl	%eax, %eax
	js	.LBB221_30
# BB#23:
	xorl	%r14d, %r14d
	.align	16, 0x90
.LBB221_24:                             # %_label23
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB221_26 Depth 2
	movq	16(%rsp), %rdi
	movq	(%rdi), %rax
	callq	*160(%rax)
	cmpl	%eax, %r14d
	jg	.LBB221_29
# BB#25:                                # %_label26.lr.ph
                                        #   in Loop: Header=BB221_24 Depth=1
	movq	16(%rsp), %r15
	movl	%r14d, %ebp
	.align	16, 0x90
.LBB221_26:                             # %_label26
                                        #   Parent Loop BB221_24 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movq	_Pshadow_Pio_CConsole_Minstance(%rip), %rbx
	testq	%rbx, %rbx
	jne	.LBB221_28
# BB#27:                                # %_label29
                                        #   in Loop: Header=BB221_26 Depth=2
	movl	_Pshadow_Pio_CConsole_Mclass+52(%rip), %edi
	callq	malloc
	movq	%rax, %rbx
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rbx)
	movq	$_Pshadow_Pio_CConsole_Mclass, (%rbx)
	movb	$0, 8(%rbx)
	movq	%rbx, _Pshadow_Pio_CConsole_Minstance(%rip)
.LBB221_28:                             # %_label30
                                        #   in Loop: Header=BB221_26 Depth=2
	movq	(%rbx), %rax
	movq	160(%rax), %r12
	movq	(%r15), %rax
	movq	%r15, %rdi
	movl	%r14d, %esi
	movl	%ebp, %edx
	callq	*168(%rax)
	movq	%rbx, %rdi
	movq	%rax, %rsi
	callq	*%r12
	movq	(%r15), %rax
	movq	%r15, %rdi
	callq	*160(%rax)
	incl	%ebp
	cmpl	%eax, %ebp
	jle	.LBB221_26
.LBB221_29:                             # %_label28
                                        #   in Loop: Header=BB221_24 Depth=1
	movq	16(%rsp), %rdi
	movq	(%rdi), %rax
	callq	*160(%rax)
	incl	%r14d
	cmpl	%eax, %r14d
	jle	.LBB221_24
.LBB221_30:                             # %_label25
	addq	$40, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	ret
.Ltmp1005:
	.size	_Pshadow_Ptest_CArrayTest_Mmain_Pshadow_Pstandard_CString_A1, .Ltmp1005-_Pshadow_Ptest_CArrayTest_Mmain_Pshadow_Pstandard_CString_A1
	.cfi_endproc

	.globl	main
	.align	16, 0x90
	.type	main,@function
main:                                   # @main
	.cfi_startproc
	.cfi_personality 3, __shadow_personality_v0
.Leh_func_begin222:
	.cfi_lsda 3, .Lexception222
# BB#0:
	pushq	%rbp
.Ltmp1016:
	.cfi_def_cfa_offset 16
	pushq	%r15
.Ltmp1017:
	.cfi_def_cfa_offset 24
	pushq	%r14
.Ltmp1018:
	.cfi_def_cfa_offset 32
	pushq	%r13
.Ltmp1019:
	.cfi_def_cfa_offset 40
	pushq	%r12
.Ltmp1020:
	.cfi_def_cfa_offset 48
	pushq	%rbx
.Ltmp1021:
	.cfi_def_cfa_offset 56
	pushq	%rax
.Ltmp1022:
	.cfi_def_cfa_offset 64
.Ltmp1023:
	.cfi_offset %rbx, -56
.Ltmp1024:
	.cfi_offset %r12, -48
.Ltmp1025:
	.cfi_offset %r13, -40
.Ltmp1026:
	.cfi_offset %r14, -32
.Ltmp1027:
	.cfi_offset %r15, -24
.Ltmp1028:
	.cfi_offset %rbp, -16
	movq	%rsi, %r12
	movl	%edi, %r15d
	decl	%r15d
	movl	%r15d, %edi
	movl	$8, %esi
	callq	calloc
	movq	%rax, %r14
	movq	8(%r12), %r13
	testq	%r13, %r13
	je	.LBB222_3
# BB#1:                                 # %.lr.ph.preheader
	addq	$16, %r12
	movq	%r14, %rbp
	.align	16, 0x90
.LBB222_2:                              # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	movl	$32, %edi
	callq	malloc
	movq	%rax, %rbx
	movq	$_Pshadow_Pstandard_CString_Mclass, (%rbx)
	movq	%r13, 8(%rbx)
	movq	%r13, %rdi
	callq	strlen
	movq	$_Pshadow_Pstandard_CString_Mclass, (%rbx)
	movl	%eax, 16(%rbx)
	movq	%rbx, (%rbp)
	addq	$8, %rbp
	movq	(%r12), %r13
	addq	$8, %r12
	testq	%r13, %r13
	jne	.LBB222_2
.LBB222_3:                              # %._crit_edge
	movl	$8, %edi
	callq	malloc
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rax)
	movq	$_Pshadow_Ptest_CArrayTest_Mclass, (%rax)
.Ltmp1006:
	movq	%rax, %rdi
	movq	%r14, %rsi
	movl	%r15d, %edx
	callq	_Pshadow_Ptest_CArrayTest_Mmain_Pshadow_Pstandard_CString_A1
.Ltmp1007:
.LBB222_4:
	addq	$8, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	ret
.LBB222_5:
.Ltmp1008:
	movq	32(%rax), %r14
	movq	%rax, %rdi
	callq	free
	movq	_Pshadow_Pio_CConsole_Minstance(%rip), %rbx
	testq	%rbx, %rbx
	jne	.LBB222_7
# BB#6:
	movl	$16, %edi
	callq	malloc
	movq	%rax, %rbx
	movq	$_Pshadow_Pstandard_CObject_Mclass, (%rbx)
	movq	$_Pshadow_Pio_CConsole_Mclass, (%rbx)
	movb	$0, 8(%rbx)
	movq	%rbx, _Pshadow_Pio_CConsole_Minstance(%rip)
.LBB222_7:
	movq	(%rbx), %rax
	movq	136(%rax), %rbp
	movq	(%r14), %rdi
	movl	$.L_string1424, %eax
	testq	%rdi, %rdi
	je	.LBB222_9
# BB#8:                                 # %_label1.i
	movq	(%rdi), %rax
	callq	*104(%rax)
.LBB222_9:                              # %_Pshadow_Pio_CConsole_MprintError_Pshadow_Pstandard_CObject.exit
	movq	%rbx, %rdi
	movq	%rax, %rsi
	callq	*%rbp
	movq	8(%r14), %rbx
	cmpl	$0, 16(%rbx)
	je	.LBB222_11
# BB#10:
	movq	.Lseparator+8(%rip), %rsi
	movl	.Lseparator+16(%rip), %edx
	movl	$2, %edi
	callq	write
	movl	16(%rbx), %edx
	movq	8(%rbx), %rsi
	movl	$2, %edi
	callq	write
.LBB222_11:
	movl	$2, %edi
	movl	$.Lnewline, %esi
	movl	$1, %edx
	callq	write
	movl	$1, %eax
	jmp	.LBB222_4
.Ltmp1029:
	.size	main, .Ltmp1029-main
	.cfi_endproc
.Leh_func_end222:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table222:
.Lexception222:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.asciz	 "\242\200\200"         # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	26                      # Call site table length
.Lset0 = .Ltmp1006-.Leh_func_begin222   # >> Call Site 1 <<
	.long	.Lset0
.Lset1 = .Ltmp1007-.Ltmp1006            #   Call between .Ltmp1006 and .Ltmp1007
	.long	.Lset1
.Lset2 = .Ltmp1008-.Leh_func_begin222   #     jumps to .Ltmp1008
	.long	.Lset2
	.byte	1                       #   On action: 1
.Lset3 = .Ltmp1007-.Leh_func_begin222   # >> Call Site 2 <<
	.long	.Lset3
.Lset4 = .Leh_func_end222-.Ltmp1007     #   Call between .Ltmp1007 and .Leh_func_end222
	.long	.Lset4
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
                                        # >> Catch TypeInfos <<
	.long	0                       # TypeInfo 1
	.align	4

	.type	.Lshadow.exception.class,@object # @shadow.exception.class
	.section	.rodata.cst8,"aM",@progbits,8
	.align	8
.Lshadow.exception.class:
	.asciz	 "Shadow\000"
	.size	.Lshadow.exception.class, 8

	.type	.Lnewline,@object       # @newline
	.section	.rodata,"a",@progbits
.Lnewline:
	.byte	10
	.size	.Lnewline, 1

	.type	_Pshadow_Pstandard_CArray_Mclass,@object # @_Pshadow_Pstandard_CArray_Mclass
	.globl	_Pshadow_Pstandard_CArray_Mclass
	.align	16
_Pshadow_Pstandard_CArray_Mclass:
	.quad	_Pshadow_Pstandard_CClass_Mclass
	.zero	16
	.quad	0
	.quad	.L_string0
	.quad	_Pshadow_Pstandard_CObject_Mclass
	.long	0                       # 0x0
	.long	(0+40)&-1
	.long	(0+8)&-1
	.zero	4
	.quad	_Pshadow_Pstandard_CArray_Mcopy
	.quad	_Pshadow_Pstandard_CObject_Mcreate
	.quad	_Pshadow_Pstandard_CObject_Mequals_Pshadow_Pstandard_CObject
	.quad	_Pshadow_Pstandard_CObject_Mfreeze
	.quad	_Pshadow_Pstandard_CObject_MgetClass
	.quad	_Pshadow_Pstandard_CArray_MtoString
	.quad	_Pshadow_Pstandard_CArray_Mcreate_Pshadow_Pstandard_Cint_A1
	.quad	_Pshadow_Pstandard_CArray_Mdims
	.quad	_Pshadow_Pstandard_CArray_MgetBaseClass
	.quad	_Pshadow_Pstandard_CArray_Mindex_Pshadow_Pstandard_Cint_A1
	.quad	_Pshadow_Pstandard_CArray_Mindex_Pshadow_Pstandard_Cint_A1_CT
	.quad	_Pshadow_Pstandard_CArray_Mlengths
	.quad	_Pshadow_Pstandard_CArray_Msize
	.quad	_Pshadow_Pstandard_CArray_Msubarray_Pshadow_Pstandard_Cint_Pshadow_Pstandard_Cint
	.size	_Pshadow_Pstandard_CArray_Mclass, 176

	.type	.L_array0,@object       # @_array0
	.align	16
.L_array0:
	.ascii	 "shadow.standard@Array<T>"
	.size	.L_array0, 24

	.type	.L_string0,@object      # @_string0
	.align	16
.L_string0:
	.quad	_Pshadow_Pstandard_CString_Mclass
	.quad	.L_array0
	.long	24                      # 0x18
	.zero	4
	.byte	1                       # 0x1
	.zero	7
	.size	.L_string0, 32

	.type	.L_array1,@object       # @_array1
.L_array1:
	.ascii	 "[]"
	.size	.L_array1, 2

	.type	.L_string1,@object      # @_string1
	.align	16
.L_string1:
	.quad	_Pshadow_Pstandard_CString_Mclass
	.quad	.L_array1
	.long	2                       # 0x2
	.zero	4
	.byte	1                       # 0x1
	.zero	7
	.size	.L_string1, 32

	.type	.L_array2,@object       # @_array2
.L_array2:
	.ascii	 "[ "
	.size	.L_array2, 2

	.type	.L_string2,@object      # @_string2
	.align	16
.L_string2:
	.quad	_Pshadow_Pstandard_CString_Mclass
	.quad	.L_array2
	.long	2                       # 0x2
	.zero	4
	.byte	1                       # 0x1
	.zero	7
	.size	.L_string2, 32

	.type	.L_array3,@object       # @_array3
.L_array3:
	.ascii	 ", "
	.size	.L_array3, 2

	.type	.L_string3,@object      # @_string3
	.align	16
.L_string3:
	.quad	_Pshadow_Pstandard_CString_Mclass
	.quad	.L_array3
	.long	2                       # 0x2
	.zero	4
	.byte	1                       # 0x1
	.zero	7
	.size	.L_string3, 32

	.type	.L_array4,@object       # @_array4
.L_array4:
	.ascii	 " ]"
	.size	.L_array4, 2

	.type	.L_string4,@object      # @_string4
	.align	16
.L_string4:
	.quad	_Pshadow_Pstandard_CString_Mclass
	.quad	.L_array4
	.long	2                       # 0x2
	.zero	4
	.byte	1                       # 0x1
	.zero	7
	.size	.L_string4, 32

	.type	_Pshadow_Pstandard_Cboolean_Mclass,@object # @_Pshadow_Pstandard_Cboolean_Mclass
	.globl	_Pshadow_Pstandard_Cboolean_Mclass
	.align	16
_Pshadow_Pstandard_Cboolean_Mclass:
	.quad	_Pshadow_Pstandard_CClass_Mclass
	.zero	16
	.quad	0
	.quad	.L_string012
	.quad	_Pshadow_Pstandard_CObject_Mclass
	.long	2                       # 0x2
	.long	(0+16)&-1
	.long	(0+1)&-1
	.zero	4
	.quad	_Pshadow_Pstandard_CObject_Mcopy
	.quad	_Pshadow_Pstandard_Cboolean_Mcreate
	.quad	_Pshadow_Pstandard_CObject_Mequals_Pshadow_Pstandard_CObject
	.quad	_Pshadow_Pstandard_CObject_Mfreeze
	.quad	_Pshadow_Pstandard_CObject_MgetClass
	.quad	_Pshadow_Pstandard_Cboolean_MtoString
	.size	_Pshadow_Pstandard_Cboolean_Mclass, 112

	.type	.L_array011,@object     # @_array011
.L_array011:
	.ascii	 "boolean"
	.size	.L_array011, 7

	.type	.L_string012,@object    # @_string012
	.align	16
.L_string012:
	.quad	_Pshadow_Pstandard_CString_Mclass
	.quad	.L_array011
	.long	7                       # 0x7
	.zero	4
	.byte	1                       # 0x1
	.zero	7
	.size	.L_string012, 32

	.type	.L_array113,@object     # @_array113
	.section	.rodata.cst4,"aM",@progbits,4
.L_array113:
	.ascii	 "true"
	.size	.L_array113, 4

	.type	.L_string114,@object    # @_string114
	.section	.rodata,"a",@progbits
	.align	16
.L_string114:
	.quad	_Pshadow_Pstandard_CString_Mclass
	.quad	.L_array113
	.long	4                       # 0x4
	.zero	4
	.byte	1                       # 0x1
	.zero	7
	.size	.L_string114, 32

	.type	.L_array215,@object     # @_array215
.L_array215:
	.ascii	 "false"
	.size	.L_array215, 5

	.type	.L_string216,@object    # @_string216
	.align	16
.L_string216:
	.quad	_Pshadow_Pstandard_CString_Mclass
	.quad	.L_array215
	.long	5                       # 0x5
	.zero	4
	.byte	1                       # 0x1
	.zero	7
	.size	.L_string216, 32

	.type	_Pshadow_Pstandard_Cbyte_Mclass,@object # @_Pshadow_Pstandard_Cbyte_Mclass
	.globl	_Pshadow_Pstandard_Cbyte_Mclass
	.align	16
_Pshadow_Pstandard_Cbyte_Mclass:
	.quad	_Pshadow_Pstandard_CClass_Mclass
	.zero	16
	.quad	0
	.quad	.L_string024
	.quad	_Pshadow_Pstandard_CObject_Mclass
	.long	2                       # 0x2
	.long	(0+16)&-1
	.long	(0+1)&-1
	.zero	4
	.quad	_Pshadow_Pstandard_CObject_Mcopy
	.quad	_Pshadow_Pstandard_Cbyte_Mcreate
	.quad	_Pshadow_Pstandard_CObject_Mequals_Pshadow_Pstandard_CObject
	.quad	_Pshadow_Pstandard_CObject_Mfreeze
	.quad	_Pshadow_Pstandard_CObject_MgetClass
	.quad	_Pshadow_Pstandard_Cbyte_MtoString
	.quad	_Pshadow_Pstandard_Cbyte_Mabs
	.quad	_Pshadow_Pstandard_Cbyte_Madd_Pshadow_Pstandard_Cbyte
	.quad	_Pshadow_Pstandard_Cbyte_Mcompare_Pshadow_Pstandard_Cbyte
	.quad	_Pshadow_Pstandard_Cbyte_Mdivide_Pshadow_Pstandard_Cbyte
	.quad	_Pshadow_Pstandard_Cbyte_Mmax_Pshadow_Pstandard_Cbyte
	.quad	_Pshadow_Pstandard_Cbyte_Mmin_Pshadow_Pstandard_Cbyte
	.quad	_Pshadow_Pstandard_Cbyte_Mmodulus_Pshadow_Pstandard_Cbyte
	.quad	_Pshadow_Pstandard_Cbyte_Mmultiply_Pshadow_Pstandard_Cbyte
	.quad	_Pshadow_Pstandard_Cbyte_Msubtract_Pshadow_Pstandard_Cbyte
	.quad	_Pshadow_Pstandard_Cbyte_MtoString_Pshadow_Pstandard_Cubyte
	.size	_Pshadow_Pstandard_Cbyte_Mclass, 192

	.type	.L_array023,@object     # @_array023
	.section	.rodata.cst4,"aM",@progbits,4
.L_array023:
	.ascii	 "byte"
	.size	.L_array023, 4

	.type	.L_string024,@object    # @_string024
	.section	.rodata,"a",@progbits
	.align	16
.L_string024:
	.quad	_Pshadow_Pstandard_CString_Mclass
	.quad	.L_array023
	.long	4                       # 0x4
	.zero	4
	.byte	1                       # 0x1
	.zero	7
	.size	.L_string024, 32

	.type	_Pshadow_Pstandard_CClass_Mclass,@object # @_Pshadow_Pstandard_CClass_Mclass
	.globl	_Pshadow_Pstandard_CClass_Mclass
	.align	16
_Pshadow_Pstandard_CClass_Mclass:
	.quad	_Pshadow_Pstandard_CClass_Mclass
	.zero	16
	.quad	0
	.quad	.L_string042
	.quad	_Pshadow_Pstandard_CObject_Mclass
	.long	0                       # 0x0
	.long	(0+64)&-1
	.long	(0+8)&-1
	.zero	4
	.quad	_Pshadow_Pstandard_CObject_Mcopy
	.quad	_Pshadow_Pstandard_CObject_Mcreate
	.quad	_Pshadow_Pstandard_CObject_Mequals_Pshadow_Pstandard_CObject
	.quad	_Pshadow_Pstandard_CObject_Mfreeze
	.quad	_Pshadow_Pstandard_CObject_MgetClass
	.quad	_Pshadow_Pstandard_CClass_MtoString
	.quad	_Pshadow_Pstandard_CClass_MisInterface
	.quad	_Pshadow_Pstandard_CClass_MisPrimitive
	.quad	_Pshadow_Pstandard_CClass_MisSubtype_Pshadow_Pstandard_CClass
	.quad	_Pshadow_Pstandard_CClass_Mparent
	.size	_Pshadow_Pstandard_CClass_Mclass, 144

	.type	.L_array041,@object     # @_array041
	.align	16
.L_array041:
	.ascii	 "shadow.standard@Class"
	.size	.L_array041, 21

	.type	.L_string042,@object    # @_string042
	.align	16
.L_string042:
	.quad	_Pshadow_Pstandard_CString_Mclass
	.quad	.L_array041
	.long	21                      # 0x15
	.zero	4
	.byte	1                       # 0x1
	.zero	7
	.size	.L_string042, 32

	.type	_Pshadow_Pstandard_Ccode_Mclass,@object # @_Pshadow_Pstandard_Ccode_Mclass
	.globl	_Pshadow_Pstandard_Ccode_Mclass
	.align	16
_Pshadow_Pstandard_Ccode_Mclass:
	.quad	_Pshadow_Pstandard_CClass_Mclass
	.zero	16
	.quad	0
	.quad	.L_string062
	.quad	_Pshadow_Pstandard_CObject_Mclass
	.long	2                       # 0x2
	.long	(0+16)&-1
	.long	(0+4)&-1
	.zero	4
	.quad	_Pshadow_Pstandard_CObject_Mcopy
	.quad	_Pshadow_Pstandard_Ccode_Mcreate
	.quad	_Pshadow_Pstandard_CObject_Mequals_Pshadow_Pstandard_CObject
	.quad	_Pshadow_Pstandard_CObject_Mfreeze
	.quad	_Pshadow_Pstandard_CObject_MgetClass
	.quad	_Pshadow_Pstandard_Ccode_MtoString
	.quad	_Pshadow_Pstandard_Ccode_MtoLowerCase
	.quad	_Pshadow_Pstandard_Ccode_MtoUpperCase
	.size	_Pshadow_Pstandard_Ccode_Mclass, 128

	.type	.L_array061,@object     # @_array061
	.section	.rodata.cst4,"aM",@progbits,4
.L_array061:
	.ascii	 "code"
	.size	.L_array061, 4

	.type	.L_string062,@object    # @_string062
	.section	.rodata,"a",@progbits
	.align	16
.L_string062:
	.quad	_Pshadow_Pstandard_CString_Mclass
	.quad	.L_array061
	.long	4                       # 0x4
	.zero	4
	.byte	1                       # 0x1
	.zero	7
	.size	.L_string062, 32

	.type	_Pshadow_Pstandard_Cdouble_Mclass,@object # @_Pshadow_Pstandard_Cdouble_Mclass
	.globl	_Pshadow_Pstandard_Cdouble_Mclass
	.align	16
_Pshadow_Pstandard_Cdouble_Mclass:
	.quad	_Pshadow_Pstandard_CClass_Mclass
	.zero	16
	.quad	0
	.quad	.L_string074
	.quad	_Pshadow_Pstandard_CObject_Mclass
	.long	2                       # 0x2
	.long	(0+16)&-1
	.long	(0+8)&-1
	.zero	4
	.quad	_Pshadow_Pstandard_CObject_Mcopy
	.quad	_Pshadow_Pstandard_Cdouble_Mcreate
	.quad	_Pshadow_Pstandard_CObject_Mequals_Pshadow_Pstandard_CObject
	.quad	_Pshadow_Pstandard_CObject_Mfreeze
	.quad	_Pshadow_Pstandard_CObject_MgetClass
	.quad	_Pshadow_Pstandard_Cdouble_MtoString
	.quad	_Pshadow_Pstandard_Cdouble_Madd_Pshadow_Pstandard_Cdouble
	.quad	_Pshadow_Pstandard_Cdouble_Mcompare_Pshadow_Pstandard_Cdouble
	.quad	_Pshadow_Pstandard_Cdouble_Mdivide_Pshadow_Pstandard_Cdouble
	.quad	_Pshadow_Pstandard_Cdouble_Mmodulus_Pshadow_Pstandard_Cdouble
	.quad	_Pshadow_Pstandard_Cdouble_Mmultiply_Pshadow_Pstandard_Cdouble
	.quad	_Pshadow_Pstandard_Cdouble_Msubtract_Pshadow_Pstandard_Cdouble
	.size	_Pshadow_Pstandard_Cdouble_Mclass, 160

	.type	.L_array073,@object     # @_array073
.L_array073:
	.ascii	 "double"
	.size	.L_array073, 6

	.type	.L_string074,@object    # @_string074
	.align	16
.L_string074:
	.quad	_Pshadow_Pstandard_CString_Mclass
	.quad	.L_array073
	.long	6                       # 0x6
	.zero	4
	.byte	1                       # 0x1
	.zero	7
	.size	.L_string074, 32

	.type	.Lformat,@object        # @format
	.section	.rodata.str1.1,"aMS",@progbits,1
.Lformat:
	.asciz	 "%f"
	.size	.Lformat, 3

	.type	_Pshadow_Pstandard_CException_Mclass,@object # @_Pshadow_Pstandard_CException_Mclass
	.section	.rodata,"a",@progbits
	.globl	_Pshadow_Pstandard_CException_Mclass
	.align	16
_Pshadow_Pstandard_CException_Mclass:
	.quad	_Pshadow_Pstandard_CClass_Mclass
	.zero	16
	.quad	0
	.quad	.L_string082
	.quad	_Pshadow_Pstandard_CObject_Mclass
	.long	0                       # 0x0
	.long	((0+8)&-1)*2
	.long	(0+8)&-1
	.zero	4
	.quad	_Pshadow_Pstandard_CObject_Mcopy
	.quad	_Pshadow_Pstandard_CException_Mcreate
	.quad	_Pshadow_Pstandard_CObject_Mequals_Pshadow_Pstandard_CObject
	.quad	_Pshadow_Pstandard_CObject_Mfreeze
	.quad	_Pshadow_Pstandard_CObject_MgetClass
	.quad	_Pshadow_Pstandard_CObject_MtoString
	.quad	_Pshadow_Pstandard_CException_Mcreate_Pshadow_Pstandard_CString
	.quad	_Pshadow_Pstandard_CException_Mmessage
	.quad	_Pshadow_Pstandard_CException_Mthrow__
	.size	_Pshadow_Pstandard_CException_Mclass, 136

	.type	.L_array081,@object     # @_array081
	.align	16
.L_array081:
	.ascii	 "shadow.standard@Exception"
	.size	.L_array081, 25

	.type	.L_string082,@object    # @_string082
	.align	16
.L_string082:
	.quad	_Pshadow_Pstandard_CString_Mclass
	.quad	.L_array081
	.long	25                      # 0x19
	.zero	4
	.byte	1                       # 0x1
	.zero	7
	.size	.L_string082, 32

	.type	.L_string184,@object    # @_string184
	.align	16
.L_string184:
	.quad	_Pshadow_Pstandard_CString_Mclass
	.quad	.Lseparator.data
	.long	2                       # 0x2
	.zero	4
	.byte	1                       # 0x1
	.zero	7
	.size	.L_string184, 32

	.type	.L_array285,@object     # @_array285
.L_array285:
	.size	.L_array285, 0

	.type	.L_string286,@object    # @_string286
	.align	16
.L_string286:
	.quad	_Pshadow_Pstandard_CString_Mclass
	.quad	.L_array285
	.zero	4
	.zero	4
	.byte	1                       # 0x1
	.zero	7
	.size	.L_string286, 32

	.type	_Pshadow_Pstandard_Cfloat_Mclass,@object # @_Pshadow_Pstandard_Cfloat_Mclass
	.globl	_Pshadow_Pstandard_Cfloat_Mclass
	.align	16
_Pshadow_Pstandard_Cfloat_Mclass:
	.quad	_Pshadow_Pstandard_CClass_Mclass
	.zero	16
	.quad	0
	.quad	.L_string098
	.quad	_Pshadow_Pstandard_CObject_Mclass
	.long	2                       # 0x2
	.long	(0+16)&-1
	.long	(0+4)&-1
	.zero	4
	.quad	_Pshadow_Pstandard_CObject_Mcopy
	.quad	_Pshadow_Pstandard_Cfloat_Mcreate
	.quad	_Pshadow_Pstandard_CObject_Mequals_Pshadow_Pstandard_CObject
	.quad	_Pshadow_Pstandard_CObject_Mfreeze
	.quad	_Pshadow_Pstandard_CObject_MgetClass
	.quad	_Pshadow_Pstandard_CObject_MtoString
	.quad	_Pshadow_Pstandard_Cfloat_Madd_Pshadow_Pstandard_Cfloat
	.quad	_Pshadow_Pstandard_Cfloat_Mcompare_Pshadow_Pstandard_Cfloat
	.quad	_Pshadow_Pstandard_Cfloat_Mdivide_Pshadow_Pstandard_Cfloat
	.quad	_Pshadow_Pstandard_Cfloat_Mmodulus_Pshadow_Pstandard_Cfloat
	.quad	_Pshadow_Pstandard_Cfloat_Mmultiply_Pshadow_Pstandard_Cfloat
	.quad	_Pshadow_Pstandard_Cfloat_Msubtract_Pshadow_Pstandard_Cfloat
	.size	_Pshadow_Pstandard_Cfloat_Mclass, 160

	.type	.L_array097,@object     # @_array097
.L_array097:
	.ascii	 "float"
	.size	.L_array097, 5

	.type	.L_string098,@object    # @_string098
	.align	16
.L_string098:
	.quad	_Pshadow_Pstandard_CString_Mclass
	.quad	.L_array097
	.long	5                       # 0x5
	.zero	4
	.byte	1                       # 0x1
	.zero	7
	.size	.L_string098, 32

	.type	_Pshadow_Pstandard_CIllegalArgumentException_Mclass,@object # @_Pshadow_Pstandard_CIllegalArgumentException_Mclass
	.globl	_Pshadow_Pstandard_CIllegalArgumentException_Mclass
	.align	16
_Pshadow_Pstandard_CIllegalArgumentException_Mclass:
	.quad	_Pshadow_Pstandard_CClass_Mclass
	.zero	16
	.quad	0
	.quad	.L_string0102
	.quad	_Pshadow_Pstandard_CException_Mclass
	.long	0                       # 0x0
	.long	(0+8)&-1
	.long	(0+8)&-1
	.zero	4
	.quad	_Pshadow_Pstandard_CObject_Mcopy
	.quad	_Pshadow_Pstandard_CIllegalArgumentException_Mcreate
	.quad	_Pshadow_Pstandard_CObject_Mequals_Pshadow_Pstandard_CObject
	.quad	_Pshadow_Pstandard_CObject_Mfreeze
	.quad	_Pshadow_Pstandard_CObject_MgetClass
	.quad	_Pshadow_Pstandard_CObject_MtoString
	.quad	_Pshadow_Pstandard_CException_Mcreate_Pshadow_Pstandard_CString
	.quad	_Pshadow_Pstandard_CException_Mmessage
	.quad	_Pshadow_Pstandard_CException_Mthrow__
	.size	_Pshadow_Pstandard_CIllegalArgumentException_Mclass, 136

	.type	.L_array0101,@object    # @_array0101
	.align	16
.L_array0101:
	.ascii	 "shadow.standard@IllegalArgumentException"
	.size	.L_array0101, 40

	.type	.L_string0102,@object   # @_string0102
	.align	16
.L_string0102:
	.quad	_Pshadow_Pstandard_CString_Mclass
	.quad	.L_array0101
	.long	40                      # 0x28
	.zero	4
	.byte	1                       # 0x1
	.zero	7
	.size	.L_string0102, 32

	.type	_Pshadow_Pstandard_CIndexOutOfBoundsException_Mclass,@object # @_Pshadow_Pstandard_CIndexOutOfBoundsException_Mclass
	.globl	_Pshadow_Pstandard_CIndexOutOfBoundsException_Mclass
	.align	16
_Pshadow_Pstandard_CIndexOutOfBoundsException_Mclass:
	.quad	_Pshadow_Pstandard_CClass_Mclass
	.zero	16
	.quad	0
	.quad	.L_string0106
	.quad	_Pshadow_Pstandard_CException_Mclass
	.long	0                       # 0x0
	.long	(0+8)&-1
	.long	(0+8)&-1
	.zero	4
	.quad	_Pshadow_Pstandard_CObject_Mcopy
	.quad	_Pshadow_Pstandard_CIndexOutOfBoundsException_Mcreate
	.quad	_Pshadow_Pstandard_CObject_Mequals_Pshadow_Pstandard_CObject
	.quad	_Pshadow_Pstandard_CObject_Mfreeze
	.quad	_Pshadow_Pstandard_CObject_MgetClass
	.quad	_Pshadow_Pstandard_CObject_MtoString
	.quad	_Pshadow_Pstandard_CException_Mcreate_Pshadow_Pstandard_CString
	.quad	_Pshadow_Pstandard_CException_Mmessage
	.quad	_Pshadow_Pstandard_CException_Mthrow__
	.quad	_Pshadow_Pstandard_CIndexOutOfBoundsException_Mcreate_Pshadow_Pstandard_Cint
	.size	_Pshadow_Pstandard_CIndexOutOfBoundsException_Mclass, 144

	.type	.L_array0105,@object    # @_array0105
	.align	16
.L_array0105:
	.ascii	 "shadow.standard@IndexOutOfBoundsException"
	.size	.L_array0105, 41

	.type	.L_string0106,@object   # @_string0106
	.align	16
.L_string0106:
	.quad	_Pshadow_Pstandard_CString_Mclass
	.quad	.L_array0105
	.long	41                      # 0x29
	.zero	4
	.byte	1                       # 0x1
	.zero	7
	.size	.L_string0106, 32

	.type	.L_array1107,@object    # @_array1107
.L_array1107:
	.ascii	 "index "
	.size	.L_array1107, 6

	.type	.L_string1108,@object   # @_string1108
	.align	16
.L_string1108:
	.quad	_Pshadow_Pstandard_CString_Mclass
	.quad	.L_array1107
	.long	6                       # 0x6
	.zero	4
	.byte	1                       # 0x1
	.zero	7
	.size	.L_string1108, 32

	.type	.L_array3111,@object    # @_array3111
.L_array3111:
	.ascii	 " out of bounds"
	.size	.L_array3111, 14

	.type	.L_string3112,@object   # @_string3112
	.align	16
.L_string3112:
	.quad	_Pshadow_Pstandard_CString_Mclass
	.quad	.L_array3111
	.long	14                      # 0xe
	.zero	4
	.byte	1                       # 0x1
	.zero	7
	.size	.L_string3112, 32

	.type	_Pshadow_Pstandard_Cint_Mclass,@object # @_Pshadow_Pstandard_Cint_Mclass
	.globl	_Pshadow_Pstandard_Cint_Mclass
	.align	16
_Pshadow_Pstandard_Cint_Mclass:
	.quad	_Pshadow_Pstandard_CClass_Mclass
	.zero	16
	.quad	0
	.quad	.L_string0118
	.quad	_Pshadow_Pstandard_CObject_Mclass
	.long	2                       # 0x2
	.long	(0+16)&-1
	.long	(0+4)&-1
	.zero	4
	.quad	_Pshadow_Pstandard_CObject_Mcopy
	.quad	_Pshadow_Pstandard_Cint_Mcreate
	.quad	_Pshadow_Pstandard_CObject_Mequals_Pshadow_Pstandard_CObject
	.quad	_Pshadow_Pstandard_CObject_Mfreeze
	.quad	_Pshadow_Pstandard_CObject_MgetClass
	.quad	_Pshadow_Pstandard_Cint_MtoString
	.quad	_Pshadow_Pstandard_Cint_Mabs
	.quad	_Pshadow_Pstandard_Cint_Madd_Pshadow_Pstandard_Cint
	.quad	_Pshadow_Pstandard_Cint_Mcompare_Pshadow_Pstandard_Cint
	.quad	_Pshadow_Pstandard_Cint_Mdivide_Pshadow_Pstandard_Cint
	.quad	_Pshadow_Pstandard_Cint_Mhash
	.quad	_Pshadow_Pstandard_Cint_Mmax_Pshadow_Pstandard_Cint
	.quad	_Pshadow_Pstandard_Cint_Mmin_Pshadow_Pstandard_Cint
	.quad	_Pshadow_Pstandard_Cint_Mmodulus_Pshadow_Pstandard_Cint
	.quad	_Pshadow_Pstandard_Cint_Mmultiply_Pshadow_Pstandard_Cint
	.quad	_Pshadow_Pstandard_Cint_Msubtract_Pshadow_Pstandard_Cint
	.quad	_Pshadow_Pstandard_Cint_MtoString_Pshadow_Pstandard_Cuint
	.size	_Pshadow_Pstandard_Cint_Mclass, 200

	.type	.L_array0117,@object    # @_array0117
.L_array0117:
	.ascii	 "int"
	.size	.L_array0117, 3

	.type	.L_string0118,@object   # @_string0118
	.align	16
.L_string0118:
	.quad	_Pshadow_Pstandard_CString_Mclass
	.quad	.L_array0117
	.long	3                       # 0x3
	.zero	4
	.byte	1                       # 0x1
	.zero	7
	.size	.L_string0118, 32

	.type	_Pshadow_Pstandard_Clong_Mclass,@object # @_Pshadow_Pstandard_Clong_Mclass
	.globl	_Pshadow_Pstandard_Clong_Mclass
	.align	16
_Pshadow_Pstandard_Clong_Mclass:
	.quad	_Pshadow_Pstandard_CClass_Mclass
	.zero	16
	.quad	0
	.quad	.L_string0138
	.quad	_Pshadow_Pstandard_CObject_Mclass
	.long	2                       # 0x2
	.long	(0+16)&-1
	.long	(0+8)&-1
	.zero	4
	.quad	_Pshadow_Pstandard_CObject_Mcopy
	.quad	_Pshadow_Pstandard_Clong_Mcreate
	.quad	_Pshadow_Pstandard_CObject_Mequals_Pshadow_Pstandard_CObject
	.quad	_Pshadow_Pstandard_CObject_Mfreeze
	.quad	_Pshadow_Pstandard_CObject_MgetClass
	.quad	_Pshadow_Pstandard_Clong_MtoString
	.quad	_Pshadow_Pstandard_Clong_Mabs
	.quad	_Pshadow_Pstandard_Clong_Madd_Pshadow_Pstandard_Clong
	.quad	_Pshadow_Pstandard_Clong_Mcompare_Pshadow_Pstandard_Clong
	.quad	_Pshadow_Pstandard_Clong_Mdivide_Pshadow_Pstandard_Clong
	.quad	_Pshadow_Pstandard_Clong_Mhash
	.quad	_Pshadow_Pstandard_Clong_Mmax_Pshadow_Pstandard_Clong
	.quad	_Pshadow_Pstandard_Clong_Mmin_Pshadow_Pstandard_Clong
	.quad	_Pshadow_Pstandard_Clong_Mmodulus_Pshadow_Pstandard_Clong
	.quad	_Pshadow_Pstandard_Clong_Mmultiply_Pshadow_Pstandard_Clong
	.quad	_Pshadow_Pstandard_Clong_Msubtract_Pshadow_Pstandard_Clong
	.quad	_Pshadow_Pstandard_Clong_MtoString_Pshadow_Pstandard_Culong
	.size	_Pshadow_Pstandard_Clong_Mclass, 200

	.type	.L_array0137,@object    # @_array0137
	.section	.rodata.cst4,"aM",@progbits,4
.L_array0137:
	.ascii	 "long"
	.size	.L_array0137, 4

	.type	.L_string0138,@object   # @_string0138
	.section	.rodata,"a",@progbits
	.align	16
.L_string0138:
	.quad	_Pshadow_Pstandard_CString_Mclass
	.quad	.L_array0137
	.long	4                       # 0x4
	.zero	4
	.byte	1                       # 0x1
	.zero	7
	.size	.L_string0138, 32

	.type	_Pshadow_Pstandard_CMutableString_Mclass,@object # @_Pshadow_Pstandard_CMutableString_Mclass
	.globl	_Pshadow_Pstandard_CMutableString_Mclass
	.align	16
_Pshadow_Pstandard_CMutableString_Mclass:
	.quad	_Pshadow_Pstandard_CClass_Mclass
	.zero	16
	.quad	0
	.quad	.L_string0158
	.quad	_Pshadow_Pstandard_CObject_Mclass
	.long	0                       # 0x0
	.long	(0+32)&-1
	.long	(0+8)&-1
	.zero	4
	.quad	_Pshadow_Pstandard_CObject_Mcopy
	.quad	_Pshadow_Pstandard_CMutableString_Mcreate
	.quad	_Pshadow_Pstandard_CObject_Mequals_Pshadow_Pstandard_CObject
	.quad	_Pshadow_Pstandard_CObject_Mfreeze
	.quad	_Pshadow_Pstandard_CObject_MgetClass
	.quad	_Pshadow_Pstandard_CMutableString_MtoString
	.quad	_Pshadow_Pstandard_CMutableString_Mappend_Pshadow_Pstandard_CObject
	.quad	_Pshadow_Pstandard_CMutableString_Mcapacity
	.quad	_Pshadow_Pstandard_CMutableString_Mcreate_Pshadow_Pstandard_Cint
	.quad	_Pshadow_Pstandard_CMutableString_Mcreate_Pshadow_Pstandard_CObject
	.quad	_Pshadow_Pstandard_CMutableString_MensureCapacity_Pshadow_Pstandard_Cint
	.quad	_Pshadow_Pstandard_CMutableString_Mreverse
	.quad	_Pshadow_Pstandard_CMutableString_Msize
	.size	_Pshadow_Pstandard_CMutableString_Mclass, 168

	.type	.L_array0157,@object    # @_array0157
	.align	16
.L_array0157:
	.ascii	 "shadow.standard@MutableString"
	.size	.L_array0157, 29

	.type	.L_string0158,@object   # @_string0158
	.align	16
.L_string0158:
	.quad	_Pshadow_Pstandard_CString_Mclass
	.quad	.L_array0157
	.long	29                      # 0x1d
	.zero	4
	.byte	1                       # 0x1
	.zero	7
	.size	.L_string0158, 32

	.type	_Pshadow_Pstandard_CObject_Mclass,@object # @_Pshadow_Pstandard_CObject_Mclass
	.globl	_Pshadow_Pstandard_CObject_Mclass
	.align	16
_Pshadow_Pstandard_CObject_Mclass:
	.quad	_Pshadow_Pstandard_CClass_Mclass
	.zero	16
	.quad	0
	.quad	.L_string0302
	.quad	0
	.long	0                       # 0x0
	.long	(0+8)&-1
	.long	(0+8)&-1
	.zero	4
	.quad	_Pshadow_Pstandard_CObject_Mcopy
	.quad	_Pshadow_Pstandard_CObject_Mcreate
	.quad	_Pshadow_Pstandard_CObject_Mequals_Pshadow_Pstandard_CObject
	.quad	_Pshadow_Pstandard_CObject_Mfreeze
	.quad	_Pshadow_Pstandard_CObject_MgetClass
	.quad	_Pshadow_Pstandard_CObject_MtoString
	.size	_Pshadow_Pstandard_CObject_Mclass, 112

	.type	.L_array0301,@object    # @_array0301
	.align	16
.L_array0301:
	.ascii	 "shadow.standard@Object"
	.size	.L_array0301, 22

	.type	.L_string0302,@object   # @_string0302
	.align	16
.L_string0302:
	.quad	_Pshadow_Pstandard_CString_Mclass
	.quad	.L_array0301
	.long	22                      # 0x16
	.zero	4
	.byte	1                       # 0x1
	.zero	7
	.size	.L_string0302, 32

	.type	_Pshadow_Pstandard_CReference_Mclass,@object # @_Pshadow_Pstandard_CReference_Mclass
	.globl	_Pshadow_Pstandard_CReference_Mclass
	.align	16
_Pshadow_Pstandard_CReference_Mclass:
	.quad	_Pshadow_Pstandard_CClass_Mclass
	.zero	16
	.quad	0
	.quad	.L_string0316
	.quad	_Pshadow_Pstandard_CObject_Mclass
	.long	0                       # 0x0
	.long	((0+8)&-1)*3
	.long	(0+8)&-1
	.zero	4
	.quad	_Pshadow_Pstandard_CObject_Mcopy
	.quad	_Pshadow_Pstandard_CReference_Mcreate
	.quad	_Pshadow_Pstandard_CObject_Mequals_Pshadow_Pstandard_CObject
	.quad	_Pshadow_Pstandard_CObject_Mfreeze
	.quad	_Pshadow_Pstandard_CObject_MgetClass
	.quad	_Pshadow_Pstandard_CReference_MtoString
	.quad	_Pshadow_Pstandard_CReference_Mcreate_CT
	.quad	_Pshadow_Pstandard_CReference_Mvalue
	.quad	_Pshadow_Pstandard_CReference_Mvalue_CT
	.size	_Pshadow_Pstandard_CReference_Mclass, 136

	.type	.L_array0315,@object    # @_array0315
	.align	16
.L_array0315:
	.ascii	 "shadow.standard@Reference<T>"
	.size	.L_array0315, 28

	.type	.L_string0316,@object   # @_string0316
	.align	16
.L_string0316:
	.quad	_Pshadow_Pstandard_CString_Mclass
	.quad	.L_array0315
	.long	28                      # 0x1c
	.zero	4
	.byte	1                       # 0x1
	.zero	7
	.size	.L_string0316, 32

	.type	_Pshadow_Pstandard_Cshort_Mclass,@object # @_Pshadow_Pstandard_Cshort_Mclass
	.globl	_Pshadow_Pstandard_Cshort_Mclass
	.align	16
_Pshadow_Pstandard_Cshort_Mclass:
	.quad	_Pshadow_Pstandard_CClass_Mclass
	.zero	16
	.quad	0
	.quad	.L_string0322
	.quad	_Pshadow_Pstandard_CObject_Mclass
	.long	2                       # 0x2
	.long	(0+16)&-1
	.long	(0+2)&-1
	.zero	4
	.quad	_Pshadow_Pstandard_CObject_Mcopy
	.quad	_Pshadow_Pstandard_Cshort_Mcreate
	.quad	_Pshadow_Pstandard_CObject_Mequals_Pshadow_Pstandard_CObject
	.quad	_Pshadow_Pstandard_CObject_Mfreeze
	.quad	_Pshadow_Pstandard_CObject_MgetClass
	.quad	_Pshadow_Pstandard_CObject_MtoString
	.quad	_Pshadow_Pstandard_Cshort_Madd_Pshadow_Pstandard_Cshort
	.quad	_Pshadow_Pstandard_Cshort_Mcompare_Pshadow_Pstandard_Cshort
	.quad	_Pshadow_Pstandard_Cshort_Mdivide_Pshadow_Pstandard_Cshort
	.quad	_Pshadow_Pstandard_Cshort_Mmodulus_Pshadow_Pstandard_Cshort
	.quad	_Pshadow_Pstandard_Cshort_Mmultiply_Pshadow_Pstandard_Cshort
	.quad	_Pshadow_Pstandard_Cshort_Msubtract_Pshadow_Pstandard_Cshort
	.size	_Pshadow_Pstandard_Cshort_Mclass, 160

	.type	.L_array0321,@object    # @_array0321
.L_array0321:
	.ascii	 "short"
	.size	.L_array0321, 5

	.type	.L_string0322,@object   # @_string0322
	.align	16
.L_string0322:
	.quad	_Pshadow_Pstandard_CString_Mclass
	.quad	.L_array0321
	.long	5                       # 0x5
	.zero	4
	.byte	1                       # 0x1
	.zero	7
	.size	.L_string0322, 32

	.type	_Pshadow_Pstandard_CString_Mclass,@object # @_Pshadow_Pstandard_CString_Mclass
	.globl	_Pshadow_Pstandard_CString_Mclass
	.align	16
_Pshadow_Pstandard_CString_Mclass:
	.quad	_Pshadow_Pstandard_CClass_Mclass
	.zero	16
	.quad	0
	.quad	.L_string0328
	.quad	_Pshadow_Pstandard_CObject_Mclass
	.long	0                       # 0x0
	.long	(0+32)&-1
	.long	(0+8)&-1
	.zero	4
	.quad	_Pshadow_Pstandard_CObject_Mcopy
	.quad	_Pshadow_Pstandard_CString_Mcreate
	.quad	_Pshadow_Pstandard_CObject_Mequals_Pshadow_Pstandard_CObject
	.quad	_Pshadow_Pstandard_CObject_Mfreeze
	.quad	_Pshadow_Pstandard_CObject_MgetClass
	.quad	_Pshadow_Pstandard_CString_MtoString
	.quad	_Pshadow_Pstandard_CString_Mchars
	.quad	_Pshadow_Pstandard_CString_Mcompare_Pshadow_Pstandard_CString
	.quad	_Pshadow_Pstandard_CString_Mconcatenate_Pshadow_Pstandard_CString
	.quad	_Pshadow_Pstandard_CString_Mcreate_Pshadow_Pstandard_Cbyte_A1
	.quad	_Pshadow_Pstandard_CString_Mcreate_Pshadow_Pstandard_Ccode_A1
	.quad	_Pshadow_Pstandard_CString_Mcreate_Pshadow_Pstandard_CString
	.quad	_Pshadow_Pstandard_CString_Mequals_Pshadow_Pstandard_CString
	.quad	_Pshadow_Pstandard_CString_MgetChar_Pshadow_Pstandard_Cint
	.quad	_Pshadow_Pstandard_CString_MisEmpty
	.quad	_Pshadow_Pstandard_CString_Miterator
	.quad	_Pshadow_Pstandard_CString_Msize
	.quad	_Pshadow_Pstandard_CString_Msubstring_Pshadow_Pstandard_Cint_Pshadow_Pstandard_Cint
	.quad	_Pshadow_Pstandard_CString_MtoLowerCase
	.quad	_Pshadow_Pstandard_CString_MtoUpperCase
	.size	_Pshadow_Pstandard_CString_Mclass, 224

	.type	.L_array0327,@object    # @_array0327
	.align	16
.L_array0327:
	.ascii	 "shadow.standard@String"
	.size	.L_array0327, 22

	.type	.L_string0328,@object   # @_string0328
	.align	16
.L_string0328:
	.quad	_Pshadow_Pstandard_CString_Mclass
	.quad	.L_array0327
	.long	22                      # 0x16
	.zero	4
	.byte	1                       # 0x1
	.zero	7
	.size	.L_string0328, 32

	.type	_Pshadow_Pstandard_CString_IStringIterator_Mclass,@object # @_Pshadow_Pstandard_CString_IStringIterator_Mclass
	.globl	_Pshadow_Pstandard_CString_IStringIterator_Mclass
	.align	16
_Pshadow_Pstandard_CString_IStringIterator_Mclass:
	.quad	_Pshadow_Pstandard_CClass_Mclass
	.zero	16
	.quad	0
	.quad	.L_string0364
	.quad	_Pshadow_Pstandard_CObject_Mclass
	.long	0                       # 0x0
	.long	(0+24)&-1
	.long	(0+8)&-1
	.zero	4
	.quad	_Pshadow_Pstandard_CObject_Mcopy
	.quad	_Pshadow_Pstandard_CString_IStringIterator_Mcreate
	.quad	_Pshadow_Pstandard_CObject_Mequals_Pshadow_Pstandard_CObject
	.quad	_Pshadow_Pstandard_CObject_Mfreeze
	.quad	_Pshadow_Pstandard_CObject_MgetClass
	.quad	_Pshadow_Pstandard_CObject_MtoString
	.quad	_Pshadow_Pstandard_CString_IStringIterator_MhasNext
	.quad	_Pshadow_Pstandard_CString_IStringIterator_Mnext
	.size	_Pshadow_Pstandard_CString_IStringIterator_Mclass, 128

	.type	.L_array0363,@object    # @_array0363
	.align	16
.L_array0363:
	.ascii	 "shadow.standard@String:StringIterator"
	.size	.L_array0363, 37

	.type	.L_string0364,@object   # @_string0364
	.align	16
.L_string0364:
	.quad	_Pshadow_Pstandard_CString_Mclass
	.quad	.L_array0363
	.long	37                      # 0x25
	.zero	4
	.byte	1                       # 0x1
	.zero	7
	.size	.L_string0364, 32

	.type	_Pshadow_Pstandard_CSystem_Mclass,@object # @_Pshadow_Pstandard_CSystem_Mclass
	.globl	_Pshadow_Pstandard_CSystem_Mclass
	.align	16
_Pshadow_Pstandard_CSystem_Mclass:
	.quad	_Pshadow_Pstandard_CClass_Mclass
	.zero	16
	.quad	0
	.quad	.L_string0372
	.quad	_Pshadow_Pstandard_CObject_Mclass
	.long	0                       # 0x0
	.long	(0+8)&-1
	.long	(0+8)&-1
	.zero	4
	.quad	_Pshadow_Pstandard_CObject_Mcopy
	.quad	_Pshadow_Pstandard_CSystem_Mcreate
	.quad	_Pshadow_Pstandard_CObject_Mequals_Pshadow_Pstandard_CObject
	.quad	_Pshadow_Pstandard_CObject_Mfreeze
	.quad	_Pshadow_Pstandard_CObject_MgetClass
	.quad	_Pshadow_Pstandard_CObject_MtoString
	.quad	_Pshadow_Pstandard_CSystem_MnanoTime
	.size	_Pshadow_Pstandard_CSystem_Mclass, 120

	.type	_Pshadow_Pstandard_CSystem_Minstance,@object # @_Pshadow_Pstandard_CSystem_Minstance
	.bss
	.globl	_Pshadow_Pstandard_CSystem_Minstance
	.align	8
_Pshadow_Pstandard_CSystem_Minstance:
	.quad	0
	.size	_Pshadow_Pstandard_CSystem_Minstance, 8

	.type	.L_array0371,@object    # @_array0371
	.section	.rodata,"a",@progbits
	.align	16
.L_array0371:
	.ascii	 "shadow.standard@System"
	.size	.L_array0371, 22

	.type	.L_string0372,@object   # @_string0372
	.align	16
.L_string0372:
	.quad	_Pshadow_Pstandard_CString_Mclass
	.quad	.L_array0371
	.long	22                      # 0x16
	.zero	4
	.byte	1                       # 0x1
	.zero	7
	.size	.L_string0372, 32

	.type	_Pshadow_Pstandard_Cubyte_Mclass,@object # @_Pshadow_Pstandard_Cubyte_Mclass
	.globl	_Pshadow_Pstandard_Cubyte_Mclass
	.align	16
_Pshadow_Pstandard_Cubyte_Mclass:
	.quad	_Pshadow_Pstandard_CClass_Mclass
	.zero	16
	.quad	0
	.quad	.L_string0376
	.quad	_Pshadow_Pstandard_CObject_Mclass
	.long	2                       # 0x2
	.long	(0+16)&-1
	.long	(0+1)&-1
	.zero	4
	.quad	_Pshadow_Pstandard_CObject_Mcopy
	.quad	_Pshadow_Pstandard_Cubyte_Mcreate
	.quad	_Pshadow_Pstandard_CObject_Mequals_Pshadow_Pstandard_CObject
	.quad	_Pshadow_Pstandard_CObject_Mfreeze
	.quad	_Pshadow_Pstandard_CObject_MgetClass
	.quad	_Pshadow_Pstandard_Cubyte_MtoString
	.quad	_Pshadow_Pstandard_Cubyte_Madd_Pshadow_Pstandard_Cubyte
	.quad	_Pshadow_Pstandard_Cubyte_Mcompare_Pshadow_Pstandard_Cubyte
	.quad	_Pshadow_Pstandard_Cubyte_Mdivide_Pshadow_Pstandard_Cubyte
	.quad	_Pshadow_Pstandard_Cubyte_Mmodulus_Pshadow_Pstandard_Cubyte
	.quad	_Pshadow_Pstandard_Cubyte_Mmultiply_Pshadow_Pstandard_Cubyte
	.quad	_Pshadow_Pstandard_Cubyte_Msubtract_Pshadow_Pstandard_Cubyte
	.quad	_Pshadow_Pstandard_Cubyte_MtoString_Pshadow_Pstandard_Cubyte
	.size	_Pshadow_Pstandard_Cubyte_Mclass, 168

	.type	.L_array0375,@object    # @_array0375
.L_array0375:
	.ascii	 "ubyte"
	.size	.L_array0375, 5

	.type	.L_string0376,@object   # @_string0376
	.align	16
.L_string0376:
	.quad	_Pshadow_Pstandard_CString_Mclass
	.quad	.L_array0375
	.long	5                       # 0x5
	.zero	4
	.byte	1                       # 0x1
	.zero	7
	.size	.L_string0376, 32

	.type	_Pshadow_Pstandard_Cuint_Mclass,@object # @_Pshadow_Pstandard_Cuint_Mclass
	.globl	_Pshadow_Pstandard_Cuint_Mclass
	.align	16
_Pshadow_Pstandard_Cuint_Mclass:
	.quad	_Pshadow_Pstandard_CClass_Mclass
	.zero	16
	.quad	0
	.quad	.L_string0386
	.quad	_Pshadow_Pstandard_CObject_Mclass
	.long	2                       # 0x2
	.long	(0+16)&-1
	.long	(0+4)&-1
	.zero	4
	.quad	_Pshadow_Pstandard_CObject_Mcopy
	.quad	_Pshadow_Pstandard_Cuint_Mcreate
	.quad	_Pshadow_Pstandard_CObject_Mequals_Pshadow_Pstandard_CObject
	.quad	_Pshadow_Pstandard_CObject_Mfreeze
	.quad	_Pshadow_Pstandard_CObject_MgetClass
	.quad	_Pshadow_Pstandard_Cuint_MtoString
	.quad	_Pshadow_Pstandard_Cuint_Madd_Pshadow_Pstandard_Cuint
	.quad	_Pshadow_Pstandard_Cuint_Mcompare_Pshadow_Pstandard_Cuint
	.quad	_Pshadow_Pstandard_Cuint_Mdivide_Pshadow_Pstandard_Cuint
	.quad	_Pshadow_Pstandard_Cuint_Mhash
	.quad	_Pshadow_Pstandard_Cuint_Mmax_Pshadow_Pstandard_Cuint
	.quad	_Pshadow_Pstandard_Cuint_Mmin_Pshadow_Pstandard_Cuint
	.quad	_Pshadow_Pstandard_Cuint_Mmodulus_Pshadow_Pstandard_Cuint
	.quad	_Pshadow_Pstandard_Cuint_Mmultiply_Pshadow_Pstandard_Cuint
	.quad	_Pshadow_Pstandard_Cuint_Msubtract_Pshadow_Pstandard_Cuint
	.quad	_Pshadow_Pstandard_Cuint_MtoString_Pshadow_Pstandard_Cuint
	.size	_Pshadow_Pstandard_Cuint_Mclass, 192

	.type	.L_array0385,@object    # @_array0385
	.section	.rodata.cst4,"aM",@progbits,4
.L_array0385:
	.ascii	 "uint"
	.size	.L_array0385, 4

	.type	.L_string0386,@object   # @_string0386
	.section	.rodata,"a",@progbits
	.align	16
.L_string0386:
	.quad	_Pshadow_Pstandard_CString_Mclass
	.quad	.L_array0385
	.long	4                       # 0x4
	.zero	4
	.byte	1                       # 0x1
	.zero	7
	.size	.L_string0386, 32

	.type	_Pshadow_Pstandard_Culong_Mclass,@object # @_Pshadow_Pstandard_Culong_Mclass
	.globl	_Pshadow_Pstandard_Culong_Mclass
	.align	16
_Pshadow_Pstandard_Culong_Mclass:
	.quad	_Pshadow_Pstandard_CClass_Mclass
	.zero	16
	.quad	0
	.quad	.L_string0402
	.quad	_Pshadow_Pstandard_CObject_Mclass
	.long	2                       # 0x2
	.long	(0+16)&-1
	.long	(0+8)&-1
	.zero	4
	.quad	_Pshadow_Pstandard_CObject_Mcopy
	.quad	_Pshadow_Pstandard_Culong_Mcreate
	.quad	_Pshadow_Pstandard_CObject_Mequals_Pshadow_Pstandard_CObject
	.quad	_Pshadow_Pstandard_CObject_Mfreeze
	.quad	_Pshadow_Pstandard_CObject_MgetClass
	.quad	_Pshadow_Pstandard_Culong_MtoString
	.quad	_Pshadow_Pstandard_Culong_Madd_Pshadow_Pstandard_Culong
	.quad	_Pshadow_Pstandard_Culong_Mcompare_Pshadow_Pstandard_Culong
	.quad	_Pshadow_Pstandard_Culong_Mdivide_Pshadow_Pstandard_Culong
	.quad	_Pshadow_Pstandard_Culong_Mmodulus_Pshadow_Pstandard_Culong
	.quad	_Pshadow_Pstandard_Culong_Mmultiply_Pshadow_Pstandard_Culong
	.quad	_Pshadow_Pstandard_Culong_Msubtract_Pshadow_Pstandard_Culong
	.quad	_Pshadow_Pstandard_Culong_MtoString_Pshadow_Pstandard_Culong
	.size	_Pshadow_Pstandard_Culong_Mclass, 168

	.type	.L_array0401,@object    # @_array0401
.L_array0401:
	.ascii	 "ulong"
	.size	.L_array0401, 5

	.type	.L_string0402,@object   # @_string0402
	.align	16
.L_string0402:
	.quad	_Pshadow_Pstandard_CString_Mclass
	.quad	.L_array0401
	.long	5                       # 0x5
	.zero	4
	.byte	1                       # 0x1
	.zero	7
	.size	.L_string0402, 32

	.type	_P_CUnexpectedNullException_Mclass,@object # @_P_CUnexpectedNullException_Mclass
	.globl	_P_CUnexpectedNullException_Mclass
	.align	16
_P_CUnexpectedNullException_Mclass:
	.quad	_Pshadow_Pstandard_CClass_Mclass
	.zero	16
	.quad	0
	.quad	.L_string0410
	.quad	_Pshadow_Pstandard_CException_Mclass
	.long	0                       # 0x0
	.long	(0+8)&-1
	.long	(0+8)&-1
	.zero	4
	.quad	_Pshadow_Pstandard_CObject_Mcopy
	.quad	_P_CUnexpectedNullException_Mcreate
	.quad	_Pshadow_Pstandard_CObject_Mequals_Pshadow_Pstandard_CObject
	.quad	_Pshadow_Pstandard_CObject_Mfreeze
	.quad	_Pshadow_Pstandard_CObject_MgetClass
	.quad	_Pshadow_Pstandard_CObject_MtoString
	.quad	_Pshadow_Pstandard_CException_Mcreate_Pshadow_Pstandard_CString
	.quad	_Pshadow_Pstandard_CException_Mmessage
	.quad	_Pshadow_Pstandard_CException_Mthrow__
	.size	_P_CUnexpectedNullException_Mclass, 136

	.type	.L_array0409,@object    # @_array0409
	.align	16
.L_array0409:
	.ascii	 "default@UnexpectedNullException"
	.size	.L_array0409, 31

	.type	.L_string0410,@object   # @_string0410
	.align	16
.L_string0410:
	.quad	_Pshadow_Pstandard_CString_Mclass
	.quad	.L_array0409
	.long	31                      # 0x1f
	.zero	4
	.byte	1                       # 0x1
	.zero	7
	.size	.L_string0410, 32

	.type	_Pshadow_Pstandard_Cushort_Mclass,@object # @_Pshadow_Pstandard_Cushort_Mclass
	.globl	_Pshadow_Pstandard_Cushort_Mclass
	.align	16
_Pshadow_Pstandard_Cushort_Mclass:
	.quad	_Pshadow_Pstandard_CClass_Mclass
	.zero	16
	.quad	0
	.quad	.L_string0414
	.quad	_Pshadow_Pstandard_CObject_Mclass
	.long	2                       # 0x2
	.long	(0+16)&-1
	.long	(0+2)&-1
	.zero	4
	.quad	_Pshadow_Pstandard_CObject_Mcopy
	.quad	_Pshadow_Pstandard_Cushort_Mcreate
	.quad	_Pshadow_Pstandard_CObject_Mequals_Pshadow_Pstandard_CObject
	.quad	_Pshadow_Pstandard_CObject_Mfreeze
	.quad	_Pshadow_Pstandard_CObject_MgetClass
	.quad	_Pshadow_Pstandard_CObject_MtoString
	.quad	_Pshadow_Pstandard_Cushort_Madd_Pshadow_Pstandard_Cushort
	.quad	_Pshadow_Pstandard_Cushort_Mcompare_Pshadow_Pstandard_Cushort
	.quad	_Pshadow_Pstandard_Cushort_Mdivide_Pshadow_Pstandard_Cushort
	.quad	_Pshadow_Pstandard_Cushort_Mmodulus_Pshadow_Pstandard_Cushort
	.quad	_Pshadow_Pstandard_Cushort_Mmultiply_Pshadow_Pstandard_Cushort
	.quad	_Pshadow_Pstandard_Cushort_Msubtract_Pshadow_Pstandard_Cushort
	.size	_Pshadow_Pstandard_Cushort_Mclass, 160

	.type	.L_array0413,@object    # @_array0413
.L_array0413:
	.ascii	 "ushort"
	.size	.L_array0413, 6

	.type	.L_string0414,@object   # @_string0414
	.align	16
.L_string0414:
	.quad	_Pshadow_Pstandard_CString_Mclass
	.quad	.L_array0413
	.long	6                       # 0x6
	.zero	4
	.byte	1                       # 0x1
	.zero	7
	.size	.L_string0414, 32

	.type	_Pshadow_Pio_CConsole_Mclass,@object # @_Pshadow_Pio_CConsole_Mclass
	.globl	_Pshadow_Pio_CConsole_Mclass
	.align	16
_Pshadow_Pio_CConsole_Mclass:
	.quad	_Pshadow_Pstandard_CClass_Mclass
	.zero	16
	.quad	0
	.quad	.L_string0422
	.quad	_Pshadow_Pstandard_CObject_Mclass
	.long	0                       # 0x0
	.long	(0+16)&-1
	.long	(0+8)&-1
	.zero	4
	.quad	_Pshadow_Pstandard_CObject_Mcopy
	.quad	_Pshadow_Pio_CConsole_Mcreate
	.quad	_Pshadow_Pstandard_CObject_Mequals_Pshadow_Pstandard_CObject
	.quad	_Pshadow_Pstandard_CObject_Mfreeze
	.quad	_Pshadow_Pstandard_CObject_MgetClass
	.quad	_Pshadow_Pstandard_CObject_MtoString
	.quad	_Pshadow_Pio_CConsole_Mprint_Pshadow_Pstandard_CObject
	.quad	_Pshadow_Pio_CConsole_Mprint_Pshadow_Pstandard_CString
	.quad	_Pshadow_Pio_CConsole_MprintError_Pshadow_Pstandard_CObject
	.quad	_Pshadow_Pio_CConsole_MprintError_Pshadow_Pstandard_CString
	.quad	_Pshadow_Pio_CConsole_MprintErrorLine_Pshadow_Pstandard_CObject
	.quad	_Pshadow_Pio_CConsole_MprintErrorLine
	.quad	_Pshadow_Pio_CConsole_MprintLine_Pshadow_Pstandard_CObject
	.quad	_Pshadow_Pio_CConsole_MprintLine
	.quad	_Pshadow_Pio_CConsole_MreadByte
	.quad	_Pshadow_Pio_CConsole_MreadCode
	.quad	_Pshadow_Pio_CConsole_MreadLine
	.size	_Pshadow_Pio_CConsole_Mclass, 200

	.type	_Pshadow_Pio_CConsole_Minstance,@object # @_Pshadow_Pio_CConsole_Minstance
	.bss
	.globl	_Pshadow_Pio_CConsole_Minstance
	.align	8
_Pshadow_Pio_CConsole_Minstance:
	.quad	0
	.size	_Pshadow_Pio_CConsole_Minstance, 8

	.type	.L_array0421,@object    # @_array0421
	.section	.rodata,"a",@progbits
	.align	16
.L_array0421:
	.ascii	 "shadow.io@Console"
	.size	.L_array0421, 17

	.type	.L_string0422,@object   # @_string0422
	.align	16
.L_string0422:
	.quad	_Pshadow_Pstandard_CString_Mclass
	.quad	.L_array0421
	.long	17                      # 0x11
	.zero	4
	.byte	1                       # 0x1
	.zero	7
	.size	.L_string0422, 32

	.type	.L_array1423,@object    # @_array1423
	.section	.rodata.cst4,"aM",@progbits,4
.L_array1423:
	.ascii	 "null"
	.size	.L_array1423, 4

	.type	.L_string1424,@object   # @_string1424
	.section	.rodata,"a",@progbits
	.align	16
.L_string1424:
	.quad	_Pshadow_Pstandard_CString_Mclass
	.quad	.L_array1423
	.long	4                       # 0x4
	.zero	4
	.byte	1                       # 0x1
	.zero	7
	.size	.L_string1424, 32

	.type	_Pshadow_Putility_CArrayList_IArrayListIterator_Mclass,@object # @_Pshadow_Putility_CArrayList_IArrayListIterator_Mclass
	.globl	_Pshadow_Putility_CArrayList_IArrayListIterator_Mclass
	.align	16
_Pshadow_Putility_CArrayList_IArrayListIterator_Mclass:
	.quad	_Pshadow_Pstandard_CClass_Mclass
	.zero	16
	.quad	0
	.quad	.L_string0440
	.quad	_Pshadow_Pstandard_CObject_Mclass
	.long	0                       # 0x0
	.long	(0+32)&-1
	.long	(0+8)&-1
	.zero	4
	.quad	_Pshadow_Pstandard_CObject_Mcopy
	.quad	_Pshadow_Putility_CArrayList_IArrayListIterator_Mcreate
	.quad	_Pshadow_Pstandard_CObject_Mequals_Pshadow_Pstandard_CObject
	.quad	_Pshadow_Pstandard_CObject_Mfreeze
	.quad	_Pshadow_Pstandard_CObject_MgetClass
	.quad	_Pshadow_Pstandard_CObject_MtoString
	.quad	_Pshadow_Putility_CArrayList_IArrayListIterator_MhasNext
	.quad	_Pshadow_Putility_CArrayList_IArrayListIterator_Mnext
	.size	_Pshadow_Putility_CArrayList_IArrayListIterator_Mclass, 128

	.type	.L_array0439,@object    # @_array0439
	.align	16
.L_array0439:
	.ascii	 "shadow.utility@ArrayList:ArrayListIterator<V>"
	.size	.L_array0439, 45

	.type	.L_string0440,@object   # @_string0440
	.align	16
.L_string0440:
	.quad	_Pshadow_Pstandard_CString_Mclass
	.quad	.L_array0439
	.long	45                      # 0x2d
	.zero	4
	.byte	1                       # 0x1
	.zero	7
	.size	.L_string0440, 32

	.type	_Pshadow_Putility_CArrayList_Mclass,@object # @_Pshadow_Putility_CArrayList_Mclass
	.globl	_Pshadow_Putility_CArrayList_Mclass
	.align	16
_Pshadow_Putility_CArrayList_Mclass:
	.quad	_Pshadow_Pstandard_CClass_Mclass
	.zero	16
	.quad	0
	.quad	.L_string0444
	.quad	_Pshadow_Pstandard_CObject_Mclass
	.long	0                       # 0x0
	.long	(0+40)&-1
	.long	(0+8)&-1
	.zero	4
	.quad	_Pshadow_Pstandard_CObject_Mcopy
	.quad	_Pshadow_Putility_CArrayList_Mcreate
	.quad	_Pshadow_Pstandard_CObject_Mequals_Pshadow_Pstandard_CObject
	.quad	_Pshadow_Pstandard_CObject_Mfreeze
	.quad	_Pshadow_Pstandard_CObject_MgetClass
	.quad	_Pshadow_Pstandard_CObject_MtoString
	.quad	_Pshadow_Putility_CArrayList_Madd_CV
	.quad	_Pshadow_Putility_CArrayList_Mclear
	.quad	_Pshadow_Putility_CArrayList_Mcontains_CV
	.quad	_Pshadow_Putility_CArrayList_Mdelete_Pshadow_Pstandard_Cint
	.quad	_Pshadow_Putility_CArrayList_Mindex_Pshadow_Pstandard_Cint
	.quad	_Pshadow_Putility_CArrayList_Mindex_Pshadow_Pstandard_Cint_CV
	.quad	_Pshadow_Putility_CArrayList_MindexOf_CV
	.quad	_Pshadow_Putility_CArrayList_Miterator
	.quad	_Pshadow_Putility_CArrayList_Mremove_CV
	.quad	_Pshadow_Putility_CArrayList_Msize
	.size	_Pshadow_Putility_CArrayList_Mclass, 192

	.type	.L_array0443,@object    # @_array0443
	.align	16
.L_array0443:
	.ascii	 "shadow.utility@ArrayList<V>"
	.size	.L_array0443, 27

	.type	.L_string0444,@object   # @_string0444
	.align	16
.L_string0444:
	.quad	_Pshadow_Pstandard_CString_Mclass
	.quad	.L_array0443
	.long	27                      # 0x1b
	.zero	4
	.byte	1                       # 0x1
	.zero	7
	.size	.L_string0444, 32

	.type	_P_CIllegalModificationException_Mclass,@object # @_P_CIllegalModificationException_Mclass
	.globl	_P_CIllegalModificationException_Mclass
	.align	16
_P_CIllegalModificationException_Mclass:
	.quad	_Pshadow_Pstandard_CClass_Mclass
	.zero	16
	.quad	0
	.quad	.L_string0470
	.quad	_Pshadow_Pstandard_CException_Mclass
	.long	0                       # 0x0
	.long	(0+8)&-1
	.long	(0+8)&-1
	.zero	4
	.quad	_Pshadow_Pstandard_CObject_Mcopy
	.quad	_P_CIllegalModificationException_Mcreate
	.quad	_Pshadow_Pstandard_CObject_Mequals_Pshadow_Pstandard_CObject
	.quad	_Pshadow_Pstandard_CObject_Mfreeze
	.quad	_Pshadow_Pstandard_CObject_MgetClass
	.quad	_Pshadow_Pstandard_CObject_MtoString
	.quad	_Pshadow_Pstandard_CException_Mcreate_Pshadow_Pstandard_CString
	.quad	_Pshadow_Pstandard_CException_Mmessage
	.quad	_Pshadow_Pstandard_CException_Mthrow__
	.size	_P_CIllegalModificationException_Mclass, 136

	.type	.L_array0469,@object    # @_array0469
	.align	16
.L_array0469:
	.ascii	 "default@IllegalModificationException"
	.size	.L_array0469, 36

	.type	.L_string0470,@object   # @_string0470
	.align	16
.L_string0470:
	.quad	_Pshadow_Pstandard_CString_Mclass
	.quad	.L_array0469
	.long	36                      # 0x24
	.zero	4
	.byte	1                       # 0x1
	.zero	7
	.size	.L_string0470, 32

	.type	_Pshadow_Putility_CRandom_Mclass,@object # @_Pshadow_Putility_CRandom_Mclass
	.globl	_Pshadow_Putility_CRandom_Mclass
	.align	16
_Pshadow_Putility_CRandom_Mclass:
	.quad	_Pshadow_Pstandard_CClass_Mclass
	.zero	16
	.quad	0
	.quad	.L_string0474
	.quad	_Pshadow_Pstandard_CObject_Mclass
	.long	0                       # 0x0
	.long	(0+8)&-1
	.long	(0+8)&-1
	.zero	4
	.quad	_Pshadow_Pstandard_CObject_Mcopy
	.quad	_Pshadow_Putility_CRandom_Mcreate
	.quad	_Pshadow_Pstandard_CObject_Mequals_Pshadow_Pstandard_CObject
	.quad	_Pshadow_Pstandard_CObject_Mfreeze
	.quad	_Pshadow_Pstandard_CObject_MgetClass
	.quad	_Pshadow_Pstandard_CObject_MtoString
	.quad	_Pshadow_Putility_CRandom_Mcreate_Pshadow_Pstandard_Culong
	.quad	_Pshadow_Putility_CRandom_MnextInt
	.quad	_Pshadow_Putility_CRandom_MnextInt_Pshadow_Pstandard_Cint
	.quad	_Pshadow_Putility_CRandom_MnextUInt
	.quad	_Pshadow_Putility_CRandom_MnextUInt_Pshadow_Pstandard_Cuint
	.quad	_Pshadow_Putility_CRandom_Mseed_Pshadow_Pstandard_Culong
	.size	_Pshadow_Putility_CRandom_Mclass, 160

	.type	.L_array0473,@object    # @_array0473
	.align	16
.L_array0473:
	.ascii	 "shadow.utility@Random"
	.size	.L_array0473, 21

	.type	.L_string0474,@object   # @_string0474
	.align	16
.L_string0474:
	.quad	_Pshadow_Pstandard_CString_Mclass
	.quad	.L_array0473
	.long	21                      # 0x15
	.zero	4
	.byte	1                       # 0x1
	.zero	7
	.size	.L_string0474, 32

	.type	_Pshadow_Ptest_CArrayTest_Mclass,@object # @_Pshadow_Ptest_CArrayTest_Mclass
	.globl	_Pshadow_Ptest_CArrayTest_Mclass
	.align	16
_Pshadow_Ptest_CArrayTest_Mclass:
	.quad	_Pshadow_Pstandard_CClass_Mclass
	.zero	16
	.quad	0
	.quad	.L_string0480
	.quad	_Pshadow_Pstandard_CObject_Mclass
	.long	0                       # 0x0
	.long	(0+8)&-1
	.long	(0+8)&-1
	.zero	4
	.quad	_Pshadow_Pstandard_CObject_Mcopy
	.quad	_Pshadow_Ptest_CArrayTest_Mcreate
	.quad	_Pshadow_Pstandard_CObject_Mequals_Pshadow_Pstandard_CObject
	.quad	_Pshadow_Pstandard_CObject_Mfreeze
	.quad	_Pshadow_Pstandard_CObject_MgetClass
	.quad	_Pshadow_Pstandard_CObject_MtoString
	.quad	_Pshadow_Ptest_CArrayTest_Mmain_Pshadow_Pstandard_CString_A1
	.size	_Pshadow_Ptest_CArrayTest_Mclass, 120

	.type	.L_array0479,@object    # @_array0479
	.align	16
.L_array0479:
	.ascii	 "shadow.test@ArrayTest"
	.size	.L_array0479, 21

	.type	.L_string0480,@object   # @_string0480
	.align	16
.L_string0480:
	.quad	_Pshadow_Pstandard_CString_Mclass
	.quad	.L_array0479
	.long	21                      # 0x15
	.zero	4
	.byte	1                       # 0x1
	.zero	7
	.size	.L_string0480, 32

	.type	.L_array1481,@object    # @_array1481
	.section	.rodata.cst4,"aM",@progbits,4
.L_array1481:
	.ascii	 "four"
	.size	.L_array1481, 4

	.type	.L_string1482,@object   # @_string1482
	.section	.rodata,"a",@progbits
	.align	16
.L_string1482:
	.quad	_Pshadow_Pstandard_CString_Mclass
	.quad	.L_array1481
	.long	4                       # 0x4
	.zero	4
	.byte	1                       # 0x1
	.zero	7
	.size	.L_string1482, 32

	.type	.L_array2483,@object    # @_array2483
	.section	.rodata.cst4,"aM",@progbits,4
.L_array2483:
	.ascii	 "zero"
	.size	.L_array2483, 4

	.type	.L_string2484,@object   # @_string2484
	.section	.rodata,"a",@progbits
	.align	16
.L_string2484:
	.quad	_Pshadow_Pstandard_CString_Mclass
	.quad	.L_array2483
	.long	4                       # 0x4
	.zero	4
	.byte	1                       # 0x1
	.zero	7
	.size	.L_string2484, 32

	.type	.L_array3485,@object    # @_array3485
.L_array3485:
	.ascii	 "one"
	.size	.L_array3485, 3

	.type	.L_string3486,@object   # @_string3486
	.align	16
.L_string3486:
	.quad	_Pshadow_Pstandard_CString_Mclass
	.quad	.L_array3485
	.long	3                       # 0x3
	.zero	4
	.byte	1                       # 0x1
	.zero	7
	.size	.L_string3486, 32

	.type	.L_array4487,@object    # @_array4487
.L_array4487:
	.ascii	 "two"
	.size	.L_array4487, 3

	.type	.L_string4488,@object   # @_string4488
	.align	16
.L_string4488:
	.quad	_Pshadow_Pstandard_CString_Mclass
	.quad	.L_array4487
	.long	3                       # 0x3
	.zero	4
	.byte	1                       # 0x1
	.zero	7
	.size	.L_string4488, 32

	.type	.Lseparator.data,@object # @separator.data
.Lseparator.data:
	.ascii	 ": "
	.size	.Lseparator.data, 2

	.type	.Lseparator,@object     # @separator
	.align	16
.Lseparator:
	.quad	_Pshadow_Pstandard_CString_Mclass
	.quad	.Lseparator.data
	.long	2                       # 0x2
	.zero	4
	.byte	1                       # 0x1
	.zero	7
	.size	.Lseparator, 32


	.section	".note.GNU-stack","",@progbits
