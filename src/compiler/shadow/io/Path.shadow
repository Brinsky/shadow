immutable class shadow.io@Path
{
	String[] components = String:create[0];
	public create()
	{
	}
	public create( String path )
	{
		int count = 1;
		for ( int i = 0; i < path->size; i += 1 )
			if ( path.getChar(i) == cast<byte>this->separator )
				count += 1;
		components = String:create[count];
		int index = 0, start = 0;
		for ( int i = 0; i < path->size; i += 1 )
		{
			if ( path.getChar(i) == cast<byte>this->separator )
			{
				components[index] = path.substring(start, i);
				index += 1;
				start = i + 1;
			}
		}
	}
	public native get separator() => ( code );
	public immutable toString() => ( String )
	{
		if ( components->size == 0 )
			return "Unknown";
		auto string = MutableString:create(components[0]);
		for ( int i = 1; i < components->size; i += 1 )
			string.append(this->separator).append(components[i]);
		return #string;
	}
}
