*****************************************************************************
*** THIS IS A LIST OF THINGS THAT NEED TO BE DONE                         ***
*** PUT YOUR NAME NEXT TO SOMETHING IF YOU'RE WORKING ON IT               ***
*** DELETE THE LINE FROM THE LIST IF IT'S DONE AND WORKING                ***
*** NOTHING IS DONE UNTIL YOU'VE ALSO CREATED A REGRESSION TEST FOR IT!!! ***
*****************************************************************************

=> Ver 1 Features <=
* These are the basic list of features we're going for with v1 *
- Basic numeric & control flow stuff
- Arrays w/checking of bounds
- Null pointer checking
- Inheritance & interface implementation (interfaces are type-check only, right?)
- Exceptions
- Native code blocks so we can generate a CLib
- Explicit delete

=> Ver 2 Features <=
* This list is here to show explicitly what is NOT in v1 *
- Uninit var warning
- Garbage collection
- Views
- Lambdas (delegates)
- Generics/templates

Break generics

class Container<T>
{
	T value;
}

class ArrayList<T> implements Iterable<T>
{}

class StringList extends ArrayList<String>
{}

class Mixed<T> extends HashMap<int, T>
{}

class Outer<T>
{
	public class Inner
	{
		T stuff;	
	}
}

class Outer<T>
{
	public static class Inner
	{
		T stuff;	
	}
}

class Outer<T>
{
	public class Inner<U>
	{
		U stuff;	
	}
}

class Outer<T>
{
	public class Inner<T> //legal?
	{
		T stuff;
	}
}




=> General <=
- *Need a better/good way to report errors*
- ** Col & line numbers are "wrong" for multiple AST nodes **

=> PARSING <=
- Should string be listed as a primitive type when its semantics will always be reference style?
- Should we add modifiers to views ??  - Probably not?
Bill: Native blocks

=> TYPE CHECKING (Barry) <=
- Add isField to ASTNodes that are field names (DONE)
- Multiple files
- Meta file serialization of type information
- Make sure that fields are ONLY public or private (DONE)

=> TAC <=
- All numeric and control flow stuff
- Arrays w/checking of bounds
- Null pointer checking
- Inheritance & interface implementation (interfaces are type-check only, right?) (BJW: Not entirely)
- Exceptions
- Native code blocks so we can generate a CLib (DONE)
- Explicit delete
