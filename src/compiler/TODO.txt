*****************************************************************************
*** THIS IS A LIST OF THINGS THAT NEED TO BE DONE                         ***
*** PUT YOUR NAME NEXT TO SOMETHING IF YOU'RE WORKING ON IT               ***
*** DELETE THE LINE FROM THE LIST IF IT'S DONE AND WORKING                ***
*** NOTHING IS DONE UNTIL YOU'VE ALSO CREATED A REGRESSION TEST FOR IT!!! ***
*****************************************************************************

=> General <=
- *Need a better/good way to report errors*
- ** Col & line numbers are "wrong" for multiple AST nodes **
- Command-line args for each stage of the compile
- Better over-all compiler interface/Main method

=> Barry <=
- Check the equals & hashCode methods I've created for MethodSignature & Type

=> PARSING <=
- Add error (Errors are like exceptions except uncatchable and cannot have public methods)
- Check literals to see if they can be divided into double and float, int and long, etc.
  - So this is an issue for now with type-checking because we don't have promotion from float -> double
    I don't think -- without a ton of effort that isn't worth it -- that we can determine that 1 is a ubyte but 2^20 must be an in
    So I think we should make these things whatever the architecture provides. So for 64-bit it's a long and double(??) and for 32-bit it's an int and float
    We could also make everything an int & float unless you specify a l/L or d/D after the literal... I like this idea
- Should string be listed as a primitive type when its semantics will always be reference style?
- Should we add modifiers to views ??


=> TYPE CHECKING <=
** CURRENT STATUS **
- We need to do type-checking in 2 passes: 1) methods & fields, 2) inside the methods
- Currently gathers all methods & fields and complains if there is an issue
** TO DO **
- Add checking for assignments
- Add checking for operators: + - etc
- Add checking for method calls
- Include checking with literals for all of the above
- Add subtyping rules

- Add list of all types.  After the first pass, add in links to parent classes (and enclosing classes?).  Assigning the type for a variable declaration should *always* be a lookup and never and construction.  

- Improve scoping so that we don't just return the first symbol we actually get the correct one

Add visitor methods in ClassChecker for:

*************************************************************************
* NOTE: For most of these, we want to do our work on the second pass.   *
*       Otherwise, we won't have type info for lower nodes yet.         *
*************************************************************************

Bill do these:

   * I don't think we need to type-check these in any way *
  ASTCompilationUnit
  ASTPackageDeclaration
  ASTImportDeclaration
  ASTClassOrInterfaceBody
  ASTClassOrInterfaceBodyDeclaration
  ASTModifiers
  
  * Version 2 *
  ASTViewDeclaration
  ASTStaticArrayType
  
  ASTTypeDeclaration
  DONE - ASTClassOrInterfaceDeclaration
  DONE - ASTExtendsList
  DONE - ASTImplementsList
  ASTEnumDeclaration
  ASTEnumBody
  ASTEnumConstant
  ASTTypeParameters
  ASTTypeParameter
  ASTTypeBound
  ASTFieldDeclaration
  ASTVariableDeclarator
  ASTVariableDeclaratorId
  ASTVariableInitializer
  ASTArrayInitializer
  ASTMethodDeclaration
  ASTMethodDeclarator
  ASTFormalParameters
  ASTFormalParameter
  ASTConstructorDeclaration
  ASTDestructorDeclaration
  ASTExplicitConstructorInvocation
  ASTInitializer
  ASTType
  ASTReferenceType
  ASTFunctionType
  ASTClassOrInterfaceType
  ASTTypeArguments
  ASTTypeArgument
  ASTWildcardBounds
  ASTPrimitiveType
  ASTResultType
  ASTResultTypes
  ASTName
  ASTNameList
  ASTPrimaryExpression
  
  Barry do these:
  
  ASTExpression
  ASTIsExpression	//needs richer type information
  ASTCastExpression //needs richer type information
  ASTSequence
  ASTMemberSelector
  ASTPrimaryPrefix
  ASTPrimarySuffix
  ASTLiteral
  ASTBooleanLiteral
  ASTNullLiteral
  ASTArguments
  ASTArgumentList
  ASTAllocationExpression
  ASTArrayDimsAndInits
  ASTStatement
  ASTAssertStatement
  ASTLabeledStatement
  ASTBlock
  ASTBlockStatement
  ASTLocalVariableDeclaration
  ASTEmptyStatement
  ASTStatementExpression
  ASTSwitchStatement
  ASTSwitchLabel
  ASTIfStatement
  ASTWhileStatement
  ASTDoStatement
  ASTForeachStatement
  ASTForStatement
  ASTForInit
  ASTStatementExpressionList
  ASTForUpdate
  ASTBreakStatement
  ASTContinueStatement
  ASTReturnStatement
  ASTThrowStatement
  ASTSynchronizedStatement
  ASTTryStatement
  ASTMemberValuePairs
  ASTMemberValuePair
  ASTMemberValue
  ASTMemberValueArrayInitializer
  ASTDefaultValue